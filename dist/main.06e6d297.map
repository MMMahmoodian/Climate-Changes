{"version":3,"sources":["node_modules\\ol\\util.js","node_modules\\ol\\AssertionError.js","node_modules\\ol\\CollectionEventType.js","node_modules\\ol\\ObjectEventType.js","node_modules\\ol\\obj.js","node_modules\\ol\\events.js","node_modules\\ol\\Disposable.js","node_modules\\ol\\functions.js","node_modules\\ol\\events\\Event.js","node_modules\\ol\\events\\Target.js","node_modules\\ol\\events\\EventType.js","node_modules\\ol\\Observable.js","node_modules\\ol\\Object.js","node_modules\\ol\\Collection.js","node_modules\\ol\\MapEvent.js","node_modules\\ol\\MapBrowserEvent.js","node_modules\\ol\\webgl.js","node_modules\\ol\\has.js","node_modules\\ol\\MapBrowserEventType.js","node_modules\\ol\\MapBrowserPointerEvent.js","node_modules\\ol\\pointer\\EventType.js","node_modules\\ol\\pointer\\EventSource.js","node_modules\\ol\\pointer\\MouseSource.js","node_modules\\ol\\pointer\\MsSource.js","node_modules\\ol\\pointer\\NativeSource.js","node_modules\\ol\\pointer\\PointerEvent.js","node_modules\\ol\\array.js","node_modules\\ol\\pointer\\TouchSource.js","node_modules\\ol\\pointer\\PointerEventHandler.js","node_modules\\ol\\MapBrowserEventHandler.js","node_modules\\ol\\MapEventType.js","node_modules\\ol\\MapProperty.js","node_modules\\ol\\render\\EventType.js","node_modules\\ol\\TileState.js","node_modules\\ol\\asserts.js","node_modules\\ol\\structs\\PriorityQueue.js","node_modules\\ol\\TileQueue.js","node_modules\\ol\\tilegrid\\common.js","node_modules\\ol\\math.js","node_modules\\ol\\centerconstraint.js","node_modules\\ol\\resolutionconstraint.js","node_modules\\ol\\rotationconstraint.js","node_modules\\ol\\ViewHint.js","node_modules\\ol\\ViewProperty.js","node_modules\\ol\\string.js","node_modules\\ol\\coordinate.js","node_modules\\ol\\easing.js","node_modules\\ol\\extent\\Corner.js","node_modules\\ol\\extent\\Relationship.js","node_modules\\ol\\extent.js","node_modules\\ol\\geom\\GeometryType.js","node_modules\\ol\\geom\\GeometryLayout.js","node_modules\\ol\\geom\\flat\\transform.js","node_modules\\ol\\sphere.js","node_modules\\ol\\proj\\Units.js","node_modules\\ol\\proj\\Projection.js","node_modules\\ol\\proj\\epsg3857.js","node_modules\\ol\\proj\\epsg4326.js","node_modules\\ol\\proj\\projections.js","node_modules\\ol\\proj\\transforms.js","node_modules\\ol\\proj.js","node_modules\\ol\\transform.js","node_modules\\ol\\geom\\Geometry.js","node_modules\\ol\\geom\\SimpleGeometry.js","node_modules\\ol\\geom\\flat\\area.js","node_modules\\ol\\geom\\flat\\closest.js","node_modules\\ol\\geom\\flat\\deflate.js","node_modules\\ol\\geom\\flat\\inflate.js","node_modules\\ol\\geom\\flat\\simplify.js","node_modules\\ol\\geom\\LinearRing.js","node_modules\\ol\\geom\\Point.js","node_modules\\ol\\geom\\flat\\contains.js","node_modules\\ol\\geom\\flat\\interiorpoint.js","node_modules\\ol\\geom\\flat\\segments.js","node_modules\\ol\\geom\\flat\\intersectsextent.js","node_modules\\ol\\geom\\flat\\reverse.js","node_modules\\ol\\geom\\flat\\orient.js","node_modules\\ol\\geom\\Polygon.js","node_modules\\ol\\View.js","node_modules\\ol\\dom.js","node_modules\\ol\\layer\\Property.js","node_modules\\ol\\layer\\Base.js","node_modules\\ol\\source\\State.js","node_modules\\ol\\layer\\Group.js","node_modules\\ol\\size.js","node_modules\\ol\\PluggableMap.js","node_modules\\ol\\control\\Control.js","node_modules\\ol\\css.js","node_modules\\ol\\layer\\Layer.js","node_modules\\ol\\control\\Attribution.js","node_modules\\ol\\control\\Rotate.js","node_modules\\ol\\control\\Zoom.js","node_modules\\ol\\control\\util.js","node_modules\\ol\\Kinetic.js","node_modules\\ol\\interaction\\Property.js","node_modules\\ol\\interaction\\Interaction.js","node_modules\\ol\\interaction\\DoubleClickZoom.js","node_modules\\ol\\events\\condition.js","node_modules\\ol\\interaction\\Pointer.js","node_modules\\ol\\interaction\\DragPan.js","node_modules\\ol\\interaction\\DragRotate.js","node_modules\\ol\\render\\Box.js","node_modules\\ol\\interaction\\DragBox.js","node_modules\\ol\\interaction\\DragZoom.js","node_modules\\ol\\events\\KeyCode.js","node_modules\\ol\\interaction\\KeyboardPan.js","node_modules\\ol\\interaction\\KeyboardZoom.js","node_modules\\ol\\interaction\\MouseWheelZoom.js","node_modules\\ol\\interaction\\PinchRotate.js","node_modules\\ol\\interaction\\PinchZoom.js","node_modules\\ol\\interaction\\DragAndDrop.js","node_modules\\ol\\interaction\\DragRotateAndZoom.js","node_modules\\ol\\color.js","node_modules\\ol\\colorlike.js","node_modules\\ol\\ImageState.js","node_modules\\ol\\structs\\LRUCache.js","node_modules\\ol\\render\\canvas.js","node_modules\\ol\\style\\Image.js","node_modules\\ol\\style\\RegularShape.js","node_modules\\ol\\style\\Circle.js","node_modules\\ol\\style\\Fill.js","node_modules\\ol\\style\\Stroke.js","node_modules\\ol\\style\\Style.js","node_modules\\ol\\Feature.js","node_modules\\ol\\geom\\Circle.js","node_modules\\ol\\geom\\flat\\interpolate.js","node_modules\\ol\\geom\\flat\\length.js","node_modules\\ol\\geom\\LineString.js","node_modules\\ol\\geom\\MultiLineString.js","node_modules\\ol\\geom\\MultiPoint.js","node_modules\\ol\\geom\\flat\\center.js","node_modules\\ol\\geom\\MultiPolygon.js","node_modules\\ol\\LayerType.js","node_modules\\ol\\layer\\VectorRenderType.js","node_modules\\ol\\layer\\Vector.js","node_modules\\ol\\format\\FormatType.js","node_modules\\ol\\featureloader.js","node_modules\\ol\\loadingstrategy.js","node_modules\\ol\\source\\Source.js","node_modules\\ol\\source\\VectorEventType.js","node_modules\\quickselect\\quickselect.js","node_modules\\rbush\\index.js","node_modules\\ol\\structs\\RBush.js","node_modules\\ol\\source\\Vector.js","node_modules\\ol\\interaction\\Draw.js","node_modules\\ol\\interaction\\Extent.js","node_modules\\ol\\interaction\\Modify.js","node_modules\\ol\\interaction\\Select.js","node_modules\\ol\\interaction\\Snap.js","node_modules\\ol\\interaction\\Translate.js","node_modules\\ol\\interaction.js","node_modules\\ol\\reproj\\common.js","node_modules\\ol\\ImageBase.js","node_modules\\ol\\ImageCanvas.js","node_modules\\ol\\render\\Event.js","node_modules\\ol\\render\\VectorContext.js","node_modules\\ol\\render\\canvas\\Immediate.js","node_modules\\ol\\style\\IconImageCache.js","node_modules\\ol\\renderer\\Map.js","node_modules\\ol\\renderer\\canvas\\Map.js","node_modules\\ol\\renderer\\Layer.js","node_modules\\ol\\renderer\\canvas\\Layer.js","node_modules\\ol\\renderer\\canvas\\IntermediateCanvas.js","node_modules\\ol\\renderer\\canvas\\ImageLayer.js","node_modules\\ol\\TileRange.js","node_modules\\ol\\renderer\\canvas\\TileLayer.js","node_modules\\ol\\render\\ReplayGroup.js","node_modules\\ol\\render\\ReplayType.js","node_modules\\ol\\geom\\flat\\textpath.js","node_modules\\ol\\render\\canvas\\Instruction.js","node_modules\\ol\\render\\replay.js","node_modules\\ol\\render\\canvas\\Replay.js","node_modules\\ol\\render\\canvas\\ImageReplay.js","node_modules\\ol\\render\\canvas\\LineStringReplay.js","node_modules\\ol\\render\\canvas\\PolygonReplay.js","node_modules\\ol\\geom\\flat\\straightchunk.js","node_modules\\ol\\style\\TextPlacement.js","node_modules\\ol\\render\\canvas\\TextReplay.js","node_modules\\ol\\render\\canvas\\ReplayGroup.js","node_modules\\ol\\renderer\\vector.js","node_modules\\ol\\renderer\\canvas\\VectorLayer.js","node_modules\\ol\\layer\\VectorTileRenderType.js","node_modules\\ol\\renderer\\canvas\\VectorTileLayer.js","node_modules\\ol\\Map.js","node_modules\\ol\\format\\Feature.js","node_modules\\ol\\format\\JSONFeature.js","node_modules\\ol\\format\\EsriJSON.js","node_modules\\ol\\geom\\GeometryCollection.js","node_modules\\ol\\format\\GeoJSON.js","node_modules\\ol\\xml.js","node_modules\\ol\\format\\XMLFeature.js","node_modules\\ol\\format\\GMLBase.js","node_modules\\ol\\format\\xsd.js","node_modules\\ol\\format\\GML3.js","node_modules\\ol\\format\\GML.js","node_modules\\ol\\format\\GPX.js","node_modules\\ol\\format\\TextFeature.js","node_modules\\ol\\format\\IGC.js","node_modules\\ol\\style\\IconAnchorUnits.js","node_modules\\ol\\style\\IconImage.js","node_modules\\ol\\style\\IconOrigin.js","node_modules\\ol\\style\\Icon.js","node_modules\\ol\\style\\Text.js","node_modules\\ol\\format\\KML.js","node_modules\\ieee754\\index.js","node_modules\\pbf\\index.js","node_modules\\ol\\render\\Feature.js","node_modules\\ol\\format\\MVT.js","node_modules\\ol\\format\\XLink.js","node_modules\\ol\\format\\XML.js","node_modules\\ol\\format\\OWS.js","node_modules\\ol\\geom\\flat\\flip.js","node_modules\\ol\\format\\Polyline.js","node_modules\\ol\\format\\TopoJSON.js","node_modules\\ol\\format\\GML2.js","node_modules\\ol\\format\\filter\\Filter.js","node_modules\\ol\\format\\filter\\LogicalNary.js","node_modules\\ol\\format\\filter\\And.js","node_modules\\ol\\format\\filter\\Bbox.js","node_modules\\ol\\format\\filter\\Spatial.js","node_modules\\ol\\format\\filter\\Contains.js","node_modules\\ol\\format\\filter\\Comparison.js","node_modules\\ol\\format\\filter\\During.js","node_modules\\ol\\format\\filter\\ComparisonBinary.js","node_modules\\ol\\format\\filter\\EqualTo.js","node_modules\\ol\\format\\filter\\GreaterThan.js","node_modules\\ol\\format\\filter\\GreaterThanOrEqualTo.js","node_modules\\ol\\format\\filter\\Intersects.js","node_modules\\ol\\format\\filter\\IsBetween.js","node_modules\\ol\\format\\filter\\IsLike.js","node_modules\\ol\\format\\filter\\IsNull.js","node_modules\\ol\\format\\filter\\LessThan.js","node_modules\\ol\\format\\filter\\LessThanOrEqualTo.js","node_modules\\ol\\format\\filter\\Not.js","node_modules\\ol\\format\\filter\\NotEqualTo.js","node_modules\\ol\\format\\filter\\Or.js","node_modules\\ol\\format\\filter\\Within.js","node_modules\\ol\\format\\filter.js","node_modules\\ol\\format\\WFS.js","node_modules\\ol\\format\\WKT.js","node_modules\\ol\\format\\WMSCapabilities.js","node_modules\\ol\\format\\WMSGetFeatureInfo.js","node_modules\\ol\\format\\WMTSCapabilities.js","node_modules\\ol\\format.js","node_modules\\ol\\layer\\Heatmap.js","node_modules\\ol\\layer\\Image.js","node_modules\\ol\\layer\\TileProperty.js","node_modules\\ol\\layer\\Tile.js","node_modules\\ol\\layer\\VectorTile.js","node_modules\\ol\\layer.js","node_modules\\ol\\source\\common.js","node_modules\\ol\\Image.js","node_modules\\ol\\reproj.js","node_modules\\ol\\reproj\\Triangulation.js","node_modules\\ol\\reproj\\Image.js","node_modules\\ol\\source\\Image.js","node_modules\\ol\\source\\WMSServerType.js","node_modules\\ol\\uri.js","node_modules\\ol\\source\\ImageWMS.js","node_modules\\ol\\tilecoord.js","node_modules\\ol\\tileurlfunction.js","node_modules\\ol\\net.js","node_modules\\ol\\Tile.js","node_modules\\ol\\ImageTile.js","node_modules\\ol\\TileCache.js","node_modules\\ol\\reproj\\Tile.js","node_modules\\ol\\tilegrid\\TileGrid.js","node_modules\\ol\\tilegrid.js","node_modules\\ol\\source\\Tile.js","node_modules\\ol\\source\\TileEventType.js","node_modules\\ol\\source\\UrlTile.js","node_modules\\ol\\source\\TileImage.js","node_modules\\ol\\source\\BingMaps.js","node_modules\\ol\\source\\XYZ.js","node_modules\\ol\\source\\CartoDB.js","node_modules\\ol\\source\\Cluster.js","node_modules\\ol\\source\\ImageArcGISRest.js","node_modules\\ol\\source\\ImageCanvas.js","node_modules\\ol\\source\\ImageMapGuide.js","node_modules\\ol\\source\\ImageStatic.js","node_modules\\ol\\source\\OSM.js","node_modules\\pixelworks\\lib\\util.js","node_modules\\pixelworks\\lib\\processor.js","node_modules\\pixelworks\\lib\\index.js","node_modules\\ol\\source\\Raster.js","node_modules\\ol\\source\\Stamen.js","node_modules\\ol\\source\\TileArcGISRest.js","node_modules\\ol\\source\\TileDebug.js","node_modules\\ol\\source\\TileJSON.js","node_modules\\ol\\source\\TileWMS.js","node_modules\\ol\\source\\UTFGrid.js","node_modules\\ol\\source\\WMTSRequestEncoding.js","node_modules\\ol\\tilegrid\\WMTS.js","node_modules\\ol\\source\\WMTS.js","node_modules\\ol\\source\\Zoomify.js","node_modules\\ol\\source.js","node_modules\\ol\\style\\Atlas.js","node_modules\\ol\\style\\AtlasManager.js","node_modules\\ol\\style.js","main.js"],"names":["inherits","childCtor","parentCtor","prototype","Object","create","constructor","getUid","uidCounter_","obj","ol_uid","VERSION","AssertionError","Error","code","path","message","split","call","name","__proto__","clear","getValues","isEmpty","assign","target","var_sources","arguments$1","arguments","TypeError","output","i","ii","length","source","key","hasOwnProperty","object","property","values","push","bindListener","findListener","getListeners","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","listenerObj","boundListener","evt","listener","bindTo","callOnce","listeners","opt_this","opt_setDeleteIndex","deleteIndex","type","listenerMap","ol_lm","undefined","getListenerMap","removeListeners","removeEventListener","keys","opt_once","addEventListener","indexOf","splice","Disposable","disposed_","dispose","disposeInternal","TRUE","FALSE","VOID","stopPropagation","preventDefault","Event","propagationStopped","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","this$1","propagate","pendingRemovals","hasListener","opt_type","index","unByKey","Observable","EventTarget","revision_","changed","EventType","CHANGE","getRevision","on","Array","isArray","len","once","un","getChangeEventType","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","notify","eventType","ObjectEventType","PROPERTYCHANGE","set","opt_silent","unset","changeEventTypeCache","Property","CollectionEvent","opt_element","element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","arr","forEach","f","array","getArray","item","LENGTH","insertAt","elem","CollectionEventType","ADD","removeAt","n","remove","prev","REMOVE","setAt","j","opt_except","MapEvent","map","opt_frameState","frameState","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","getContext","ONE","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINK_STATUS","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","COMPILE_STATUS","FRAMEBUFFER","CONTEXT_IDS","canvas","opt_attributes","context","e","MAX_TEXTURE_SIZE","EXTENSIONS","DEBUG","HAS","window","document","createElement","gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","GEOLOCATION","TOUCH","POINTER","MSPOINTER","msPointerEnabled","CLICK","DBLCLICK","MapBrowserPointerEvent","pointerEvent","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","POINTER_ID","POINTER_TYPE","DEDUP_DIST","mousedown","inEvent","isEventSimulatedFromTouch_","toString","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","p","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","lastTouches","lts","x","clientX","y","clientY","l","t","dx","Math","abs","dy","cloneEvent","pd","pointerId","isPrimary","pointerType","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","MsSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","NativeSource","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","height","tiltX","tiltY","hwTimestamp","which","ev","MouseEvent","binarySearch","haystack","needle","opt_comparator","low","mid","cmp","comparator","numberSafeCompareFunction","high","found","a","b","includes","linearFindNearest","direction","reverseSubArray","begin","end","tmp","data","extension","find","func","equals","arr1","arr2","len1","stableSort","compareFnc","sort","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","CLICK_COUNT_TIMEOUT","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","bind","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","inFunction","touches","slice","pointer","findTouch_","touchList","searchId","touch","d","out","i$1","over","enter","outEvent","outTarget","leave","cleanUpPointer_","lt","CLONE_PROPS","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","s","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","PointerEventType","POINTERDOWN","POINTERMOVE","POINTERUP","POINTERENTER","POINTERLEAVE","POINTEROVER","POINTEROUT","POINTERCANCEL","contains_","container","contained","contains","inType","wrapMouseEvent","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","MapBrowserEventType","SINGLECLICK","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","POINTERDRAG","assert","assertion","errorCode","DROP","Infinity","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","apply","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","handleTileChange","getTilesLoading","state","getState","TileState","LOADED","ERROR","EMPTY","ABORT","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","IDLE","load","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","roundUpToPowerOfTwo","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","min","max","cosh","exp","pow","ceil","log","LN2","x1","y1","x2","y2","mat","maxRow","maxEl","r","absValue","coef","k","m","angleInRadians","PI","angleInDegrees","createExtent","none","extent","center","createSnapToResolutions","createSnapToPower","resolutions","resolution","delta","z","floor","power","maxResolution","opt_maxLevel","offset","oldLevel","newLevel","disable","createSnapToN","createSnapToZero","rotation","theta","opt_tolerance","tolerance","padNumber","number","opt_precision","numberString","toFixed","decimal","join","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","add","closestOnCircle","closestOnSegment","createStringXY","degreesToStringHDMS","format","rotate","scale","distance","squaredDistanceToSegment","toStringHDMS","toStringXY","circle","getRadius","getCenter","x0","y0","sqrt","segment","start","along","opt_fractionDigits","hemispheres","degrees","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","template","replace","coordinate1","coordinate2","angle","cosAngle","cos","sinAngle","sin","coord1","coord2","easeIn","easeOut","inAndOut","linear","upAndDown","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","extendCoordinate","extendCoordinates","extendFlatCoordinates","extendRings","extendXY","forEachCorner","getArea","getBottomLeft","getBottomRight","getCorner","getEnlargedArea","getForViewAndSize","getHeight","getIntersectionArea","getIntersection","getMargin","getSize","getTopLeft","getTopRight","getWidth","intersects","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","coordinates","_boundingExtentXYs","xs","ys","opt_extent","extent1","extent2","minX","minY","maxX","maxY","relationship","Relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","flatCoordinates","stride","rings","callback","val","area","corner","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x3","y3","intersection","deltaX","deltaY","startRel","endRel","startX","startY","endX","endY","slope","transformFn","transform2D","transform","opt_dest","dest","anchor","anchorX","anchorY","sx","sy","translate","getDistance","DEFAULT_RADIUS","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","geometry","projection","getType","GeometryType","GEOMETRY_COLLECTION","coords","jj","POINT","MULTI_POINT","LINE_STRING","LINEAR_RING","getCoordinates","MULTI_LINE_STRING","POLYGON","MULTI_POLYGON","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","lon","Units","METERS_PER_UNIT","DEGREES","FEET","METERS","USFEET","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","fromEPSG4326","toEPSG4326","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","point","PROJECTIONS","input","opt_output","opt_dimension","dimension","halfSize","tan","atan","EPSG4326Projection","opt_axisOrientation","cache","transforms","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","addProjections","addEquivalentProjections","addEquivalentTransforms","clearAllProjections","createProjection","createTransformFromCoordinateTransform","addCoordinateTransforms","fromLonLat","toLonLat","equivalent","getTransformFromProjections","getTransform","transformExtent","transformWithProjections","addCommon","projections","projectionLike","opt_units","pointResolution","getter","vertices","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","defaultCode","coordTransform","forward","inverse","sourceProj","destProj","opt_projection","lonLat","equalUnits","sourceProjection","destinationProjection","transformFunc","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","reset","multiply","setFromArray","compose","invert","determinant","tmp_","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","dx1","dy1","dx2","dy2","det","tmpTransform","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","opt_sy","opt_anchor","simplify","getSimplifiedGeometry","squaredTolerance","intersectsExtent","TILE_PIXELS","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getStrideForLayout","transformGeom2D","SimpleGeometry","layout","GeometryLayout","XY","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","XYZ","XYZM","XYM","simpleGeometry","linearRing","twiceArea","linearRings","ends","linearRingss","endss","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","squaredDelta","maxDelta","isRing","opt_tmpPoint","tmpPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","deflateMultiCoordinatesArray","coordinatesss","opt_endss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","simplifyLineString","douglasPeucker","douglasPeuckerArray","douglasPeuckerMultiArray","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","highQuality","opt_simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","simplifiedEnds","simplifiedEndss","round","LinearRing","maxDelta_","maxDeltaRevision_","Point","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","wn","getInteriorPointOfArray","getInteriorPointsOfMultiArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","interiorPoints","point1","ret","point2","intersectsLineString","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","coordinatesExtent","linearRingIsClockwise","linearRingIsOriented","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","edge","opt_right","right","isClockwise","circular","fromExtent","fromCircle","makeRegular","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","opt_n","opt_sphereRadius","opt_sides","opt_angle","sides","arrayLength","polygon","startAngle","createCenterConstraint","createResolutionConstraint","createRotationConstraint","isNoopAnimation","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","properties","ViewProperty","CENTER","resolutionConstraintInfo","maxResolution_","minResolution_","minResolution","zoomFactor_","zoomFactor","resolutions_","minZoom_","minZoom","centerConstraint","resolutionConstraint","constraint","rotationConstraint","constraints_","RESOLUTION","zoom","constrainResolution","Number","getResolution","ROTATION","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","Date","now","series","animation","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","complete","setHint","ViewHint","ANIMATING","getAnimating","getInteracting","INTERACTING","cancelAnimations","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","getComputedStyle","constrainCenter","opt_delta","opt_direction","constrainRotation","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","CIRCLE","padding","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","position","centerX","centerY","hint","animationCallback","returnValue","centerNone","defaultMaxResolution","defaultMinResolution","enableRotation","rotationNone","createCanvasContext2D","opt_width","opt_height","outerWidth","offsetWidth","style","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","BaseLayer","LayerProperty","OPACITY","opacity","VISIBLE","visible","Z_INDEX","zIndex","MAX_RESOLUTION","MIN_RESOLUTION","state_","getLayerState","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","LAYERS","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","layer","collectionEvent","states","pos","ownLayerState","layerState","SourceState","READY","num","hasArea","ratio","toSize","PluggableMap","optionsInternal","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","overlayEvents","MOUSEDOWN","TOUCHSTART","MSPOINTERDOWN","MOUSEWHEEL","WHEEL","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","CONTEXTMENU","handleBrowserEvent","controls","interactions","overlays_","overlays","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","MapProperty","LAYERGROUP","handleLayerGroupChanged_","VIEW","handleViewChanged_","SIZE","handleSizeChanged_","TARGET","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","overlay","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","RESIZE","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","left","top","getTarget","getTargetElement","getElementById","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","MapEventType","RENDERCOMPLETE","getLoading","dispatchRenderEvent","RenderEventType","postRenderFunctions","render","targetElement","KEYDOWN","KEYPRESS","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","layerGroup","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","layerStatesArray","layerStates","renderFrame","MOVESTART","MOVEEND","POSTRENDER","setLayerGroup","setSize","setView","skipFeature","featureUid","computedStyle","parseFloat","unskipFeature","getSource","loading","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","visibleAtResolution","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","SOURCE","handleSourcePropertyChange_","setSource","UNDEFINED","handleSourceChange_","PRECOMPOSE","managed","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","updateElement_","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","mapEvent","Rotate","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","msTransform","webkitTransform","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","pan","rotateWithoutConstraints","zoomByDelta","zoomWithoutConstraints","Interaction","setActive","InteractionProperty","ACTIVE","active","opt_duration","currentRotation","DoubleClickZoom","delta_","stopEvent","altKeyOnly","altShiftKeysOnly","activeElement","always","click","mouseActionButton","never","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","centroid","handleDragEvent","handleUpEvent","handleDownEvent","handleMoveEvent","PointerInteraction","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","handlingDownUpSequence","stopDown","trackedPointers_","targetPointers","updateTrackedPointers_","isPointerDraggingEvent","pointerEvents","handledUp","handled","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centerpx","DragRotate","lastAngle_","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","BOXDRAG","BOXEND","BOXSTART","DragZoom","out_","mapExtent","boxPixelExtent","factor","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","DOWN","UP","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","MAX_DELTA","Mode","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","handleWheelZoom_","setMouseAnchor","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","TRACKPAD","rebound","timeLeft","PinchRotate","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDropEventType","DragAndDropEvent","file","opt_features","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","handleResult_","result","formatConstructor","tryReadFeatures_","addFeatures","ADD_FEATURES","registerListeners_","dropArea","handleDrop","DRAGENTER","handleStop","DRAGOVER","unregisterListeners_","text","readFeatures","files","dataTransfer","reader","FileReader","LOAD","readAsText","dropEffect","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","asString","asArray","normalize","HEX_COLOR_RE_","NAMED_COLOR_RE_","color","fromNamed","body","rgb","fromString","MAX_CACHE_SIZE","cacheSize","fromStringInternal_","g","exec","hasAlpha","substr","asColorLike","isColorLike","CanvasPattern","CanvasGradient","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","CLEAR","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","prune","measureTextWidth","rotateAtOffset","drawImage","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkedFonts","measureContext","textHeights","checkFont","retries","interval","referenceWidth","checked","referenceFonts","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","margin","offsetX","offsetY","resetTransform","image","originX","originY","w","h","alpha","globalAlpha","setTransform","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getRotateWithView","getScale","getSnapToPixel","getAnchor","getImage","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","setSnapToPixel","snapToPixel","listenImageChange","thisArg","unlistenImageChange","RegularShape","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","getFill","getPoints","getRadius2","getStroke","ImageState","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","draw_","createHitDetectionCanvas_","hasCustomHitDetectionImage","renderHitDetectionCallback","drawHitDetectionCanvas_","getChecksum","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","recalculate","checksum","CircleStyle","setRadius","Fill","color_","checksum_","setColor","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","toFunction","createDefaultStyle","createEditingStyle","Style","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer","text_","zIndex_","styleFunction","styles","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","defaultStyles","white","blue","concat","createStyleFunction","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","setId","Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","pointY","cumulativeLengths","o","extrapolate","lo","hi","m0","m1","interpolate","lineStringLength","linearRingLength","perimeter","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","MultiLineString","lineString","appendLineString","opt_interpolate","getLineString","getLineStrings","lineStrings","getFlatMidpoints","midpoints","midpoint","MultiPoint","appendPoint","multiPoint","getPoint","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","newEndss","getEndss","getFlatInteriorPoints","getInteriorPoints","getPolygon","prevEnds","getPolygons","polygons","lastEnds","RenderType","VectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","VectorRenderType","VECTOR","LayerType","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","RENDER_ORDER","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode","loadFeaturesXhr","xhr","url","success","failure","XMLHttpRequest","open","FormatType","responseType","onload","status","JSON","TEXT","responseText","XML","responseXML","DOMParser","parseFromString","response","featureProjection","readProjection","getLastExtent","onerror","send","dataProjection","all","bbox","getZForResolution","tileRange","getTileRangeForExtentAndZ","extents","tileCoord","getTileCoordExtent","Source","attributions_","adaptAttributions_","wrapX_","wrapX","attributionLike","getWrapX","refresh","setAttributions","setState","RBush","opt_maxEntries","rbush_","items_","insert","items","uid","getAll","getInExtent","search","forEach_","forEachInExtent","rbush","VectorSourceEvent","opt_feature","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","ADDFEATURE","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","REMOVEFEATURE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","loop","extentToLoad","removeLoadedExtent","removed","setLoader","createRegularPolygon","createBox","DrawEventType","DrawEvent","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","Constructor","mode","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","atFinish_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","startDrawing_","DRAWSTART","sketchLineGeom","ring","addToDrawing_","finishDrawing","removeLastPoint","sketchFeature","abortDrawing_","DRAWEND","sketchFeatures","overlaySource","pass","handlePointerEvent","circleMode","boxCoordinates","ExtentEventType","ExtentInteractionEvent","EXTENTCHANGED","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","pixelCoordinate","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","MODIFYSTART","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","segmentData","lines","kk","centerSegmentData","circumferenceSegmentData","featureSegments","getGeometriesArray","createOrUpdateVertexFeature_","box","nodes","pointDistanceToSegmentDataSquared","closestOnSegmentData","vertexSegments","insertVertex_","depth","setGeometryCoordinates_","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removePoint","removeVertex_","MODIFYEND","component","dragSegment","newIndex","dragSegments","segmentsByFeature","deleted","segmentDataMatch","compareIndexes","insertVertices","vertexExtent","segmentDataMatches","componentSegments","closestVertex","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","SelectEventType","SelectEvent","selected","deselected","Select","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","featureOverlay","featureOverlay_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","getLayer","setHitTolerance","currentMap","selectedFeatures","removeFeatureLayerAssociation_","SELECT","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","sortByDistance","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","updateFeature_","opt_unlisten","unregister","snapTo","lowerLeft","upperRight","snappedToVertex","snapped","isCircle","featuresToUpdate","deltaA","TranslateEventType","TranslateEvent","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","oldMap","TRANSLATESTART","TRANSLATEEND","newCoordinate","geom","TRANSLATING","default","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","ImageBase","getPixelRatio","ImageCanvas","opt_loader","error_","getError","handleLoad_","err","LOADING","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","VectorContext","drawCustom","drawGeometry","drawCircle","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","textBaseline","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","expire","iconImage","maxCacheSize","shared","sortByZIndex","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","getLayerRendererConstructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","skippedFeatureUids","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","expireIconCache","scheduleRemoveUnusedLayerRenderers","state1","state2","layerRendererConstructors","CanvasMapRenderer","insertBefore","childNodes","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","POSTCOMPOSE","numLayers","forEachLayerAtCoordinate","ctor","LayerRenderer","layer_","createLoadedTileFinder","tiles","forEachLoadedTile","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","usedTiles","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTile","getTileCoordCenter","useTile","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","postCompose","preCompose","RENDER","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","IMAGE","mapRenderer","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","getInterimTile","sourceRevision","getTileGridForProjection","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","zs","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","tileCoordKey","getGutterForProjection","getTileCoord","drawTileImage","gutter","transition","getOpaque","alphaChanged","endTransition","TILE","ReplayGroup","getReplay","replayType","drawTextOnPath","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","fillInstruction","FILL","strokeInstruction","STROKE","beginPathInstruction","BEGIN_PATH","closePathInstruction","CLOSE_PATH","ORDER","ReplayType","DEFAULT","TEXT_ALIGN","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastCoord","lastRel","nextRel","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","CanvasInstruction","CUSTOM","endGeometry","BEGIN_GEOMETRY","origin","repeatSize","instruction","renderDeclutter_","groupCount","collides","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","skipFeatures","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","DRAW_IMAGE","backgroundFill","backgroundStroke","DRAW_CHARS","baseline","fillKey","strokeKey","textKey","pathLength","textLength","textStates","parts","cc","chars","part","END_GEOMETRY","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","chunkStart","m12","m23","x12","y12","x23","y23","chunkEnd","chunkM","acos","measureTextWidths","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","TextPlacement","LINE","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","numLines","widths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","currentWidth","getCircleArray","replayDeclutter","BATCH_CONSTRUCTORS","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","addDeclutter","group","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","mask","declutteredFeatures","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","circleArrayCache","fillCircleArrayRowToMiddle","arraySize","error","zz","replayData","defaultOrder","getSquaredTolerance","getTolerance","renderFeature","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","feature1","feature2","replayGroup","circleReplay","textReplay","renderFeatureInternal","renderGeometry","lineStringReplay","polygonReplay","imageReplay","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","dirty","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","VectorTileRenderType","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","zIndexKeys","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","renderedTileRevision","wrappedTileCoord","pixelScale","VECTOR_TILE","Map","transformWithOptions","FeatureFormat","defaultFeatureProjection","write","transformed","decimals","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","GEOMETRY_READERS","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","GEOMETRY_WRITERS","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","EsriJSON","esriJSONFeature","idField","attributes","esriJSONObject","esriJSONFeatureCollection","esriJSONFeatures","objectIdFieldName","spatialReference","wkid","crs","objects","paths","getGeometryLayout","convertRings","geometryReader","flatRing","outerRings","holes","hole","shift","matched","outerRing","containsHole","hasZ","hasM","esriJSON","getHasZM","hasZM","geometryWriter","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geometry_name","geoJSONObject","geoJSONFeatures","readGeometryCollectionGeometry","writeGeometryCollectionGeometry","writeEmptyGeometryCollectionGeometry","rightHanded","createElementNS","getAllTextContent","getAllTextContent_","isDocument","isNode","getAttributeNS","makeArrayExtender","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","makeObjectPropertySetter","makeChildAppender","makeArraySerializer","makeSimpleNodeFactory","makeSequence","makeStructureNS","parseNode","pushParseAndPop","serialize","pushSerializeAndPop","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","namespaceURI","qualifiedName","normalizeWhitespace","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","String","nodeValue","firstChild","nextSibling","Document","xml","valueReader","objectStack","opt_property","localName","nodeWriter","serializersNS","nodeFactory","serializers","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","orderedKeys","sequence","namespaceURIs","structure","opt_structureNS","structureNS","parsersNS","firstElementChild","nextElementSibling","parsers","parser","opt_keys","XMLFeature","xmlSerializer_","XMLSerializer","readFeatureFromDocument","readFeatureFromNode","doc","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","readFeaturesInternal","child","ft","uri","prefix","ns","featureTypes","ii$1","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS_","fid","test","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","RING_PARSERS","readBoolean","readBooleanString","readDateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","writeBooleanTextNode","writeCDATASection","writeDateTimeTextNode","writeDecimalTextNode","writeNonNegativeIntegerTextNode","writeStringTextNode","string","dateTime","trim","bool","createCDATASection","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","toPrecision","nonNegativeInteger","MULTIGEOMETRY_TO_MEMBER_NODENAME","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","proj","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","line","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","setAttributeNS","GML","NAMESPACE_URIS","SCHEMA_LOCATION","FEATURE_READER","readRte","readTrk","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","writeRte","writeTrk","writeWpt","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","parseLink","parseExtensions","parseRtePt","RTEPT_PARSERS","TRK_PARSERS","parseTrkSeg","TRKSEG_PARSERS","parseTrkPt","TRKPT_PARSERS","WPT_PARSERS","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","writeTrkSeg","TRKSEG_NODE_FACTORY","TRKSEG_SERIALIZERS","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","layoutOptions","applyLayoutOptions","href","rteValues","trkValues","link","geometryLayout","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGCZ","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","IGC","altitudeMode_","altitudeMode","NONE","year","month","day","lastDateTime","hour","minute","second","GPS","BAROMETRIC","UTC","IconImage","Image","imageListenerKeys_","imageState_","src_","tainting_","determineTainting_","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","iconImageCache","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","FRACTION","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","DEFAULT_FILL_COLOR","Text","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","getDefaultFillStyle","getDefaultImageStyle","getDefaultStrokeStyle","getDefaultTextStyle","getDefaultStyle","getDefaultStyleArray","readFlatCoordinates","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","PIXELS","PLACEMARK_PARSERS","extendedDataParser","regionParser","readMultiGeometry","readStyle","placemarkStyleMapParser","readURI","readGxMultiTrack","readGxTrack","NETWORK_LINK_PARSERS","linkParser","REGION_PARSERS","latLonAltBoxParser","lodParser","KML_SEQUENCE","KML_SERIALIZERS","writeDocument","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","createStyleDefaults","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","readPlacemark_","readSharedStyle_","readSharedStyleMap_","createFeatureStyleFunction","styleUri","baseURI","location","URL","styleMapValue","readStyleMapValue","fs","readName","readNameFromDocument","readNameFromNode","n$1","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","createNameStyleFunction","foundStyle","textOffset","imageScale","foundText","nameStyle","styleUrl","sharedStyles","drawName","findStyle","styleValue","readColor","hexColor","readVec2","xunits","yunits","readScale","STYLE_MAP_PARSERS","pairDataParser","ICON_STYLE_PARSERS","readIcon","iconStyleParser","styleObject","IconObject","drawIcon","hotSpot","heading","LABEL_STYLE_PARSERS","labelStyleParser","LINE_STYLE_PARSERS","lineStyleParser","POLY_STYLE_PARSERS","polyStyleParser","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","gxCoordParser","gxTrackObject","GX_MULTITRACK_GEOMETRY_PARSERS","GX_TRACK_PARSERS","whenParser","whens","ICON_PARSERS","iconObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIsParser","outerBoundaryIsParser","STYLE_PARSERS","setCommonGeometryProperties","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","dataParser","featureObject","displayName","EXTENDED_DATA_PARSERS","schemaDataParser","PAIR_PARSERS","pairObject","placemarkObject","SCHEMA_DATA_PARSERS","simpleDataParser","LAT_LON_ALT_BOX_PARSERS","regionObject","LOD_PARSERS","lodObject","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","when","writeColorTextNode","rgba","abgr","hex","writeCoordinatesTextNode","d$1","EXTENDEDDATA_NODE_SERIALIZERS","writeDataNode","writeDataNodeValue","writeDataNodeName","pair","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","DATA_NODE_FACTORY","writeExtendedData","namesAndValues","names","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","writeIcon","icon","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","writeVec2","writeScaleTextNode","writeIconStyle","iconProperties","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","writeLabelStyle","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","writeLineStyle","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","writeStyle","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","writePolyStyle","STYLE_SEQUENCE","STYLE_SERIALIZERS","vec2","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","MVT","featureClass_","featureClass","layerName_","layerName","layers_","readRawGeometry_","pbf","readVarint","cmd","coordsLen","currentEnd","cmdLen","readSVarint","createFeature_","rawFeature","getGeometryType","prevEndIndex","PBF","pbfLayers","readFields","layersPBFReader","pbfLayer","readRawFeature","tag","layerPBFReader","version","readFloat","readDouble","readVarint64","featurePBFReader","readHref","NAMESPACE_URI","read","readFromDocument","readFromNode","PARSERS","readServiceIdentification","readServiceProvider","readOperationsMetadata","OWS","owsObject","ADDRESS_PARSERS","ALLOWED_VALUES_PARSERS","readValue","CONSTRAINT_PARSERS","readAllowedValues","CONTACT_INFO_PARSERS","readPhone","readAddress","DCP_PARSERS","readHttp","HTTP_PARSERS","readGet","OPERATION_PARSERS","readDcp","OPERATIONS_METADATA_PARSERS","readOperation","PHONE_PARSERS","REQUEST_METHOD_PARSERS","readConstraint","SERVICE_CONTACT_PARSERS","readContactInfo","SERVICE_IDENTIFICATION_PARSERS","SERVICE_PROVIDER_PARSERS","readServiceContact","flipXY","opt_destOffset","destOffset","encodeDeltas","decodeDeltas","encodeFloats","decodeFloats","encodeSignedIntegers","decodeSignedIntegers","encodeUnsignedIntegers","decodeUnsignedIntegers","encodeUnsignedInteger","Polyline","factor_","geometryLayout_","numbers","opt_factor","lastNumbers","encoded","current","fromCharCode","TopoJSON","topoJSONTopology","arcs","topoJSONFeatures","objectName","readFeaturesFromGeometryCollection","readFeatureFromGeometry","concatenateArcs","indices","polyArray","ringCoords","transformArcs","transformArc","transformVertex","GML2","readFlatCoordinates_","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","coord","Filter","tagName_","getTagName","LogicalNary","conditions","And","params","Bbox","Spatial","Contains","Comparison","propertyName","During","ComparisonBinary","expression","opt_matchCase","matchCase","EqualTo","GreaterThan","GreaterThanOrEqualTo","Intersects","IsBetween","lowerBoundary","upperBoundary","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","IsNull","LessThan","LessThanOrEqualTo","Not","NotEqualTo","Or","Within","and","or","not","within","equalTo","notEqualTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","isNull","between","like","during","Function","writeFilter","TRANSACTION_SUMMARY_PARSERS","TRANSACTION_RESPONSE_PARSERS","readTransactionSummary","readInsertResults","QUERY_SERIALIZERS","TRANSACTION_SERIALIZERS","writeUpdate","writeDelete","writeProperty","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","DEFAULT_VERSION","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","featurePrefix","propertyNames","writeTransaction","inserts","updates","deletes","baseObj","gmlVersion","gmlOptions","nativeElements","OGC_FID_PARSERS","fidParser","INSERT_RESULTS_PARSERS","writeOgcFidFilter","getTypeName","typeName","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","writeQuery","writeDuringFilter","writeLogicalFilter","writeNotFilter","writeBboxFilter","writeContainsFilter","writeIntersectsFilter","writeWithinFilter","writeComparisonFilter","writeIsNullFilter","writeIsBetweenFilter","writeIsLikeFilter","writeFilterCondition","valueReference","timePeriod","writeOgcExpression","writeOgcPropertyName","writeOgcLiteral","writeTimeInstant","timeInstant","timePosition","GeometryConstructor","Z","M","ZM","TokenType","WKTGeometryType","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","token","LEFT_PAREN","COMMA","RIGHT_PAREN","NUMBER","readNumber_","readText_","EOF","scientificNotation","substring","Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","isMatch","match","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","dimensions","geomType","WKT","splitCollection_","splitCollection","parse_","encode","encodePointGeometry","encodeMultiPointGeometry","components","encodeGeometryCollectionGeometry","geoms","encodeLineStringGeometry","encodeMultiLineStringGeometry","encodePolygonGeometry","encodeMultiPolygonGeometry","encodeGeometryLayout","GeometryEncoder","enc","geometryEncoder","readService","readCapability","CAPABILITY_PARSERS","readRequest","readException","readCapabilityLayer","WMSCapabilities","wmsCapabilityObject","SERVICE_PARSERS","readKeywordList","readContactInformation","CONTACT_INFORMATION_PARSERS","readContactPersonPrimary","readContactAddress","CONTACT_PERSON_PARSERS","CONTACT_ADDRESS_PARSERS","EXCEPTION_PARSERS","LAYER_PARSERS","readEXGeographicBoundingBox","readBoundingBox","readDimension","readAttribution","readAuthorityURL","readMetadataURL","readFormatOnlineresource","readLayer","ATTRIBUTION_PARSERS","readSizedFormatOnlineresource","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","REQUEST_PARSERS","readOperationType","OPERATIONTYPE_PARSERS","readDCPType","DCPTYPE_PARSERS","readHTTP","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","geographicBoundingBox","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","parentLayerObject","layerObject","queryable","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","dimensionObject","formatOnlineresource","authorityObject","metadataObject","featureIdentifier","layerIdentifier","WMSGetFeatureInfo","readFeatures_","toRemove","layerFeatures","gmlFeatures","OWS_NAMESPACE_URIS","readContents","WMTSCapabilities","owsParser_","WMTSCapabilityObject","CONTENTS_PARSERS","readTileMatrixSet","readTileMatrixSetLink","readDimensions","readResourceUrl","readWgs84BoundingBox","readLegendUrl","TMS_LINKS_PARSERS","readTileMatrixLimitsList","TMS_LIMITS_LIST_PARSERS","readTileMatrixLimits","TMS_LIMITS_PARSERS","DIMENSION_PARSERS","WGS84_BBOX_READERS","readCoordinates","TMS_PARSERS","readTileMatrix","TM_PARSERS","isDefault","resourceType","resource","legend","DEFAULT_GRADIENT","Heatmap","gradient","blur","shadow","gradient_","shadow_","circleImage_","styleCache_","GRADIENT","handleGradientChanged_","setGradient","setBlur","BLUR","handleStyleChanged_","weightFunction","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","createGradient","view8","colors","createLinearGradient","step","addColorStop","ImageLayer","TileLayer","setPreload","setUseInterimTilesOnError","TileProperty","PRELOAD","USE_INTERIM_TILES_ON_ERROR","VectorTileLayer","HYBRID","DEFAULT_WMS_VERSION","ImageWrapper","imageLoadFunction","imageLoadFunction_","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ReprojImage","getImageFunction","maxTargetExtent","limitedTargetExtent","errorThresholdInPixels","sourceImage","sourcePixelRatio","triangulation_","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","reproject_","defaultImageLoadFunction","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","appendParams","keyParams","encodeURIComponent","qs","GETFEATUREINFO_IMAGE_SIZE","ImageWMS","params_","v13_","updateV13_","serverType_","serverType","hidpi_","hidpi","ratio_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","getRequestUrl_","getParams","viewWidth","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getImageLoadFunction","WMSServerType","GEOSERVER","dpi","MAPSERVER","CARMENTA_SERVER","QGIS","setImageLoadFunction","setUrl","updateParams","opt_tileCoord","getKeyZXY","fromKey","hash","quadKey","digits","withinExtentAndZ","getFullTileRange","createFromTemplate","createFromTemplates","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","zRegEx","xRegEx","yRegEx","dashYRegEx","templates","tileUrlFunctions","urls","startCharCode","stopCharCode","stop","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","ImageTile","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","TileCache","pruneExceptNewestZ","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","sourceProjExtent","sourceRange","srcX","srcY","unlistenSources_","getTileSize","leftToLoad","sourceListenKey","tmpTileCoord","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","getForProjection","createForExtent","createXYZ","createForProjection","extentFromProjection","worldsAway","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","half","TileSource","opaque_","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","TileSourceEvent","UrlTile","tileUrlFunction","fixedTileUrlFunction","setUrls","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","TILELOADSTART","TILELOADERROR","TILELOADEND","setTileLoadFunction","opt_key","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","imageTile","TOS_ATTRIBUTION","BingMaps","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","epsg4326Extent","CartoDB","account_","account","mapId_","config_","config","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","tilesUrl","cdn_url","https","layergroupid","Cluster","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","ImageArcGISRest","halfWidth","halfHeight","srid","modifiedUrl","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","mcsW","mcsH","devW","devH","mpp","Static","imageExtent_","getImageExtent","targetWidth","ATTRIBUTION","OSM","RasterEventType","RasterOperationType","RasterSourceEvent","RasterSource","worker_","operationType_","operationType","PIXEL","threads_","threads","renderers_","createRenderers","requestedFrameState_","renderedImageCanvas_","operation","setOperation","lib","opt_lib","Processor","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","BEFOREOPERATIONS","process","onWorkerComplete_","AFTEROPERATIONS","sharedContext","renderers","createTileRenderer","createImageRenderer","ATTRIBUTIONS","OSM_ATTRIBUTION","LayerConfig","ProviderConfig","Stamen","provider","providerConfig","layerConfig","TileArcGISRest","tmpExtent_","getKeyForParams_","LabeledTile","strokeRect","TileDebug","textTileCoord","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","bounds","minzoom","maxzoom","attributionExtent","TileWMS","transparent","CustomTile","preemptive","preemptive_","grid_","keys_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","grid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","createFromCapabilitiesMatrixSet","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","matrixIdsPropName","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","optionsFromCapabilities","WMTS","requestEncoding","WMTSRequestEncoding","KVP","version_","dimensions_","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","wmtsCap","tileMatrixSets","tileMatrixSet","supportedCRS","proj1","proj2","matrixSets","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","REST","localContext","TierSizeCalculation","zoomifyImage_","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","TRUNCATED","tileCountUpToTier","tileCoordZ","tileIndex","ZoomifyTileClass","Atlas","space","space_","emptyBlocks_","renderCallback","block","split_","deltaWidth","newBlock1","newBlock2","updateBlocks_","args","INITIAL_ATLAS_SIZE","MAX_ATLAS_SIZE","AtlasManager","currentSize_","initialSize","maxSize_","maxSize","WEBGL_MAX_TEXTURE_SIZE","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","atlas","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","styleJson","readFile","console","pcpStyle","featureStyleFunction","dragAndDropInteraction","Aletsch_riv","Aletsch_subSource","bboxStrategy","Aletsch_sub","Gorner_riv","Gorner_Sub","displayFeatureInfo","LayerListUl","request","li","div"],"mappings":"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","file":"main.06e6d297.map","sourceRoot":"..","sourcesContent":["/**\n * @module ol/util\n */\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.2.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = (function (Error) {\n  function AssertionError(code) {\n    var path = VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {module:ol/events/Target~EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/Target~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/Target~EventTargetLike} target Target.\n * @return {!Object<string, Array<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/Target~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/Target~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/Target~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/Target~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {module:ol/events/Target~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  for (var type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = (function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<module:ol/events~ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (module:ol/events/Target~EventTargetLike|undefined)}|\n   *     module:ol/events/Event|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @function\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this$1, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this$1.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<module:ol/events~ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires module:ol/events/Event~Event\n * @api\n */\nvar Observable = (function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this$1, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n  */\nvar ObjectEvent = (function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nvar BaseObject = (function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    var this$1 = this;\n\n    for (var key in values) {\n      this$1.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = (function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @template T\n * @api\n */\nvar Collection = (function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this$1.assertUnique_(this$1.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    var this$1 = this;\n\n    while (this.getLength() > 0) {\n      this$1.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {module:ol/Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    var this$1 = this;\n\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this$1.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return /** @type {number} */ (this.get(Property.LENGTH));\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var this$1 = this;\n\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this$1.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var this$1 = this;\n\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this$1.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    var this$1 = this;\n\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this$1.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = (function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {module:ol/PluggableMap}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?module:ol/PluggableMap~FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = (function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {module:ol/pixel~Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = (function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {module:ol/pointer/PointerEvent}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = (function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<module:ol/pixel~Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = (function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = (function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = (function (Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = this.getButtons_(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = this.getPressure_(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( Event ) PointerEvent.__proto__ = Event;\n  PointerEvent.prototype = Object.create( Event && Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  /**\n   * @private\n   * @param {Object<string, ?>} eventDict The event dictionary.\n   * @return {number} Button indicator.\n   */\n  PointerEvent.prototype.getButtons_ = function getButtons_ (eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n      buttons = eventDict.buttons;\n    } else {\n      switch (eventDict.which) {\n        case 1: buttons = 1; break;\n        case 2: buttons = 4; break;\n        case 3: buttons = 2; break;\n        default: buttons = 0;\n      }\n    }\n    return buttons;\n  };\n\n  /**\n   * @private\n   * @param {Object<string, ?>} eventDict The event dictionary.\n   * @param {number} buttons Button indicator.\n   * @return {number} The pressure.\n   */\n  PointerEvent.prototype.getPressure_ = function getPressure_ (eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n      pressure = eventDict.pressure;\n    } else {\n      pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n  };\n\n  return PointerEvent;\n}(Event));\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = (function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {module:ol/pointer/MouseSource}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.resetId_ = undefined;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n    e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n    e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var this$1 = this;\n\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this$1.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this$1, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var this$1 = this;\n\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = keys[i];\n        var value = this$1.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this$1.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this$1.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      event.relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        event.target = outTarget;\n        event.relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = (function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<module:ol/pointer/EventSource>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {module:ol/pointer/EventSource} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, MouseSource.prepareEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = (function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {module:ol/PluggableMap}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.clickTimeoutId_ = 0;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {module:ol/pointer/PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== 0) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = 0;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = 0;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   * @api\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n    var this$1 = this;\n\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this$1.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this$1.getLeftChildIndex_(index);\n    var rIndex = this$1.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this$1.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n    var this$1 = this;\n\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this$1.queuedElements_[this$1.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = (function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {module:ol/Tile} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var this$1 = this;\n\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {module:ol/Tile} */ (this$1.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this$1.tilesLoadingKeys_)) {\n        this$1.tilesLoadingKeys_[tileKey] = true;\n        ++this$1.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<module:ol/proj/Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = (function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<module:ol/proj/Projection>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = (function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<module:ol/proj/Projection>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, module:ol/proj/Projection>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, module:ol/proj~TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  var projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    var code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = (function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, module:ol/geom/Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!module:ol/geom/Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {};\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {};\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} point Point.\n   * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n   * @return {module:ol/coordinate~Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @protected\n   * @return {module:ol/extent~Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {};\n\n  /**\n   * Get the extent of the geometry.\n   * @param {module:ol/extent~Extent=} opt_extent Extent.\n   * @return {module:ol/extent~Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {};\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {};\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @function\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {module:ol/geom/Geometry} A new, simplified version of the original\n   *     geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {};\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {module:ol/geom/GeometryType} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {};\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {module:ol/proj~TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {};\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {};\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {};\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    source = getProjection(source);\n    var transformFn = source.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = source.getExtent();\n        var projectedExtent = source.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(source, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = (function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/geom/GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {};\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n   * @return {module:ol/geom/GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {module:ol/geom/GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n    */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    var this$1 = this;\n\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this$1.layout = GeometryLayout.XY;\n          this$1.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = (function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {};\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = (function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {module:ol/coordinate~Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = (function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {module:ol/geom/LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<module:ol/geom/LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = (function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<module:ol/View~Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {module:ol/View~ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {module:ol/View~Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {module:ol/View~ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n   * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n    var this$1 = this;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {module:ol/View~AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {module:ol/View~Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this$1.constrainResolution(\n          this$1.maxResolution_, options.zoom - this$1.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    var this$1 = this;\n\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this$1.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    var this$1 = this;\n\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this$1.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this$1.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this$1.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this$1.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this$1.animations_[i] = null;\n        this$1.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n   * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {module:ol/View~Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {module:ol/proj/Projection} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {module:ol/View~State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {module:ol/View~State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {module:ol/View~FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {module:ol/geom/SimpleGeometry} */\n    var geometry;\n    if (!(geometryOrExtent instanceof SimpleGeometry)) {\n      assert(Array.isArray(geometryOrExtent),\n        24); // Invalid extent or geometry provided as `geometry`\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/size~Size} size Box pixel size.\n   * @param {module:ol/pixel~Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {module:ol/ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = (function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n    * @type {Object<string, *>}\n    */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n    * @type {module:ol/layer/Layer~State}\n    * @private\n    */\n    this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n      layer: /** @type {module:ol/layer/Layer} */ (this),\n      managed: true\n    });\n\n    /**\n    * The layer type.\n    * @type {module:ol/LayerType}\n    * @protected;\n    */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n  * Get the layer type (used when creating a layer renderer).\n  * @return {module:ol/LayerType} The layer type.\n  */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n  * @return {module:ol/layer/Layer~State} Layer state.\n  */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n    this.state_.sourceState = this.getSourceState();\n    this.state_.visible = this.getVisible();\n    this.state_.extent = this.getExtent();\n    this.state_.zIndex = this.getZIndex() || 0;\n    this.state_.maxResolution = this.getMaxResolution();\n    this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n    return this.state_;\n  };\n\n  /**\n  * @abstract\n  * @param {Array<module:ol/layer/Layer>=} opt_array Array of layers (to be\n  *     modified in place).\n  * @return {Array<module:ol/layer/Layer>} Array of layers.\n  */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {};\n\n  /**\n  * @abstract\n  * @param {Array<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n  *     states (to be modified in place).\n  * @return {Array<module:ol/layer/Layer~State>} List of layer states.\n  */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {};\n\n  /**\n  * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n  * will be visible regardless of extent.\n  * @return {module:ol/extent~Extent|undefined} The layer extent.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n  * Return the maximum resolution of the layer.\n  * @return {number} The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n  * Return the minimum resolution of the layer.\n  * @return {number} The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n  * Return the opacity of the layer (between 0 and 1).\n  * @return {number} The opacity of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n  * @abstract\n  * @return {module:ol/source/State} Source state.\n  */\n  BaseLayer.prototype.getSourceState = function getSourceState () {};\n\n  /**\n  * Return the visibility of the layer (`true` or `false`).\n  * @return {boolean} The visibility of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n  * Return the Z-index of the layer, which is used to order layers before\n  * rendering. The default Z-index is 0.\n  * @return {number} The Z-index of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n  * Set the extent at which the layer is visible.  If `undefined`, the layer\n  * will be visible at all extents.\n  * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n  * Set the maximum resolution at which the layer is visible.\n  * @param {number} maxResolution The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n  * Set the minimum resolution at which the layer is visible.\n  * @param {number} minResolution The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n  * Set the opacity of the layer, allowed values range from 0 to 1.\n  * @param {number} opacity The opacity of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n  * Set the visibility of the layer (`true` or `false`).\n  * @param {boolean} visible The visibility of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n  * Set Z-index of the layer, which is used to order layers before rendering.\n  * The default Z-index is 0.\n  * @param {number} zindex The z-index of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<module:ol/layer/Base>|module:ol/Collection<module:ol/layer/Base>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = (function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<module:ol/events~EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(layers instanceof Collection,\n          43); // Expected `layers` to be an array or a `Collection`\n        layers = layers;\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    var this$1 = this;\n\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this$1.listenerKeys_) {\n      this$1.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this$1.listenerKeys_[getUid(layer).toString()] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this$1.handleLayerChange_, this$1),\n        listen(layer, EventType.CHANGE, this$1.handleLayerChange_, this$1)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!module:ol/Collection<module:ol/layer/Base>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!module:ol/Collection<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!module:ol/Collection<module:ol/layer/Base>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object<string, Object<string, module:ol/TileRange>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(module:ol/layer/Layer): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection<module:ol/interaction/Interaction>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {module:ol/Collection<module:ol/Overlay>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection<module:ol/control/Control>|Array<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection<module:ol/interaction/Interaction>|Array<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<module:ol/layer/Base>|module:ol/Collection<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection<module:ol/Overlay>|Array<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = (function (BaseObject) {\n  function PluggableMap(options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/PluggableMap~FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this$1.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {module:ol/MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this$1.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this$1.handleMapBrowserEvent, this$1);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {module:ol/Collection<module:ol/control/Control>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {module:ol/Collection<module:ol/interaction/Interaction>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {module:ol/Collection<module:ol/Overlay>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, module:ol/Overlay>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {module:ol/renderer/Map}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<module:ol/PluggableMap~PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {module:ol/control/Control} control Control.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {module:ol/interaction/Interaction} interaction Interaction.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {module:ol/Overlay} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {module:ol/control/Control} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {Array<module:ol/Feature|module:ol/render/Feature>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || {};\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event} event Event.\n   * @return {module:ol/pixel~Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {module:ol/pixel~Pixel} pixel Pixel position in the map viewport.\n   * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {module:ol/Collection<module:ol/control/Control>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {module:ol/Collection<module:ol/Overlay>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {module:ol/Overlay} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {module:ol/Collection<module:ol/interaction/Interaction>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!module:ol/Collection<module:ol/layer/Base>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n   * @return {module:ol/pixel~Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {module:ol/renderer/Map} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {module:ol/View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n    var this$1 = this;\n\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(MapEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this$1, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    var this$1 = this;\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this$1.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {module:ol/control/Control} control Control.\n   * @return {module:ol/control/Control|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n   * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?module:ol/PluggableMap~FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {module:ol/View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    var featureUid = getUid(feature).toString();\n    this.skippedFeatureUids_[featureUid] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    var featureUid = getUid(feature).toString();\n    delete this.skippedFeatureUids_[featureUid];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<module:ol/layer/Base>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (layer instanceof LayerGroup) {\n      return getLoading(layer.getLayers().getArray());\n    }\n    var source = layers[i].getSource();\n    if (source && source.loading) {\n      return true;\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = (function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<module:ol/events~EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(module:ol/MapEvent)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    var this$1 = this;\n\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this$1.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires module:ol/render/Event~RenderEvent\n */\nvar Layer = (function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {module:ol/source/Source} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        evt.frameState.layerStatesArray.push(layerState);\n        evt.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {module:ol/source/Source} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = (function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Get a list of visible attributions.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.getSourceAttributions_ = function getSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = layerState.layer.getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    var this$1 = this;\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.getSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this$1.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = (function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = (function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = (function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n\n    /**\n     * @type {function(module:ol/MapBrowserEvent):boolean}\n     */\n    this.handleEvent = options.handleEvent;\n\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = (function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  var browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport {FALSE, VOID} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleDragEvent = VOID;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleMoveEvent = VOID;\n\n\n/**\n * @typedef {Object} Options\n * @property {function(module:ol/MapBrowserPointerEvent):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(module:ol/MapBrowserPointerEvent)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(module:ol/MapBrowserEvent):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(module:ol/MapBrowserPointerEvent)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(module:ol/MapBrowserPointerEvent):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} stopDown\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = (function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: options.handleEvent || handleEvent\n    });\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleDownEvent_ = options.handleDownEvent ?\n      options.handleDownEvent : handleDownEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleDragEvent_ = options.handleDragEvent ?\n      options.handleDragEvent : handleDragEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleMoveEvent_ = options.handleMoveEvent ?\n      options.handleMoveEvent : handleMoveEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleUpEvent_ = options.handleUpEvent ?\n      options.handleUpEvent : handleUpEvent;\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @type {function(boolean):boolean}\n     * @protected\n     */\n    this.stopDown = options.stopDown ? options.stopDown : stopDown;\n\n    /**\n     * @type {!Object<string, module:ol/pointer/PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<module:ol/pointer/PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol/pixel~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  var stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      var handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      var handled = this.handleDownEvent_(mapBrowserEvent);\n      if (handled) {\n        mapBrowserEvent.preventDefault();\n      }\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.stopDown(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\nexport default PointerInteraction;\n\n/**\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the `down` event be stopped?\n */\nfunction stopDown(handled) {\n  return handled;\n}\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = (function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/Kinetic|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  return DragPan;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!this.panning_) {\n    this.panning_ = true;\n    this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n  }\n  var targetPointers = this.targetPointers;\n  var centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      var deltaX = this.lastCentroid[0] - centroid[0];\n      var deltaY = centroid[1] - this.lastCentroid[1];\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      var distance = this.kinetic_.getDistance();\n      var angle = this.kinetic_.getAngle();\n      var center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      var centerpx = map.getPixelFromCoordinate(center);\n      var dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    if (this.panning_) {\n      this.panning_ = false;\n      view.setHint(ViewHint.INTERACTING, -1);\n    }\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    this.lastCentroid = null;\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = (function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  return DragRotate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    var delta = theta - this.lastAngle_;\n    var rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = (function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {module:ol/geom/Polygon}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} startPixel Start pixel.\n   * @param {module:ol/pixel~Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {module:ol/geom/Polygon} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol/pixel~Pixel, module:ol/pixel~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = (function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @api\n */\nvar DragBox = (function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {module:ol/render/Box}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {module:ol/pixel~Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {module:ol/events/condition~Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {module:ol/interaction/DragBox~EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {module:ol/geom/Polygon} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol/pixel~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol/pixel~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  var width = endPixel[0] - startPixel[0];\n  var height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd_(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = (function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {module:ol/interaction/DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!module:ol/View} */ (map.getView());\n  var size = /** @type {!module:ol/size~Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = (function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = (function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = (function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?module:ol/coordinate~Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.timeoutId_ = undefined;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.trackpadTimeoutId_ = undefined;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  var map = mapBrowserEvent.map;\n  var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  var delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  var now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    var view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    var minResolution = view.getMinResolution();\n    var maxResolution = view.getMaxResolution();\n    var rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = (function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  return PinchRotate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var rotationDelta = 0.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n\n  // angle between touches\n  var angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    var delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    var rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = (function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  return PinchZoom;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var scaleDelta = 1.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n  var dx = touch0.clientX - touch1.clientX;\n  var dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  var distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  var resolution = view.getResolution();\n  var maxResolution = view.getMaxResolution();\n  var minResolution = view.getMinResolution();\n  var newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      var direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = (function (Event) {\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\n\n    Event.call(this, type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<module:ol/Feature>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {module:ol/proj/Projection|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n  if ( Event ) DragAndDropEvent.__proto__ = Event;\n  DragAndDropEvent.prototype = Object.create( Event && Event.prototype );\n  DragAndDropEvent.prototype.constructor = DragAndDropEvent;\n\n  return DragAndDropEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n */\nvar DragAndDrop = (function (Interaction) {\n  function DragAndDrop(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array<function(new: module:ol/format/Feature)>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  if ( Interaction ) DragAndDrop.__proto__ = Interaction;\n  DragAndDrop.prototype = Object.create( Interaction && Interaction.prototype );\n  DragAndDrop.prototype.constructor = DragAndDrop;\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  DragAndDrop.prototype.handleResult_ = function handleResult_ (file, event) {\n    var this$1 = this;\n\n    var result = event.target.result;\n    var map = this.getMap();\n    var projection = this.projection_;\n    if (!projection) {\n      var view = map.getView();\n      projection = view.getProjection();\n    }\n\n    var formatConstructors = this.formatConstructors_;\n    var features = [];\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      /**\n       * Avoid \"cannot instantiate abstract class\" error.\n       * @type {Function}\n       */\n      var formatConstructor = formatConstructors[i];\n      /**\n       * @type {module:ol/format/Feature}\n       */\n      var format = new formatConstructor();\n      features = this$1.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.registerListeners_ = function registerListeners_ () {\n    var map = this.getMap();\n    if (map) {\n      var dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setActive = function setActive (active) {\n    Interaction.prototype.setActive.call(this, active);\n    if (active) {\n      this.registerListeners_();\n    } else {\n      this.unregisterListeners_();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setMap = function setMap (map) {\n    this.unregisterListeners_();\n    Interaction.prototype.setMap.call(this, map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  };\n\n  /**\n   * @param {module:ol/format/Feature} format Format.\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions} options Read options.\n   * @private\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  DragAndDrop.prototype.tryReadFeatures_ = function tryReadFeatures_ (format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.unregisterListeners_ = function unregisterListeners_ () {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  };\n\n  return DragAndDrop;\n}(Interaction));\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  var this$1 = this;\n\n  var files = event.dataTransfer.files;\n  for (var i = 0, ii = files.length; i < ii; ++i) {\n    var file = files.item(i);\n    var reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this$1.handleResult_.bind(this$1, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n\n//# sourceMappingURL=DragAndDrop.js.map","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = (function (PointerInteraction) {\n  function DragRotateAndZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n  if ( PointerInteraction ) DragRotateAndZoom.__proto__ = PointerInteraction;\n  DragRotateAndZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotateAndZoom.prototype.constructor = DragRotateAndZoom;\n\n  return DragRotateAndZoom;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var deltaX = offset[0] - size[0] / 2;\n  var deltaY = size[1] / 2 - offset[1];\n  var theta = Math.atan2(deltaY, deltaX);\n  var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  var view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    var angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    var resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n\n//# sourceMappingURL=DragRotateAndZoom.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, module:ol/color~Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires module:ol/events/Event~Event\n * @template T\n */\nvar LRUCache = (function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, module:ol/structs/LRUCache~Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var this$1 = this;\n\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this$1);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      this$1.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {};\n\n/**\n * @abstract\n * @return {module:ol/ImageState} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {};\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {};\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {module:ol/size~Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {module:ol/events~EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {};\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = (function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/style/AtlasManager|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {module:ol/style/RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {module:ol/style/Fill} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {module:ol/style/Stroke} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {module:ol/style/RegularShape~RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return this.checksums_[0];\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = (function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || {};\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {module:ol/style/Circle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array<Array<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<module:ol/style/Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<module:ol/style/Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<module:ol/geom/GeometryType, Array<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<module:ol/geom/GeometryType, Array<module:ol/style/Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = (function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Style~StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties !== undefined) {\n      if (opt_geometryOrProperties instanceof Geometry ||\n          !opt_geometryOrProperties) {\n        var geometry = opt_geometryOrProperties;\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {module:ol/Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<module:ol/style/Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = (function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {module:ol/coordinate~Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!module:ol/coordinate~Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {};\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = (function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = (function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(coordinates, opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var lineString = coordinates[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {module:ol/geom/LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<module:ol/geom/LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<module:ol/geom/LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = (function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {module:ol/geom/Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<module:ol/geom/Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<module:ol/geom/Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = (function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var polygon = coordinates[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {module:ol/geom/Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this$1.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<module:ol/coordinate~Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<module:ol/geom/Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport var RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = (function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {module:ol/style/Style~StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {module:ol/layer/VectorTileRenderType|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {module:ol/layer/VectorRenderType|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<module:ol/extent~Extent>} */\n      var extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/Source\n */\n\nimport {VOID} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @api\n */\nvar Source = (function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n    * @private\n    * @type {module:ol/proj/Projection}\n    */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n    * @private\n    * @type {?module:ol/source/Source~Attribution}\n    */\n    this.attributions_ = this.adaptAttributions_(options.attributions);\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n    * @private\n    * @type {module:ol/source/State}\n    */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n  * Turns the attributions option into an attributions function.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n  * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n  */\n  Source.prototype.adaptAttributions_ = function adaptAttributions_ (attributionLike) {\n    if (!attributionLike) {\n      return null;\n    }\n    if (Array.isArray(attributionLike)) {\n      return function(frameState) {\n        return attributionLike;\n      };\n    }\n\n    if (typeof attributionLike === 'function') {\n      return attributionLike;\n    }\n\n    return function(frameState) {\n      return [attributionLike];\n    };\n  };\n\n  /**\n  * Get the attribution function for the source.\n  * @return {?module:ol/source/Source~Attribution} Attribution function.\n  */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n  * Get the projection of the source.\n  * @return {module:ol/proj/Projection} Projection.\n  * @api\n  */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n  * @abstract\n  * @return {Array<number>|undefined} Resolutions.\n  */\n  Source.prototype.getResolutions = function getResolutions () {};\n\n  /**\n  * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n  * @return {module:ol/source/State} State.\n  * @api\n  */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n  * @return {boolean|undefined} Wrap X.\n  */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n  * Refreshes the source and finally dispatches a 'change' event.\n  * @api\n  */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n  * Set the attributions of the source.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n  *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n  *     or `undefined`.\n  * @api\n  */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = this.adaptAttributions_(attributions);\n    this.changed();\n  };\n\n  /**\n  * Set the state of the source.\n  * @param {module:ol/source/State} state State.\n  * @protected\n  */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|void} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = VOID;\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<module:ol/extent~Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n    var this$1 = this;\n\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this$1.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  // FIXME add getExtent() to rbush\n  var data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n    var this$1 = this;\n\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this$1.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = (function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {module:ol/Feature|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array<module:ol/Feature>|module:ol/Collection<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector~VectorSourceEvent\n * @api\n */\nvar VectorSource = (function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector~LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush<module:ol/Feature>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush<{extent: module:ol/extent~Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, module:ol/Feature>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, module:ol/Feature>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, module:ol/Feature>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<module:ol/events~EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Collection<module:ol/Feature>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (options.features instanceof Collection) {\n      collection = options.features;\n      features = collection.getArray();\n    } else if (Array.isArray(options.features)) {\n      features = options.features;\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {module:ol/Feature} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {module:ol/Feature} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature).toString();\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {module:ol/Feature} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {module:ol/Feature} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<module:ol/Feature>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<module:ol/Feature>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var this$1 = this;\n\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature).toString();\n      if (this$1.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1).toString();\n      this$1.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this$1.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this$1.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!module:ol/Collection<module:ol/Feature>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    var this$1 = this;\n\n    if (opt_fast) {\n      for (var featureId in this$1.featureChangeKeys_) {\n        var keys = this$1.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this$1.nullGeometryFeatures_) {\n          this$1.removeFeatureInternal(this$1.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(module:ol/Feature): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {function(module:ol/Feature): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {function(module:ol/Feature): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {function(module:ol/Feature): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       * @template T\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {module:ol/Collection<module:ol/Feature>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<module:ol/Feature>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {module:ol/Feature} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {module:ol/Feature} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {module:ol/format/Feature|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * @override\n   */\n  VectorSource.prototype.getResolutions = function getResolutions () {};\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {module:ol/Feature} */ (event.target);\n    var featureKey = getUid(feature).toString();\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {module:ol/Feature} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      var featureKey = getUid(feature).toString();\n      return featureKey in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj/Projection} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: module:ol/extent~Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = true;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {module:ol/Feature} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature).toString();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {module:ol/Feature} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature).toString();\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {module:ol/Feature} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var this$1 = this;\n\n    var removed = false;\n    for (var id in this$1.idIndex_) {\n      if (this$1.idIndex_[id] === feature) {\n        delete this$1.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = (function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {module:ol/Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires module:ol/interaction/Draw~DrawEvent\n * @api\n */\nvar Draw = (function (PointerInteraction) {\n  function Draw(options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {module:ol/Collection<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {module:ol/geom/GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {module:ol/interaction/Draw~Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!Array<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!Array<module:ol/coordinate~Coordinate>} coordinates\n         *     The coordinates.\n         * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n         * @return {module:ol/geom/SimpleGeometry} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {module:ol/interaction/Draw~GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array<Array<module:ol/coordinate~Coordinate>>}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {Array<module:ol/coordinate~Coordinate>}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {module:ol/layer/Vector} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * Handle move events.\n   * @param {module:ol/MapBrowserEvent} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var this$1 = this;\n\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        potentiallyDone = this.sketchCoords_[0].length >\n            this.minPoints_;\n        potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n          this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this$1.freehand_ ? 1 : this$1.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this$1.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!Array<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    var sketchLineGeom;\n    if (geometry instanceof Polygon &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = geometry.getLinearRing(0);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {module:ol/MapBrowserEvent} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = this.sketchCoords_;\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n    var coordinates, sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = this.sketchCoords_;\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = this.sketchCoords_[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      coordinates[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([coordinates]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {module:ol/Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      this.overlay_.getSource().clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!module:ol/Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  var move = event.type === MapBrowserEventType.POINTERMOVE;\n  var pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    var now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  var pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  var circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = coordinates[0];\n    var end = coordinates[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(coordinates);\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentInteractionEvent = (function (Event) {\n  function ExtentInteractionEvent(extent) {\n    Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {module:ol/extent~Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n  if ( Event ) ExtentInteractionEvent.__proto__ = Event;\n  ExtentInteractionEvent.prototype = Object.create( Event && Event.prototype );\n  ExtentInteractionEvent.prototype.constructor = ExtentInteractionEvent;\n\n  return ExtentInteractionEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/Extent~Event\n * @api\n */\nvar ExtentInteraction = (function (PointerInteraction) {\n  function ExtentInteraction(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * Extent of the drawn box\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  if ( PointerInteraction ) ExtentInteraction.__proto__ = PointerInteraction;\n  ExtentInteraction.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  ExtentInteraction.prototype.constructor = ExtentInteraction;\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel cursor location\n   * @param {module:ol/PluggableMap} map map\n   * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  ExtentInteraction.prototype.snapToVertex_ = function snapToVertex_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    var extent = this.getExtent();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n\n      var vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n   * @private\n   */\n  ExtentInteraction.prototype.handlePointerMove_ = function handlePointerMove_ (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n\n    var vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixel(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent extent\n   * @returns {module:ol/Feature} extent as featrue\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdateExtentFeature_ = function createOrUpdateExtentFeature_ (extent) {\n    var extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} vertex location of feature\n   * @returns {module:ol/Feature} vertex as feature\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdatePointerFeature_ = function createOrUpdatePointerFeature_ (vertex) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.setMap = function setMap (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n   * @api\n   */\n  ExtentInteraction.prototype.getExtent = function getExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {module:ol/extent~Extent} extent Extent\n   * @api\n   */\n  ExtentInteraction.prototype.setExtent = function setExtent (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n  };\n\n  return ExtentInteraction;\n}(PointerInteraction));\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  var pixel = mapBrowserEvent.pixel;\n  var map = mapBrowserEvent.map;\n\n  var extent = this.getExtent();\n  var vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  var getOpposingPoint = function(point) {\n    var x_ = null;\n    var y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    var pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  var extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default ExtentInteraction;\n\n//# sourceMappingURL=Extent.js.map","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array<module:ol/extent~Extent>} segment\n * @property {Array<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport var ModifyEvent = (function (Event) {\n  function ModifyEvent(type, features, mapBrowserPointerEvent) {\n    Event.call(this, type);\n\n    /**\n     * The features being modified.\n     * @type {module:ol/Collection<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n  if ( Event ) ModifyEvent.__proto__ = Event;\n  ModifyEvent.prototype = Object.create( Event && Event.prototype );\n  ModifyEvent.prototype.constructor = ModifyEvent;\n\n  return ModifyEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nvar Modify = (function (PointerInteraction) {\n  function Modify(options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleEvent: handleEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {module:ol/events/condition~Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {module:ol/structs/RBush<module:ol/interaction/Modify~SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {module:ol/layer/Vector}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = null;\n\n    var features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {module:ol/Collection<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {module:ol/MapBrowserPointerEvent}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  if ( PointerInteraction ) Modify.__proto__ = PointerInteraction;\n  Modify.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Modify.prototype.constructor = Modify;\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.addFeature_ = function addFeature_ (feature) {\n    var geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    var map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n   * @private\n   */\n  Modify.prototype.willModifyFeatures_ = function willModifyFeatures_ (evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeature_ = function removeFeature_ (feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeatureSegmentData_ = function removeFeatureSegmentData_ (feature) {\n    var rBush = this.rBush_;\n    var /** @type {Array<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setActive = function setActive (active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    PointerInteraction.prototype.setActive.call(this, active);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setMap = function setMap (map) {\n    this.overlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {module:ol/layer/Vector} Overlay layer.\n   * @api\n   */\n  Modify.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceAdd_ = function handleSourceAdd_ (event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceRemove_ = function handleSourceRemove_ (event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n  };\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    if (!this.changingFeature_) {\n      var feature = /** @type {module:ol/Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = /** @type {module:ol/Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCenter();\n    var centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      this$1.SEGMENT_WRITERS_[geometries[i].getType()].call(this$1, feature, geometries[i]);\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n   * @return {module:ol/Feature} Vertex feature.\n   * @private\n   */\n  Modify.prototype.createOrUpdateVertexFeature_ = function createOrUpdateVertexFeature_ (coordinates) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handlePointerMove_ = function handlePointerMove_ (evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/PluggableMap} map Map.\n   * @private\n   */\n  Modify.prototype.handlePointerAtPixel_ = function handlePointerAtPixel_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    var rBush = this.rBush_;\n    var nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      var node = nodes[0];\n      var closestSegment = node.segment;\n      var vertex = closestOnSegmentData(pixelCoordinate, node);\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n      var dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        var vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\n            var segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  };\n\n  /**\n   * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n   * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n   * @private\n   */\n  Modify.prototype.insertVertex_ = function insertVertex_ (segmentData, vertex) {\n    var segment = segmentData.segment;\n    var feature = segmentData.feature;\n    var geometry = segmentData.geometry;\n    var depth = segmentData.depth;\n    var index = /** @type {number} */ (segmentData.index);\n    var coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    var rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    var newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    var newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  };\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  Modify.prototype.removePoint = function removePoint () {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      var evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  Modify.prototype.removeVertex_ = function removeVertex_ () {\n    var this$1 = this;\n\n    var dragSegments = this.dragSegments_;\n    var segmentsByFeature = {};\n    var deleted = false;\n    var component, coordinates, dragSegment, geometry, i, index, left;\n    var newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this$1.setGeometryCoordinates_(geometry, coordinates);\n        var segments = [];\n        if (left !== undefined) {\n          this$1.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this$1.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          var newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this$1.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this$1.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this$1.vertexFeature_) {\n          this$1.overlay_.getSource().removeFeature(this$1.vertexFeature_);\n          this$1.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  };\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  Modify.prototype.setGeometryCoordinates_ = function setGeometryCoordinates_ (geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  };\n\n  /**\n   * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  Modify.prototype.updateSegmentIndices_ = function updateSegmentIndices_ (geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  };\n\n  return Modify;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  var this$1 = this;\n\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  var vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    var insertVertices = [];\n    var geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    var vertex = geometry.getCoordinates();\n    var vertexExtent = boundingExtent([vertex]);\n    var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    var componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      var segmentDataMatch = segmentDataMatches[i];\n      var segment = segmentDataMatch.segment;\n      var uid = getUid(segmentDataMatch.feature);\n      var depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this$1.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this$1.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this$1.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this$1.insertVertexCondition_(evt) && getUid(segment) in this$1.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (var j = insertVertices.length - 1; j >= 0; --j) {\n      this$1.insertVertex_.apply(this$1, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  var this$1 = this;\n\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  var vertex = evt.coordinate;\n  for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    var dragSegment = this$1.dragSegments_[i];\n    var segmentData = dragSegment[0];\n    var depth = segmentData.depth;\n    var geometry = segmentData.geometry;\n    var coordinates = (void 0);\n    var segment = segmentData.segment;\n    var index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this$1.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this$1.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this$1.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this$1.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this$1.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  var this$1 = this;\n\n  for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n    var segmentData = this$1.dragSegments_[i][0];\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      var coordinates = geometry.getCenter();\n      var centerSegmentData = segmentData.featureSegments[0];\n      var circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this$1.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this$1.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this$1.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  var handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      var distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      var distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n\n//# sourceMappingURL=Modify.js.map","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = (function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * Selected features array.\n     * @type {Array<module:ol/Feature>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<module:ol/Feature>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = (function (Interaction) {\n  function Select(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/Select~FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/layer/Vector}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<number, module:ol/layer/Layer>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    var features = this.featureOverlay_.getSource().getFeaturesCollection();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\n    var key = getUid(feature);\n    this.featureLayerAssociation_[key] = layer;\n  };\n\n  /**\n   * Get the selected features.\n   * @return {module:ol/Collection<module:ol/Feature>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function getFeatures () {\n    return this.featureOverlay_.getSource().getFeaturesCollection();\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n   * @return {module:ol/layer/Vector} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function getLayer (feature) {\n    var key = getUid(feature);\n    return (\n      /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n    );\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders selected features to.\n   * @return {module:ol/layer/Vector} Overlay layer.\n   * @api\n   */\n  Select.prototype.getOverlay = function getOverlay () {\n    return this.featureOverlay_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {module:ol/PluggableMap} map Map.\n   * @override\n   * @api\n   */\n  Select.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var selectedFeatures =\n        this.featureOverlay_.getSource().getFeaturesCollection();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\n    var key = getUid(feature);\n    delete this.featureLayerAssociation_[key];\n  };\n\n  return Select;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.featureOverlay_.getSource().getFeaturesCollection();\n  var deselected = [];\n  var selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n\n//# sourceMappingURL=Select.js.map","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol/pixel~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = (function (PointerInteraction) {\n  function Snap(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleEvent: handleEvent,\n      handleDownEvent: TRUE,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {module:ol/Collection<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<number, module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<number, module:ol/extent~Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<number, module:ol/Feature>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {module:ol/structs/RBush<module:ol/interaction/Snap~SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  if ( PointerInteraction ) Snap.__proto__ = PointerInteraction;\n  Snap.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Snap.prototype.constructor = Snap;\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.addFeature = function addFeature (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureAdd_ = function forEachFeatureAdd_ (feature) {\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureRemove_ = function forEachFeatureRemove_ (feature) {\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @return {module:ol/Collection<module:ol/Feature>|Array<module:ol/Feature>} Features.\n   * @private\n   */\n  Snap.prototype.getFeatures_ = function getFeatures_ () {\n    var features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return (\n      /** @type {!Array<module:ol/Feature>|!module:ol/Collection<module:ol/Feature>} */ (features)\n    );\n  };\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    var feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.addFeature(/** @type {module:ol/Feature} */ (feature));\n  };\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n  };\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    var feature = /** @type {module:ol/Feature} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.removeFeature = function removeFeature (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features = this.getFeatures_();\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    PointerInteraction.prototype.setMap.call(this, map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n   * @param {module:ol/PluggableMap} map Map.\n   * @return {module:ol/interaction/Snap~Result} Snap result\n   */\n  Snap.prototype.snapTo = function snapTo (pixel, pixelCoordinate, map) {\n\n    var lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n\n    var segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    var snappedToVertex = false;\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n    var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      var closestSegment = segments[0].segment;\n      var isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {module:ol/interaction/Snap~Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @private\n   */\n  Snap.prototype.updateFeature_ = function updateFeature_ (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygon = fromCircle(geometry);\n    var coordinates = polygon.getCoordinates()[0];\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this$1.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this$1, feature, geometries[i]);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this$1.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this$1.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this$1.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var this$1 = this;\n\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this$1.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  return Snap;\n}(PointerInteraction));\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  var featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n\n//# sourceMappingURL=Snap.js.map","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport var TranslateEvent = (function (Event) {\n  function TranslateEvent(type, features, coordinate) {\n\n    Event.call(this, type);\n\n    /**\n     * The features being translated.\n     * @type {module:ol/Collection<module:ol/Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n  if ( Event ) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create( Event && Event.prototype );\n  TranslateEvent.prototype.constructor = TranslateEvent;\n\n  return TranslateEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @api\n */\nvar Translate = (function (PointerInteraction) {\n  function Translate(opt_options) {\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * The last position we translated to.\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {module:ol/Collection<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  if ( PointerInteraction ) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Translate.prototype.constructor = Translate;\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {module:ol/pixel~Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {module:ol/PluggableMap} map Map to test the intersection on.\n   * @return {module:ol/Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_ (pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n\n  /**\n   * @private\n   */\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_ () {\n    this.updateState_(null);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} oldMap Old map.\n   * @private\n   */\n  Translate.prototype.updateState_ = function updateState_ (oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n\n  return Translate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    var newCoordinate = event.coordinate;\n    var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    var features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      var geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  var elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\nexport default Translate;\n\n//# sourceMappingURL=Translate.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = (function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {};\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {module:ol/ImageState} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {};\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\nvar ImageCanvas = (function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?module:ol/ImageCanvas~Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = (function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {module:ol/render/VectorContext|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {module:ol/PluggableMap~FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {module:ol/webgl/Context|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = (function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this$1.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this$1.imageAnchorY_;\n      if (rotation !== 0 || this$1.imageScale_ != 1) {\n        var centerX = x + this$1.imageAnchorX_;\n        var centerY = y + this$1.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this$1.imageScale_, this$1.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this$1.image_, this$1.imageOriginX_, this$1.imageOriginY_,\n        this$1.imageWidth_, this$1.imageHeight_, x, y,\n        this$1.imageWidth_, this$1.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this$1.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this$1.textOffsetY_;\n      if (rotation !== 0 || this$1.textScale_ != 1) {\n        var localTransform = composeTransform(this$1.tmpLocalTransform_,\n          x, y,\n          this$1.textScale_, this$1.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this$1.textStrokeState_) {\n        context.strokeText(this$1.text_, x, y);\n      }\n      if (this$1.textFillState_) {\n        context.fillText(this$1.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {module:ol/geom/Circle} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/style/Style} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this$1.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var this$1 = this;\n\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = geometry.getEnds();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, geometry.getEnds(), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    var this$1 = this;\n\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this$1.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n            textState.textBaseline;\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {module:ol/style/Fill} fillStyle Fill style.\n   * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {module:ol/style/Image} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {module:ol/style/Text} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, module:ol/style/IconImage>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n    var this$1 = this;\n\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this$1.cache_) {\n      var iconImage = this$1.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this$1.cache_[key];\n        --this$1.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @return {module:ol/style/IconImage} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @param {module:ol/style/IconImage} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\nvar MapRenderer = (function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, module:ol/renderer/Layer>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, module:ol/events~EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<module:ol/renderer/Layer>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<module:ol/renderer/Layer>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * Get the registered layer renderer constructors.\n   * @return {Array<module:ol/renderer/Layer>} Registered layer renderers.\n   */\n  MapRenderer.prototype.getLayerRendererConstructors = function getLayerRendererConstructors () {\n    return this.layerRendererConstructors_;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    var this$1 = this;\n\n    for (var key in this$1.layerRenderers_) {\n      this$1.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @param {module:ol/layer/Layer} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var key = getUid(feature).toString();\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(key in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        if (layer.getSource()) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {};\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var this$1 = this;\n\n    var layerKey = getUid(layer).toString();\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this$1.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this$1, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, module:ol/renderer/Layer>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {module:ol/PluggableMap} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this$1.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this$1.removeUnusedLayerRenderers_.bind(this$1))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = VOID;\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.dispatchRenderEvent = VOID;\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<module:ol/renderer/Layer>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = (function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii, layer, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      layer = layerState.layer;\n      layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, VOID} from '../functions.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = (function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/layer/Layer}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {module:ol/source/Tile} source Tile source.\n   * @param {module:ol/proj/Projection} projection Projection of the tiles.\n   * @param {Object<number, Object<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, module:ol/TileRange):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {module:ol/TileRange} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @return {module:ol/layer/Layer} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {module:ol/events/Event} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {module:ol/Image} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {module:ol/ImageBase} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {module:ol/source/Tile} tileSource Tile source.\n       * @param {module:ol/PluggableMap} map Map.\n       * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource).toString();\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, module:ol/TileRange>>} usedTiles Used tiles.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource).toString();\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource).toString();\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T} callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|void} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = VOID;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\nvar CanvasLayerRenderer = (function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/extent~Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n    var topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {};\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {};\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {VOID} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\nvar IntermediateCanvasRenderer = (function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      context.drawImage(image, 0, 0, +image.width, +image.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {};\n\n  /**\n   * @abstract\n   * @return {!module:ol/transform~Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {};\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var layer = this.getLayer();\n    var source = layer.getSource();\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== VOID) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.call(this, arguments);\n    } else {\n      var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n      scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n      var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    var this$1 = this;\n\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/renderer/canvas/VectorLayer}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this$1.vectorRenderer_ = new ctor(imageLayer);\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    var imageSource = imageLayer.getSource();\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n* @return {number} Height.\n*/\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n* @return {module:ol/size~Size} Size.\n*/\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n* @return {number} Width.\n*/\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n* @param {module:ol/TileRange} tileRange Tile range.\n* @return {boolean} Intersects.\n*/\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<module:ol/Tile>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {module:ol/TileRange}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {module:ol/Tile} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileState = tile.getState();\n    var useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var layer = this.getLayer();\n    var source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n    var tile = source.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!layer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (layer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var this$1 = this;\n\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = this.getLayer();\n    var tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, module:ol/Tile>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this$1.getTile(z, x, y, pixelRatio, projection);\n        if (this$1.isDrawableTile_(tile)) {\n          var uid = getUid(this$1);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this$1.newTiles_ && (inTransition || this$1.renderedTiles.indexOf(tile) === -1)) {\n              this$1.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this$1.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this$1.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = tile.getImage(this.getLayer());\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<module:ol/render/ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {VOID} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = (function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array<Array<module:ol/coordinate~Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!module:ol/transform~Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/render/canvas~FillStrokeState}\n     */\n    this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p1;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p2;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p3;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n    var this$1 = this;\n\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this$1.coordinates[myEnd++] = lastCoord[0];\n          this$1.coordinates[myEnd++] = lastCoord[1];\n        }\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    var this$1 = this;\n\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this$1.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {string} */ (instruction[3]);\n    context.lineJoin = /** @type {string} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    var this$1 = this;\n\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {module:ol/structs/RBush~Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this$1.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    var this$1 = this;\n\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {module:ol/render~State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          if ((skipFeatures &&\n              skippedFeaturesHash[getUid(feature).toString()]) ||\n              !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this$1.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this$1.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            var textAlign = /** @type {module:ol~render} */ (this$1).textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this$1).getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this$1).getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this$1.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this$1.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this$1.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this$1.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var this$1 = this;\n\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this$1.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array<*>} createFill Create fill.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {module:ol/extent~Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = VOID;\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nvar CanvasImageReplay = (function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nvar CanvasLineStringReplay = (function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\nvar CanvasPolygonReplay = (function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this$1.coordinates.length;\n      var myEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this$1.instructions.push(moveToLineToInstruction);\n      this$1.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this$1.instructions.push(closePathInstruction);\n        this$1.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = (function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, module:ol/render/canvas~FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, module:ol/render/canvas~StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~TextState}\n     */\n    this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n    /**\n     * @type {!Object<string, module:ol/render/canvas~TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var this$1 = this;\n\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this$1.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this$1.coordinates.length;\n        flatOffset = ends[o];\n        this$1.drawChars_(begin, end, this$1.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this$1.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = strokeState.lineCap;\n        context.lineJoin = strokeState.lineJoin;\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array<module:ol/render/canvas~DeclutterGroup>)>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = (function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @param {boolean} group Group with previous replay.\n   * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<module:ol/render/ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    var this$1 = this;\n\n    for (var zIndex in this$1.replaysByZIndex_) {\n      var candidates = this$1.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    var this$1 = this;\n\n    for (var zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n   * @param {Object<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = (function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas/ReplayGroup}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    var vectorSource = vectorLayer.getSource();\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorLayer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<module:ol/Feature>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {module:ol/Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render, this);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/style/Style|Array<module:ol/style/Style>} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<module:ol/render/ReplayType>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<module:ol/render/ReplayType>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = (function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(tile, pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(tile, pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = this.getLayer();\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n      var renderMode = layer.getRenderMode();\n      if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n        this.context = createCanvasContext2D();\n      }\n      if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n        this.context = null;\n      }\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var zIndexKeys = {};\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @this {module:ol/renderer/canvas/VectorTileLayer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      for (var r in replayGroup.getReplays()) {\n        zIndexKeys[r] = true;\n      }\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    /** @type {Array<module:ol/VectorImageTile>} */\n    var renderedTiles = this.renderedTiles;\n\n    var bufferedExtent, found;\n    var i, ii, replayGroup;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature).toString();\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {module:ol/VectorTile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {module:ol/transform~Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this$1.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this$1.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {module:ol/style/Style|Array<module:ol/style/Style>} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this$1.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = (function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/format/Feature\n */\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {module:ol/proj~ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {module:ol/extent~Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {module:ol/proj~ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/format/Feature~ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {module:ol/extent~Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {module:ol/format/FormatType} Format.\n */\nFeatureFormat.prototype.getType = function getType () {};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array<module:ol/Feature>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {};\n\nexport default FeatureFormat;\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined} opt_options\n *     Options.\n * @return {module:ol/geom/Geometry|module:ol/extent~Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {module:ol/geom/Geometry|module:ol/extent~Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (geometry instanceof Geometry) {\n      transformed = (write ? geometry.clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    } else {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && opt_options.decimals !== undefined) {\n    var power = Math.pow(10, opt_options.decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = transformed.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = (function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/Feature} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {};\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {};\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/geom/Geometry} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {};\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {};\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {};\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {};\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {};\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @const\n * @type {Object<module:ol/geom/GeometryType, function(EsriJSONGeometry): module:ol/geom/Geometry>}\n */\nvar GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n\n\n/**\n * @const\n * @type {Object<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (EsriJSONGeometry)>}\n */\nvar GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nvar EsriJSON = (function (JSONFeature) {\n  function EsriJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n  }\n\n  if ( JSONFeature ) EsriJSON.__proto__ = JSONFeature;\n  EsriJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  EsriJSON.prototype.constructor = EsriJSON;\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (opt_options && opt_options.idField &&\n      esriJSONFeature.attributes[opt_options.idField]) {\n      feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\n    }\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var this$1 = this;\n\n    var esriJSONObject = /** @type {EsriJSONObject} */ (object);\n    var options = opt_options ? opt_options : {};\n    if (esriJSONObject.features) {\n      var esriJSONFeatureCollection = /** @type {EsriJSONFeatureCollection} */ (object);\n      /** @type {Array<module:ol/Feature>} */\n      var features = [];\n      var esriJSONFeatures = esriJSONFeatureCollection.features;\n      options.idField = object.objectIdFieldName;\n      for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(this$1.readFeatureFromObject(esriJSONFeatures[i], options));\n      }\n      return features;\n    } else {\n      return [this.readFeatureFromObject(object, options)];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var esriJSONObject = /** @type {EsriJSONObject} */ (object);\n    if (esriJSONObject.spatialReference && esriJSONObject.spatialReference.wkid) {\n      var crs = esriJSONObject.spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var object = {};\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, opt_options);\n      if (opt_options && opt_options.featureProjection) {\n        object['geometry']['spatialReference'] = /** @type {EsriJSONCRS} */({\n          wkid: getProjection(opt_options.featureProjection).getCode().split(':').pop()\n        });\n      }\n    }\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} EsriJSON Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    var this$1 = this;\n\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this$1.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {EsriJSONFeatureCollection} */ ({\n      'features': objects\n    });\n  };\n\n  return EsriJSON;\n}(JSONFeature));\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {module:ol/geom/GeometryType} */\n  var type;\n  if (typeof object.x === 'number' && typeof object.y === 'number') {\n    type = GeometryType.POINT;\n  } else if (object.points) {\n    type = GeometryType.MULTI_POINT;\n  } else if (object.paths) {\n    if (object.paths.length === 1) {\n      type = GeometryType.LINE_STRING;\n    } else {\n      type = GeometryType.MULTI_LINE_STRING;\n    }\n  } else if (object.rings) {\n    var layout = getGeometryLayout(object);\n    var rings = convertRings(object.rings, layout);\n    object = /** @type {EsriJSONGeometry} */(assign({}, object));\n    if (rings.length === 1) {\n      type = GeometryType.POLYGON;\n      object.rings = rings[0];\n    } else {\n      type = GeometryType.MULTI_POLYGON;\n      object.rings = rings;\n    }\n  }\n  var geometryReader = GEOMETRY_READERS[type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {module:ol/geom/GeometryLayout} layout Geometry layout.\n * @return {Array<!Array<!Array<number>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  var flatRing = [];\n  var outerRings = [];\n  var holes = [];\n  var i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    var clockwise = linearRingIsClockwise(flatRing, 0,\n      flatRing.length, layout.length);\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    var hole = holes.shift();\n    var matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      var outerRing = outerRings[i][0];\n      var containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Point.\n */\nfunction readPointGeometry(object) {\n  var point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m],\n      GeometryLayout.XYZM);\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z],\n      GeometryLayout.XYZ);\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m],\n      GeometryLayout.XYM);\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} LineString.\n */\nfunction readLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/GeometryLayout} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  var layout = GeometryLayout.XY;\n  if (object.hasZ === true && object.hasM === true) {\n    layout = GeometryLayout.XYZM;\n  } else if (object.hasZ === true) {\n    layout = GeometryLayout.XYZ;\n  } else if (object.hasM === true) {\n    layout = GeometryLayout.XYM;\n  }\n  return layout;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPolygon(\n    /** @type {Array<Array<Array<Array<number>>>>} */(object.rings),\n    layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  var coordinates = /** @type {module:ol/geom/Point} */ (geometry).getCoordinates();\n  var esriJSON;\n  var layout = /** @type {module:ol/geom/Point} */ (geometry).getLayout();\n  if (layout === GeometryLayout.XYZ) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYZM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3]\n    });\n  } else if (layout === GeometryLayout.XY) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1]\n    });\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return /** @type {EsriJSONGeometry} */ (esriJSON);\n}\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  var layout = geometry.getLayout();\n  return {\n    hasZ: (layout === GeometryLayout.XYZ ||\n      layout === GeometryLayout.XYZM),\n    hasM: (layout === GeometryLayout.XYM ||\n      layout === GeometryLayout.XYZM)\n  };\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  var hasZM = getHasZM(/** @type {module:ol/geom/LineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: [\n        /** @type {module:ol/geom/LineString} */ (geometry).getCoordinates()\n      ]\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  // Esri geometries use the left-hand rule\n  var hasZM = getHasZM(/** @type {module:ol/geom/Polygon} */(geometry));\n  return (\n    /** @type {EsriJSONPolygon} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      rings: /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates(false)\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  var hasZM = getHasZM(/** @type {module:ol/geom/MultiLineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: /** @type {module:ol/geom/MultiLineString} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  var hasZM = getHasZM(/** @type {module:ol/geom/MultiPoint} */(geometry));\n  return (\n    /** @type {EsriJSONMultipoint} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      points: /** @type {module:ol/geom/MultiPoint} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var hasZM = getHasZM(/** @type {module:ol/geom/MultiPolygon} */(geometry));\n  var coordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getCoordinates(false);\n  var output = [];\n  for (var i = 0; i < coordinates.length; i++) {\n    for (var x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return /** @type {EsriJSONPolygon} */ ({\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: output\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */(\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\nexport default EsriJSON;\n\n//# sourceMappingURL=EsriJSON.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = (function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<module:ol/geom/Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    var this$1 = this;\n\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this$1.geometries_[i], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    var this$1 = this;\n\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this$1.geometries_[i], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<module:ol/geom/Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<module:ol/geom/Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<module:ol/geom/Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<module:ol/geom/Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<module:ol/geom/Geometry>} geometries Geometries.\n * @return {Array<module:ol/geom/Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = (function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object.type === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n        type: 'Feature',\n        geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n      });\n    }\n\n    var geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n      feature.setGeometryName(geoJSONFeature.geometry_name);\n    }\n    feature.setGeometry(geometry);\n    if (geoJSONFeature.id !== undefined) {\n      feature.setId(geoJSONFeature.id);\n    }\n    if (geoJSONFeature.properties) {\n      feature.setProperties(geoJSONFeature.properties);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var this$1 = this;\n\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<module:ol/Feature>} */\n    var features = null;\n    if (geoJSONObject.type === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection.features;\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this$1.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    var crs = geoJSONObject.crs;\n    var projection;\n    if (crs) {\n      if (crs.type == 'name') {\n        projection = getProjection(crs.properties.name);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    var object = /** @type {GeoJSONFeature} */ ({\n      'type': 'Feature'\n    });\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    } else {\n      object.geometry = null;\n    }\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    } else {\n      object.properties = null;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    var this$1 = this;\n\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this$1.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: objects\n    });\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @const\n * @type {Object<string, function(GeoJSONObject): module:ol/geom/Geometry>}\n */\nvar GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nvar GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  var geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object.geometries.map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {module:ol/geom/Geometry} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Point} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Node, Array<*>)} Parser\n */\n\n\n/**\n * @typedef {function(Node, *, Array<*>)} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Node} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    var n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is document.\n */\nexport function isDocument(value) {\n  return value instanceof Document;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is node.\n */\nexport function isNode(value) {\n  return value instanceof Node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        var array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    var parent = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    var parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Node, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  var serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      var serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  var fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      var context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      var node = context.node;\n      var nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  var length = orderedKeys.length;\n  var sequence = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  var i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      var parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  var this$1 = this;\n\n  var length = (opt_keys !== undefined ? opt_keys : values).length;\n  var value, node;\n  for (var i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this$1, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/format/XMLFeature\n */\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = (function (FeatureFormat) {\n  function XMLFeature() {\n    FeatureFormat.call(this);\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = new XMLSerializer();\n  }\n\n  if ( FeatureFormat ) XMLFeature.__proto__ = FeatureFormat;\n  XMLFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  XMLFeature.prototype.constructor = XMLFeature;\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.getType = function getType () {\n    return FormatType.XML;\n  };\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   * @api\n   */\n  XMLFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n    } else if (isNode(source)) {\n      return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {module:ol/Feature} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromDocument = function readFeatureFromDocument (doc, opt_options) {\n    var features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {module:ol/Feature} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @function\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  XMLFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else if (isNode(source)) {\n      return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromDocument = function readFeaturesFromDocument (doc, opt_options) {\n    var this$1 = this;\n\n    /** @type {Array<module:ol/Feature>} */\n    var features = [];\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(features, this$1.readFeaturesFromNode(n, opt_options));\n      }\n    }\n    return features;\n  };\n\n  /**\n   * @abstract\n   * @param {Node} node Node.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {};\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else if (isNode(source)) {\n      return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromDocument = function readGeometryFromDocument (doc, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   * @api\n   */\n  XMLFeature.prototype.readProjection = function readProjection (source) {\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readProjectionFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    var node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeatureNode = function writeFeatureNode (feature, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   * @api\n   */\n  XMLFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    var node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    var node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\n    return null; // not implemented\n  };\n\n  return XMLFeature;\n}(FeatureFormat));\n\n\nexport default XMLFeature;\n\n//# sourceMappingURL=XMLFeature.js.map","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nvar ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nvar GMLBase = (function (XMLFeature) {\n  function GMLBase(opt_options) {\n    XMLFeature.call(this);\n\n    var options = /** @type {module:ol/format/GMLBase~Options} */ (opt_options ? opt_options : {});\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[GMLNS] = {\n      'featureMember': makeReplacer(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal)\n    };\n\n  }\n\n  if ( XMLFeature ) GMLBase.__proto__ = XMLFeature;\n  GMLBase.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GMLBase.prototype.constructor = GMLBase;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<module:ol/Feature> | undefined} Features.\n   */\n  GMLBase.prototype.readFeaturesInternal = function readFeaturesInternal (node, objectStack) {\n    var this$1 = this;\n\n    var localName = node.localName;\n    var features = null;\n    if (localName == 'FeatureCollection') {\n      if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n        features = pushParseAndPop([],\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n      } else {\n        features = pushParseAndPop(null,\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n      }\n    } else if (localName == 'featureMembers' || localName == 'featureMember') {\n      var context = objectStack[0];\n      var featureType = context['featureType'];\n      var featureNS = context['featureNS'];\n      var prefix = 'p';\n      var defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        featureType = [], featureNS = {};\n        for (var i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          var child = node.childNodes[i];\n          if (child.nodeType === 1) {\n            var ft = child.nodeName.split(':').pop();\n            if (featureType.indexOf(ft) === -1) {\n              var key = '';\n              var count = 0;\n              var uri = child.namespaceURI;\n              for (var candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        var ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      var parsersNS = {};\n      var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n      for (var p in featureNS) {\n        var parsers = {};\n        for (var i$1 = 0, ii$1 = featureTypes.length; i$1 < ii$1; ++i$1) {\n          var featurePrefix = featureTypes[i$1].indexOf(':') === -1 ?\n            defaultPrefix : featureTypes[i$1].split(':')[0];\n          if (featurePrefix === p) {\n            parsers[featureTypes[i$1].split(':').pop()] =\n                (localName == 'featureMembers') ?\n                  makeArrayPusher(this$1.readFeatureElement, this$1) :\n                  makeReplacer(this$1.readFeatureElement, this$1);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/Geometry|undefined} Geometry.\n   */\n  GMLBase.prototype.readGeometryElement = function readGeometryElement (node, objectStack) {\n    var context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n    /** @type {module:ol/geom/Geometry} */\n    var geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS_, node, objectStack, this);\n    if (geometry) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, context))\n      );\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/Feature} Feature.\n   */\n  GMLBase.prototype.readFeatureElement = function readFeatureElement (node, objectStack) {\n    var this$1 = this;\n\n    var n;\n    var fid = node.getAttribute('fid') || getAttributeNS(node, GMLNS, 'id');\n    var values = {};\n    var geometryName;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var localName = n.localName;\n      // Assume attribute elements have one child node and that the child\n      // is a text or CDATA node (to be treated as text).\n      // Otherwise assume it is a geometry node.\n      if (n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n        var value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n        values[localName] = value;\n      } else {\n        // boundedBy is an extent and must not be considered as a geometry\n        if (localName !== 'boundedBy') {\n          geometryName = localName;\n        }\n        values[localName] = this$1.readGeometryElement(n, objectStack);\n      }\n    }\n    var feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/Point|undefined} Point.\n   */\n  GMLBase.prototype.readPoint = function readPoint (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, GeometryLayout.XYZ);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/MultiPoint|undefined} MultiPoint.\n   */\n  GMLBase.prototype.readMultiPoint = function readMultiPoint (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var coordinates = pushParseAndPop([],\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n   */\n  GMLBase.prototype.readMultiLineString = function readMultiLineString (node, objectStack) {\n    /** @type {Array<module:ol/geom/LineString>} */\n    var lineStrings = pushParseAndPop([],\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\n   */\n  GMLBase.prototype.readMultiPolygon = function readMultiPolygon (node, objectStack) {\n    /** @type {Array<module:ol/geom/Polygon>} */\n    var polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.pointMemberParser_ = function pointMemberParser_ (node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.lineStringMemberParser_ = function lineStringMemberParser_ (node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.polygonMemberParser_ = function polygonMemberParser_ (node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/LineString|undefined} LineString.\n   */\n  GMLBase.prototype.readLineString = function readLineString (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  GMLBase.prototype.readFlatLinearRing_ = function readFlatLinearRing_ (node, objectStack) {\n    var ring = pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n      objectStack, this);\n    if (ring) {\n      return ring;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/LinearRing|undefined} LinearRing.\n   */\n  GMLBase.prototype.readLinearRing = function readLinearRing (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/Polygon|undefined} Polygon.\n   */\n  GMLBase.prototype.readPolygon = function readPolygon (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var flatLinearRings = pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      var flatCoordinates = flatLinearRings[0];\n      var ends = [flatCoordinates.length];\n      var i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>} Flat coordinates.\n   */\n  GMLBase.prototype.readFlatCoordinatesFromNode_ = function readFlatCoordinatesFromNode_ (node, objectStack) {\n    return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\n    var geometry = this.readGeometryElement(node,\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\n    return geometry ? geometry : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = {\n      featureType: this.featureType,\n      featureNS: this.featureNS\n    };\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    var features = this.readFeaturesInternal(node, [options]);\n    return features || [];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n  };\n\n  return GMLBase;\n}(XMLFeature));\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\nexport default GMLBase;\n\n//# sourceMappingURL=GMLBase.js.map","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  var s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  var s = getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  var s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  var s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n//# sourceMappingURL=xsd.js.map","/**\n * @module ol/format/GML3\n */\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nvar schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nvar GML3 = (function (GMLBase) {\n  function GML3(opt_options) {\n    var options = /** @type {module:ol/format/GMLBase~Options} */\n        (opt_options ? opt_options : {});\n\n    GMLBase.call(this, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ = options.multiCurve !== undefined ?\n      options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ = options.multiSurface !== undefined ?\n      options.multiSurface : true;\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ?\n      options.hasZ : false;\n\n  }\n\n  if ( GMLBase ) GML3.__proto__ = GMLBase;\n  GML3.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML3.prototype.constructor = GML3;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n   */\n  GML3.prototype.readMultiCurve_ = function readMultiCurve_ (node, objectStack) {\n    /** @type {Array<module:ol/geom/LineString>} */\n    var lineStrings = pushParseAndPop([],\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      var multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\n   */\n  GML3.prototype.readMultiSurface_ = function readMultiSurface_ (node, objectStack) {\n    /** @type {Array<module:ol/geom/Polygon>} */\n    var polygons = pushParseAndPop([],\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.curveMemberParser_ = function curveMemberParser_ (node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.surfaceMemberParser_ = function surfaceMemberParser_ (node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS_,\n      node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  GML3.prototype.readPatch_ = function readPatch_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.PATCHES_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  GML3.prototype.readSegment_ = function readSegment_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  GML3.prototype.readPolygonPatch_ = function readPolygonPatch_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  GML3.prototype.readLineStringSegment_ = function readLineStringSegment_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n      node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.interiorParser_ = function interiorParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.exteriorParser_ = function exteriorParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/Polygon|undefined} Polygon.\n   */\n  GML3.prototype.readSurface_ = function readSurface_ (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var flatLinearRings = pushParseAndPop([null],\n      this.SURFACE_PARSERS_, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      var flatCoordinates = flatLinearRings[0];\n      var ends = [flatCoordinates.length];\n      var i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/LineString|undefined} LineString.\n   */\n  GML3.prototype.readCurve_ = function readCurve_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.CURVE_PARSERS_, node, objectStack, this);\n    if (flatCoordinates) {\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/extent~Extent|undefined} Envelope.\n   */\n  GML3.prototype.readEnvelope_ = function readEnvelope_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[2][0],\n      flatCoordinates[2][1]);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML3.prototype.readFlatPos_ = function readFlatPos_ (node, objectStack) {\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    var m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      var i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        var y = flatCoordinates[i];\n        var x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    var len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML3.prototype.readFlatPosList_ = function readFlatPosList_ (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var contextDimension = context['srsDimension'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    var coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    var dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('dimension'));\n    } else if (node.parentNode.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        node.parentNode.getAttribute('srsDimension'));\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    var x, y, z;\n    var flatCoordinates = [];\n    for (var i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePos_ = function writePos_ (node, value, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? 3 : 2;\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName'];\n    var axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    var point = value.getCoordinates();\n    var coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = (point[0] + ' ' + point[1]);\n    } else {\n      coords = (point[1] + ' ' + point[0]);\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  };\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  GML3.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ' ' + point[1] :\n      point[1] + ' ' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePosList_ = function writePosList_ (node, value, objectStack) {\n    var this$1 = this;\n\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? 3 : 2;\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName'];\n    // only 2d for simple features profile\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n    var point;\n    for (var i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this$1.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  };\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  GML3.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      var posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    var hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI,\n      'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\n    var context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\n    var item = assign({}, context);\n    item.node = node;\n    var value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\n    var this$1 = this;\n\n    var fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', fid);\n    }\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    var properties = feature.getProperties();\n    var keys = [];\n    var values = [];\n    for (var key in properties) {\n      var value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || value instanceof Geometry) {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this$1.writeGeometryElement, this$1);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeFeatureMembers_ = function writeFeatureMembers_ (node, features, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    var serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement, this);\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS), features,\n      objectStack);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML3.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var curve = context['curve'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml',\n      nodeName);\n  };\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GML3.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var geom = createElementNS('http://www.opengis.net/gml', 'geom');\n    var context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n      curve: this.curve_, surface: this.surface_,\n      multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  };\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GML3.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var node = createElementNS('http://www.opengis.net/gml', 'featureMembers');\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n    var context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType\n    };\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  };\n\n  return GML3;\n}(GMLBase));\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\nexport default GML3;\n\n//# sourceMappingURL=GML3.js.map","/**\n * @module ol/format/GML\n */\nimport GML3 from '../format/GML3.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @param {module:ol/format/GMLBase~Options=} opt_options\n *     Optional configuration object.\n * @api\n */\nvar GML = GML3;\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\n\nexport default GML;\n\n//# sourceMappingURL=GML.js.map","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode} from '../format/xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender,\n  makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop,\n  XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (module:ol/Feature|undefined)>}\n */\nvar FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar GPX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar GPX_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @typedef {Object} Options\n * @property {function(module:ol/Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = (function (XMLFeature) {\n  function GPX(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(module:ol/Feature, Node)|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  if ( XMLFeature ) GPX.__proto__ = XMLFeature;\n  GPX.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GPX.prototype.constructor = GPX;\n\n  /**\n   * @param {Array<module:ol/Feature>} features List of features.\n   * @private\n   */\n  GPX.prototype.handleReadExtensions_ = function handleReadExtensions_ (features) {\n    var this$1 = this;\n\n    if (!features) {\n      features = [];\n    }\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      var feature = features[i];\n      if (this$1.readExtensions_) {\n        var extensionsNode = feature.get('extensionsNode_') || null;\n        this$1.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    var featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<module:ol/Feature>} */\n      var features = pushParseAndPop([], GPX_PARSERS,\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  };\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GPX.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n    return gpx;\n  };\n\n  return GPX;\n}(XMLFeature));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar RTE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar RTEPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TRK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TRKSEG_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TRKPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar WPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar LINK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar RTE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar TRK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar TRK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar TRKSEG_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar WPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  var geometry = /** @type {module:ol/Feature} */ (value).getGeometry();\n  if (geometry) {\n    var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      var parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {module:ol/geom/GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  var layout = GeometryLayout.XY;\n  var stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (var i$1 = 0, ii$1 = ends.length; i$1 < ii$1; i$1++) {\n        ends[i$1] = ends[i$1] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n    var layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n    var layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  var options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  var geometry = new LineString(flatCoordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  var options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  var layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  var geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  var options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ ({});\n  var coordinates = appendCoordinate([], layoutOptions, node, values);\n  var layout = applyLayoutOptions(layoutOptions, coordinates);\n  var geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  var context = objectStack[objectStack.length - 1];\n  var properties = context['properties'];\n  var link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var namespaceURI = parentNode.namespaceURI;\n  var properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', coordinate[1]);\n  node.setAttributeNS(null, 'lon', coordinate[0]);\n  var geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  var orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  var options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  var context = {node: node, 'properties': properties};\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  var options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  /** @type {module:ol/xml~NodeStackItem} */\n  var context = {node: node, 'properties': properties};\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  var context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  var options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  var context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\nexport default GPX;\n\n//# sourceMappingURL=GPX.js.map","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nvar TextFeature = (function (FeatureFormat) {\n  function TextFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) TextFeature.__proto__ = FeatureFormat;\n  TextFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  TextFeature.prototype.constructor = TextFeature;\n\n  /**\n   * @inheritDoc\n   */\n  TextFeature.prototype.getType = function getType () {\n    return FormatType.TEXT;\n  };\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   * @api\n   */\n  TextFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/Feature} Feature.\n   */\n  TextFeature.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {};\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  TextFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  TextFeature.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {};\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/geom/Geometry} Geometry.\n   * @api\n   */\n  TextFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  TextFeature.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {};\n\n  /**\n   * Read the projection from the source.\n   *\n   * @function\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   * @api\n   */\n  TextFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromText(getText(source));\n  };\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  TextFeature.prototype.readProjectionFromText = function readProjectionFromText (text) {\n    return this.dataProjection;\n  };\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @function\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  TextFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/Feature} feature Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {};\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  TextFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {};\n\n  /**\n   * Write a single geometry.\n   *\n   * @function\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  TextFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {};\n\n  return TextFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\nexport default TextFeature;\n\n//# sourceMappingURL=TextFeature.js.map","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nvar IGCZ = {\n  BAROMETRIC: 'barometric',\n  GPS: 'gps',\n  NONE: 'none'\n};\n\n/**\n * @const\n * @type {RegExp}\n */\nvar B_RECORD_RE =\n    /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nvar H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nvar HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nvar NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nvar IGC = (function (TextFeature) {\n  function IGC(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n  }\n\n  if ( TextFeature ) IGC.__proto__ = TextFeature;\n  IGC.prototype = Object.create( TextFeature && TextFeature.prototype );\n  IGC.prototype.constructor = IGC;\n\n  /**\n   * @inheritDoc\n   */\n  IGC.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var altitudeMode = this.altitudeMode_;\n    var lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    var properties = {};\n    var flatCoordinates = [];\n    var year = 2000;\n    var month = 0;\n    var day = 1;\n    var lastDateTime = -1;\n    var i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      var line = lines[i];\n      var m = (void 0);\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          var hour = parseInt(m[1], 10);\n          var minute = parseInt(m[2], 10);\n          var second = parseInt(m[3], 10);\n          var y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          var x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != IGCZ.NONE) {\n            var z = (void 0);\n            if (altitudeMode == IGCZ.GPS) {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == IGCZ.BAROMETRIC) {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          var dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    var layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n    var lineString = new LineString(flatCoordinates, layout);\n    var feature = new Feature(transformWithOptions(lineString, false, opt_options));\n    feature.setProperties(properties);\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IGC.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var feature = this.readFeatureFromText(text, opt_options);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  };\n\n  return IGC;\n}(TextFeature));\n\nexport default IGC;\n\n//# sourceMappingURL=IGC.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\n\nvar IconImage = (function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/ImageState}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.tainting_ = false;\n    if (this.imageState_ == ImageState.LOADED) {\n      this.determineTainting_();\n    }\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   */\n  IconImage.prototype.determineTainting_ = function determineTainting_ () {\n    var context = createCanvasContext2D(1, 1);\n    try {\n      context.drawImage(this.image_, 0, 0);\n      context.getImageData(0, 0, 1, 1);\n    } catch (e) {\n      this.tainting_ = true;\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.determineTainting_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {module:ol/ImageState} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.tainting_) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {module:ol/size~Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        this.image_.src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (this.tainting_ || this.color_ === null) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport {get as getIconImage} from '../style/IconImage.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {module:ol/style/IconOrigin} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {module:ol/style/IconAnchorUnits} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {module:ol/style/IconAnchorUnits} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {module:ol/color~Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {module:ol/style/IconOrigin} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {module:ol/size~Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {module:ol/size~Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = (function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {module:ol/size~Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = image.src || getUid(image).toString();\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {module:ol/ImageState}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconImage}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {module:ol/style/Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {module:ol/color~Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {module:ol/style/Fill}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {module:ol/style/TextPlacement|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {module:ol/style/Stroke}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {module:ol/style/Fill}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {module:ol/style/Stroke}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {module:ol/style/Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {module:ol/style/TextPlacement|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {module:ol/style/Fill} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {module:ol/style/Stroke} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {module:ol/style/Fill} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {module:ol/style/Stroke} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {module:ol/style/TextPlacement|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {module:ol/style/Fill} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {module:ol/style/Stroke} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {module:ol/style/Fill} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {module:ol/style/Stroke} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode} from '../format/xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {createElementNS, getAllTextContent, isDocument, isNode, makeArrayExtender,\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {module:ol/style/IconAnchorUnits} xunits\n * @property {number} y\n * @property {module:ol/style/IconAnchorUnits} yunits\n * @property {module:ol/style/IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @type {Object<string, module:ol/style/IconAnchorUnits>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(\n      readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(\n      readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(\n      readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(\n      readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(\n      readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'MultiTrack': makeObjectPropertySetter(\n        readGxMultiTrack, 'geometry'),\n      'Track': makeObjectPropertySetter(\n        readGxTrack, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar NETWORK_LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar REGION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar KML_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar KML_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @type {module:ol/color~Color}\n */\nvar DEFAULT_COLOR;\n\n/**\n * @type {module:ol/style/Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {module:ol/style/Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {module:ol/size~Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {module:ol/size~Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {module:ol/style/Image}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {module:ol/style/Image} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {module:ol/style/Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {module:ol/style/Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {module:ol/style/Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {module:ol/style/Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {module:ol/style/Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {module:ol/style/Style}\n */\nvar DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {module:ol/style/Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<module:ol/style/Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<module:ol/style/Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n\nfunction createStyleDefaults() {\n\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<module:ol/style/Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = (function (XMLFeature) {\n  function KML(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<module:ol/style/Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle ?\n      options.defaultStyle : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ = options.extractStyles !== undefined ?\n      options.extractStyles : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.writeStyles_ = options.writeStyles !== undefined ?\n      options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<module:ol/style/Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ = options.showPointNames !== undefined ?\n      options.showPointNames : true;\n\n  }\n\n  if ( XMLFeature ) KML.__proto__ = XMLFeature;\n  KML.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  KML.prototype.constructor = KML;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<module:ol/Feature>|undefined} Features.\n   */\n  KML.prototype.readDocumentOrFolder_ = function readDocumentOrFolder_ (node, objectStack) {\n    // FIXME use scope somehow\n    var parsersNS = makeStructureNS(\n      NAMESPACE_URIS, {\n        'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Placemark': makeArrayPusher(this.readPlacemark_, this),\n        'Style': this.readSharedStyle_.bind(this),\n        'StyleMap': this.readSharedStyleMap_.bind(this)\n      });\n    /** @type {Array<module:ol/Feature>} */\n    var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/Feature|undefined} Feature.\n   */\n  KML.prototype.readPlacemark_ = function readPlacemark_ (node, objectStack) {\n    var object = pushParseAndPop({'geometry': null},\n      PLACEMARK_PARSERS, node, objectStack);\n    if (!object) {\n      return undefined;\n    }\n    var feature = new Feature();\n    var id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    var options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n\n    var geometry = object['geometry'];\n    if (geometry) {\n      transformWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      var style = object['Style'];\n      var styleUrl = object['styleUrl'];\n      var styleFunction = createFeatureStyleFunction(\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n        this.showPointNames_);\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object);\n\n    return feature;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  KML.prototype.readSharedStyle_ = function readSharedStyle_ (node, objectStack) {\n    var id = node.getAttribute('id');\n    if (id !== null) {\n      var style = readStyle(node, objectStack);\n      if (style) {\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          var url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  KML.prototype.readSharedStyleMap_ = function readSharedStyleMap_ (node, objectStack) {\n    var id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    var styleMapValue = readStyleMapValue(node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    var styleUri;\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      var url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  KML.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    var feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  KML.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var this$1 = this;\n\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    var features;\n    var localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      var feature = this.readPlacemark_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var fs = this$1.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Node|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  KML.prototype.readName = function readName (source) {\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readNameFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  KML.prototype.readNameFromDocument = function readNameFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        var name = this$1.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @return {string|undefined} Name.\n   */\n  KML.prototype.readNameFromNode = function readNameFromNode (node) {\n    var this$1 = this;\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'Placemark' ||\n           localName == 'kml')) {\n        var name = this$1.readNameFromNode(n$1);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Node|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  KML.prototype.readNetworkLinks = function readNetworkLinks (source) {\n    var networkLinks = [];\n    if (isDocument(source)) {\n      extend(networkLinks, this.readNetworkLinksFromDocument(\n        /** @type {Document} */ (source)));\n    } else if (isNode(source)) {\n      extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Node} */ (source)));\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    }\n    return networkLinks;\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  KML.prototype.readNetworkLinksFromDocument = function readNetworkLinksFromDocument (doc) {\n    var this$1 = this;\n\n    var networkLinks = [];\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(networkLinks, this$1.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  KML.prototype.readNetworkLinksFromNode = function readNetworkLinksFromNode (node) {\n    var this$1 = this;\n\n    var networkLinks = [];\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'NetworkLink') {\n        var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\n          n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(networkLinks, this$1.readNetworkLinksFromNode(n$1));\n      }\n    }\n    return networkLinks;\n  };\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Node|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  KML.prototype.readRegion = function readRegion (source) {\n    var regions = [];\n    if (isDocument(source)) {\n      extend(regions, this.readRegionFromDocument(\n        /** @type {Document} */ (source)));\n    } else if (isNode(source)) {\n      extend(regions, this.readRegionFromNode(\n        /** @type {Node} */ (source)));\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    }\n    return regions;\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  KML.prototype.readRegionFromDocument = function readRegionFromDocument (doc) {\n    var this$1 = this;\n\n    var regions = [];\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this$1.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  KML.prototype.readRegionFromNode = function readRegionFromNode (node) {\n    var this$1 = this;\n\n    var regions = [];\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'Region') {\n        var obj = pushParseAndPop({}, REGION_PARSERS,\n          n, []);\n        regions.push(obj);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(regions, this$1.readRegionFromNode(n$1));\n      }\n    }\n    return regions;\n  };\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  KML.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n\n    var /** @type {module:ol/xml~NodeStackItem} */ context = {node: kml};\n    var properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n      this);\n    return kml;\n  };\n\n  return KML;\n}(XMLFeature));\n\n\n/**\n * @param {module:ol/style/Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {module:ol/style/Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  var textStyle = null;\n  var textOffset = [0, 0];\n  var textAlign = 'start';\n  if (foundStyle.getImage()) {\n    var imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      var imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    var foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  var nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n}\n\n\n/**\n * @param {Array<module:ol/style/Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<module:ol/style/Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {module:ol/style/Style~StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n     * @param {module:ol/Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<module:ol/style/Style>} Style.\n     */\n    function(feature, resolution) {\n      var drawName = showPointNames;\n      /** @type {module:ol/style/Style|undefined} */\n      var nameStyle;\n      var name = '';\n      if (drawName) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n          drawName = geometry.getType() === GeometryType.POINT;\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = createNameStyleFunction(style[0], name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        if (drawName) {\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n}\n\n\n/**\n * @param {Array<module:ol/style/Style>|string|undefined} styleValue Style value.\n * @param {Array<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<module:ol/style/Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<module:ol/style/Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/color~Color|undefined} Color.\n */\nfunction readColor(node) {\n  var s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    var hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  var s = getAllTextContent(node, false);\n  var flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  var re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  var m;\n  while ((m = re.exec(s))) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  var s = getAllTextContent(node, false).trim();\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/format/KML~Vec2} Vec2.\n */\nfunction readVec2(node) {\n  var xunits = node.getAttribute('xunits');\n  var yunits = node.getAttribute('yunits');\n  var origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar STYLE_MAP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Pair': pairDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<module:ol/style/Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined,\n    STYLE_MAP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar ICON_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  var object = pushParseAndPop(\n    {}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\n  var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  var src;\n  var href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  var anchor, anchorXUnits, anchorYUnits;\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  var hotSpot = /** @type {module:ol/format/KML~Vec2|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  var offset;\n  var x = /** @type {number|undefined} */\n      (IconObject['x']);\n  var y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  var size;\n  var w = /** @type {number|undefined} */\n      (IconObject['w']);\n  var h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  var rotation;\n  var heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  var scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    var imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LABEL_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop(\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {module:ol/color~Color} */\n          ('color' in object ? object['color'] : DEFAULT_COLOR)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LINE_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  var object = pushParseAndPop(\n    {}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var strokeStyle = new Stroke({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar POLY_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop(\n    {}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var fillStyle = new Fill({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  var fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  var outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null,\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  var gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var s = getAllTextContent(node, false);\n  var re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  var m = re.exec(s);\n  if (m) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\n  GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  var lineStrings = pushParseAndPop([],\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'when': whenParser\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'coord': gxCoordParser\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  var gxTrackObject = pushParseAndPop(\n    /** @type {module:ol/format/KML~GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var whens = gxTrackObject.whens;\n  for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeObjectPropertySetter(readDecimal),\n      'y': makeObjectPropertySetter(readDecimal),\n      'w': makeObjectPropertySetter(readDecimal),\n      'h': makeObjectPropertySetter(readDecimal)\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  var iconObject = pushParseAndPop(\n    {}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  var geometries = pushParseAndPop([],\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {module:ol/geom/Geometry} */\n  var multiGeometry;\n  var homogeneous = true;\n  var type = geometries[0].getType();\n  var geometry;\n  for (var i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    var layout;\n    var flatCoordinates;\n    if (type == GeometryType.POINT) {\n      var point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (var i$1 = 1, ii$1 = geometries.length; i$1 < ii$1; ++i$1) {\n        geometry = geometries[i$1];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return (\n    /** @type {module:ol/geom/Geometry} */ (multiGeometry)\n  );\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatLinearRings = pushParseAndPop([null],\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<module:ol/style/Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  var styleObject = pushParseAndPop(\n    {}, STYLE_PARSERS, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  var fillStyle = /** @type {module:ol/style/Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n  var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  var imageStyle = /** @type {module:ol/style/Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : DEFAULT_IMAGE_STYLE);\n  if (imageStyle == DEFAULT_NO_IMAGE_STYLE) {\n    imageStyle = undefined;\n  }\n  var textStyle = /** @type {module:ol/style/Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n  var strokeStyle = /** @type {module:ol/style/Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n  var outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n}\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {module:ol/geom/MultiPoint|module:ol/geom/MultiLineString|module:ol/geom/MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<module:ol/geom/Geometry>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  var ii = geometries.length;\n  var extrudes = new Array(geometries.length);\n  var tessellates = new Array(geometries.length);\n  var altitudeModes = new Array(geometries.length);\n  var hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (var i = 0; i < ii; ++i) {\n    var geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar EXTENDED_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar PAIR_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  var pairObject = pushParseAndPop(\n    {}, PAIR_PARSERS, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  var key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    var styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    var Style = /** @type {module:ol/style/Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  var styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar SCHEMA_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (name !== null) {\n    var data = readString(node);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined,\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined,\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  var gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  var whens = gxTrackObject.whens;\n  var s = getAllTextContent(node, false);\n  var when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {module:ol/color~Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  var rgba = asArray(color);\n  var opacity = (rgba.length == 4) ? rgba[3] : 1;\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (var i = 0; i < 4; ++i) {\n    var hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n\n  var layout = context['layout'];\n  var stride = context['stride'];\n\n  var dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  var ii = coordinates.length;\n  var text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (var d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (var i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (var d$1 = 1; d$1 < dimension; ++d$1) {\n        text += ',' + coordinates[i + d$1];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar DOCUMENT_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<module:ol/Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\n    this);\n}\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var names = namesAndValues.names;\n  var values = namesAndValues.values;\n  var length = names.length;\n\n  for (var i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY, [{name: names[i], value: values[i]}], objectStack);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'href'\n  ],\n  makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeChildAppender(writeDecimalTextNode),\n      'y': makeChildAppender(writeDecimalTextNode),\n      'w': makeChildAppender(writeDecimalTextNode),\n      'h': makeChildAppender(writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context,\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Icon} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var src = style.getSrc();\n  var size = style.getSize();\n  var iconImageSize = style.getImageSize();\n  var iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    var anchor = style.getAnchor(); // top-left\n    var origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      var /** @type {module:ol/format/KML~Vec2} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  var scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  var scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys =\n      LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LINE_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  if (value) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {module:ol/geom/Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeChildAppender(\n      writePrimitiveGeometry),\n    'Point': makeChildAppender(\n      writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(\n      writeMultiGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  var context = {node: node};\n  var type = geometry.getType();\n  /** @type {Array<module:ol/geom/Geometry>} */\n  var geometries;\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  var factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {module:ol/geom/MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {module:ol/geom/MultiLineString} */ (geometry)).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {module:ol/geom/MultiPolygon} */ (geometry)).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(context,\n    MULTI_GEOMETRY_SERIALIZERS, factory,\n    geometries, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(\n      writePrimitiveGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar PLACEMARK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PLACEMARK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  var filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  var keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    var sequence = makeSequence(properties, keys);\n    var namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  var styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    var styles = styleFunction(feature, 0);\n    if (styles) {\n      var style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      var textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  var options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar POLYGON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(\n      writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(\n      writeBoundaryIs)\n  });\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  var linearRings = polygon.getLinearRings();\n  var outerRing = linearRings.shift();\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings, objectStack);\n  // outer ring\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n  });\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {module:ol/format/KML~Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\n\nexport default KML;\n\n//# sourceMappingURL=KML.js.map","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/render/Feature\n */\nimport {VOID} from '../functions.js';\nimport {extend} from '../array.js';\nimport {createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {getInteriorPointOfArray, getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {get as getProjection} from '../proj.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n *\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n *     to be right-handed for polygons.\n * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n * @param {Object<string, *>} properties Properties.\n * @param {number|string|undefined} id Feature id.\n */\nvar RenderFeature = function RenderFeature(type, flatCoordinates, ends, properties, id) {\n  /**\n  * @private\n  * @type {module:ol/extent~Extent|undefined}\n  */\n  this.extent_;\n\n  /**\n  * @private\n  * @type {number|string|undefined}\n  */\n  this.id_ = id;\n\n  /**\n  * @private\n  * @type {module:ol/geom/GeometryType}\n  */\n  this.type_ = type;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatCoordinates_ = flatCoordinates;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatInteriorPoints_ = null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatMidpoints_ = null;\n\n  /**\n  * @private\n  * @type {Array<number>|Array<Array<number>>}\n  */\n  this.ends_ = ends;\n\n  /**\n  * @private\n  * @type {Object<string, *>}\n  */\n  this.properties_ = properties;\n\n};\n\n/**\n* Get a feature property by its key.\n* @param {string} key Key\n* @return {*} Value for the requested key.\n* @api\n*/\nRenderFeature.prototype.get = function get (key) {\n  return this.properties_[key];\n};\n\n/**\n* Get the extent of this feature's geometry.\n* @return {module:ol/extent~Extent} Extent.\n* @api\n*/\nRenderFeature.prototype.getExtent = function getExtent () {\n  if (!this.extent_) {\n    this.extent_ = this.type_ === GeometryType.POINT ?\n      createOrUpdateFromCoordinate(this.flatCoordinates_) :\n      createOrUpdateFromFlatCoordinates(\n        this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n\n  }\n  return this.extent_;\n};\n\n/**\n* @return {Array<number>} Flat interior points.\n*/\nRenderFeature.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n  if (!this.flatInteriorPoints_) {\n    var flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoints_ = getInteriorPointOfArray(\n      this.flatCoordinates_, 0, this.ends_, 2, flatCenter, 0);\n  }\n  return this.flatInteriorPoints_;\n};\n\n/**\n* @return {Array<number>} Flat interior points.\n*/\nRenderFeature.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n  if (!this.flatInteriorPoints_) {\n    var flatCenters = linearRingssCenter(\n      this.flatCoordinates_, 0, this.ends_, 2);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.flatCoordinates_, 0, this.ends_, 2, flatCenters);\n  }\n  return this.flatInteriorPoints_;\n};\n\n/**\n* @return {Array<number>} Flat midpoint.\n*/\nRenderFeature.prototype.getFlatMidpoint = function getFlatMidpoint () {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = interpolatePoint(\n      this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n* @return {Array<number>} Flat midpoints.\n*/\nRenderFeature.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var this$1 = this;\n\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = [];\n    var flatCoordinates = this.flatCoordinates_;\n    var offset = 0;\n    var ends = this.ends_;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, 2, 0.5);\n      extend(this$1.flatMidpoints_, midpoint);\n      offset = end;\n    }\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n* Get the feature identifier.This is a stable identifier for the feature and\n* is set when reading data from a remote source.\n* @return {number|string|undefined} Id.\n* @api\n*/\nRenderFeature.prototype.getId = function getId () {\n  return this.id_;\n};\n\n/**\n* @return {Array<number>} Flat coordinates.\n*/\nRenderFeature.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n  return this.flatCoordinates_;\n};\n\n/**\n* For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n* determining the geometry type in style function (see {@link #getType}).\n* @return {module:ol/render/Feature} Feature.\n* @api\n*/\nRenderFeature.prototype.getGeometry = function getGeometry () {\n  return this;\n};\n\n/**\n* Get the feature properties.\n* @return {Object<string, *>} Feature properties.\n* @api\n*/\nRenderFeature.prototype.getProperties = function getProperties () {\n  return this.properties_;\n};\n\n/**\n* @return {number} Stride.\n*/\nRenderFeature.prototype.getStride = function getStride () {\n  return 2;\n};\n\n/**\n* Get the type of this feature's geometry.\n* @return {module:ol/geom/GeometryType} Geometry type.\n* @api\n*/\nRenderFeature.prototype.getType = function getType () {\n  return this.type_;\n};\n\n/**\n* Transform geometry coordinates from tile pixel space to projected.\n* The SRS of the source and destination are expected to be the same.\n*\n* @param {module:ol/proj~ProjectionLike} source The current projection\n* @param {module:ol/proj~ProjectionLike} destination The desired projection.\n*/\nRenderFeature.prototype.transform = function transform (source, destination) {\n  source = getProjection(source);\n  var pixelExtent = source.getExtent();\n  var projectedExtent = source.getWorldExtent();\n  var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n  composeTransform(tmpTransform,\n    projectedExtent[0], projectedExtent[3],\n    scale, -scale, 0,\n    0, 0);\n  transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2,\n    tmpTransform, this.flatCoordinates_);\n};\n\n\n/**\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\nRenderFeature.prototype.getEndss = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\n\n\n/**\n * Get the feature for working with its geometry.\n * @return {module:ol/render/Feature} Feature.\n */\nRenderFeature.prototype.getSimplifiedGeometry =\n    RenderFeature.prototype.getGeometry;\n\n\n/**\n * @return {undefined}\n */\nRenderFeature.prototype.getStyleFunction = VOID;\n\n\nexport default RenderFeature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport {assert} from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, {transformWithOptions} from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function((module:ol/geom/Geometry|Object<string,*>)=)|function(module:ol/geom/GeometryType,Array<number>,(Array<number>|Array<Array<number>>),Object<string,*>,number)} [featureClass]\n * Class for features returned by {@link module:ol/format/MVT#readFeatures}. Set to\n * {@link module:ol/Feature~Feature} to get full editing and geometry support at the cost of\n * decreased rendering performance. The default is {@link module:ol/render/Feature~RenderFeature},\n * which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating\n * features.\n * @property {string} [layerName='layer'] Name of the feature attribute that\n * holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not\n * provided, features will be read from all layers.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {module:ol/format/MVT~Options=} opt_options Options.\n * @api\n */\nvar MVT = (function (FeatureFormat) {\n  function MVT(opt_options) {\n    FeatureFormat.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/proj/Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS\n    });\n\n    /**\n     * @private\n     * @type {function((module:ol/geom/Geometry|Object<string,*>)=)|\n     *     function(module:ol/geom/GeometryType,Array<number>,\n     *         (Array<number>|Array<Array<number>>),Object<string,*>,number)}\n     */\n    this.featureClass_ = options.featureClass ?\n      options.featureClass : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = null;\n\n  }\n\n  if ( FeatureFormat ) MVT.__proto__ = FeatureFormat;\n  MVT.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  MVT.prototype.constructor = MVT;\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @suppress {missingProperties}\n   * @param {Object} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  MVT.prototype.readRawGeometry_ = function readRawGeometry_ (pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    var end = pbf.readVarint() + pbf.pos;\n    var cmd = 1;\n    var length = 0;\n    var x = 0;\n    var y = 0;\n    var coordsLen = 0;\n    var currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        var cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) { // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n\n      } else if (cmd === 7) {\n\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n          coordsLen += 2;\n        }\n\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n\n  };\n\n  /**\n   * @private\n   * @param {Object} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature|module:ol/render/Feature} Feature.\n   */\n  MVT.prototype.createFeature_ = function createFeature_ (pbf, rawFeature, opt_options) {\n    var type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    var feature;\n    var id = rawFeature.id;\n    var values = rawFeature.properties;\n    values[this.layerName_] = rawFeature.layer.name;\n\n    var flatCoordinates = [];\n    var ends = [];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    var geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n    } else {\n      var geom;\n      if (geometryType == GeometryType.POLYGON) {\n        var endss = [];\n        var offset = 0;\n        var prevEndIndex = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n          var end = ends[i];\n          if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n            endss.push(ends.slice(prevEndIndex, i));\n            prevEndIndex = i;\n          }\n          offset = end;\n        }\n        if (endss.length > 1) {\n          geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n        } else {\n          geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n        }\n      } else {\n        geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n          geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n            geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n              geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                  null;\n      }\n      feature = new this.featureClass_();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      var geometry = transformWithOptions(geom, false, this.adaptOptions(opt_options));\n      feature.setGeometry(geometry);\n      feature.setId(id);\n      feature.setProperties(values);\n    }\n\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.getLastExtent = function getLastExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MVT.prototype.getType = function getType () {\n    return FormatType.ARRAY_BUFFER;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.readFeatures = function readFeatures (source, opt_options) {\n    var this$1 = this;\n\n    var layers = this.layers_;\n\n    var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    var pbfLayers = pbf.readFields(layersPBFReader, {});\n    /** @type {Array<module:ol/Feature|module:ol/render/Feature>} */\n    var features = [];\n    for (var name in pbfLayers) {\n      if (layers && layers.indexOf(name) == -1) {\n        continue;\n      }\n      var pbfLayer = pbfLayers[name];\n\n      for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        var rawFeature = readRawFeature(pbf, pbfLayer, i);\n        features.push(this$1.createFeature_(pbf, rawFeature));\n      }\n      this$1.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n    }\n\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.readProjection = function readProjection (source) {\n    return this.dataProjection;\n  };\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  MVT.prototype.setLayers = function setLayers (layers) {\n    this.layers_ = layers;\n  };\n\n  return MVT;\n}(FeatureFormat));\n\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {Object} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    var layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    var end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {Object} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    var value = null;\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() :\n        tag === 2 ? pbf.readFloat() :\n          tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n              tag === 5 ? pbf.readVarint() :\n                tag === 6 ? pbf.readSVarint() :\n                  tag === 7 ? pbf.readBoolean() : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {Object} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      var key = feature.layer.keys[pbf.readVarint()];\n      var value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  var end = pbf.readVarint() + pbf.pos;\n\n  var feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n\n/**\n * @suppress {missingProperties}\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {module:ol/geom/GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {module:ol/geom/GeometryType} */\n  var geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ?\n      GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ?\n      GeometryType.LINE_STRING :\n      GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n\n//# sourceMappingURL=MVT.js.map","/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n\n//# sourceMappingURL=XLink.js.map","/**\n * @module ol/format/XML\n */\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = function XML () {};\n\nXML.prototype.read = function read (source) {\n  if (isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function readFromDocument (doc) {};\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function readFromNode (node) {};\n\nexport default XML;\n\n//# sourceMappingURL=XML.js.map","/**\n * @module ol/format/OWS\n */\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString} from '../format/xsd.js';\nimport {makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n  });\n\n\nvar OWS = (function (XML) {\n  function OWS() {\n    XML.call(this);\n  }\n\n  if ( XML ) OWS.__proto__ = XML;\n  OWS.prototype = Object.create( XML && XML.prototype );\n  OWS.prototype.constructor = OWS;\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromDocument = function readFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromNode = function readFromNode (node) {\n    var owsObject = pushParseAndPop({},\n      PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  };\n\n  return OWS;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CONSTRAINT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CONTACT_INFO_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar DCP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar OPERATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Operation': readOperation\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar PHONE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar REQUEST_METHOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar SERVICE_CONTACT_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'IndividualName': makeObjectPropertySetter(readString),\n        'PositionName': makeObjectPropertySetter(readString),\n        'ContactInfo': makeObjectPropertySetter(readContactInfo)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar SERVICE_IDENTIFICATION_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'Abstract': makeObjectPropertySetter(readString),\n        'AccessConstraints': makeObjectPropertySetter(readString),\n        'Fees': makeObjectPropertySetter(readString),\n        'Title': makeObjectPropertySetter(readString),\n        'ServiceTypeVersion': makeObjectPropertySetter(readString),\n        'ServiceType': makeObjectPropertySetter(readString)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar SERVICE_PROVIDER_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'ProviderName': makeObjectPropertySetter(readString),\n        'ProviderSite': makeObjectPropertySetter(readHref),\n        'ServiceContact': makeObjectPropertySetter(readServiceContact)\n      });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({},\n    ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({},\n    ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name},\n    CONSTRAINT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({},\n    CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({},\n    DCP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  var href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({'href': href},\n    REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  var name = node.getAttribute('name');\n  var value = pushParseAndPop({},\n    OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  var object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({},\n    OPERATIONS_METADATA_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({},\n    PHONE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_IDENTIFICATION_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_CONTACT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_PROVIDER_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\n\nexport default OWS;\n\n//# sourceMappingURL=OWS.js.map","/**\n * @module ol/geom/flat/flip\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n  var dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  var j = offset;\n  while (j < end) {\n    var x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (var k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n\n//# sourceMappingURL=flip.js.map","/**\n * @module ol/format/Polyline\n */\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {module:ol/geom/GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nvar Polyline = (function (TextFeature) {\n  function Polyline(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {module:ol/geom/GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout ?\n      options.geometryLayout : GeometryLayout.XY;\n  }\n\n  if ( TextFeature ) Polyline.__proto__ = TextFeature;\n  Polyline.prototype = Object.create( TextFeature && TextFeature.prototype );\n  Polyline.prototype.constructor = Polyline;\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    var stride = getStrideForLayout(this.geometryLayout_);\n    var flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n\n    return (\n      /** @type {module:ol/geom/Geometry} */ (transformWithOptions(\n        new LineString(coordinates, this.geometryLayout_),\n        false,\n        this.adaptOptions(opt_options)\n      ))\n    );\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    geometry = /** @type {module:ol/geom/LineString} */\n      (transformWithOptions(geometry, true, this.adaptOptions(opt_options)));\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  };\n\n  return Polyline;\n}(TextFeature));\n\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var d;\n\n  var lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (var i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      var num = numbers[i];\n      var delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var d;\n\n  /** @type {Array<number>} */\n  var lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  var numbers = decodeFloats(encoded, factor);\n\n  for (var i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var numbers = decodeSignedIntegers(encoded);\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    var num = numbers[i];\n    numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  var numbers = decodeUnsignedIntegers(encoded);\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    var num = numbers[i];\n    numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  var encoded = '';\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  var numbers = [];\n  var current = 0;\n  var shift = 0;\n  for (var i = 0, ii = encoded.length; i < ii; ++i) {\n    var b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  var value, encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\n\nexport default Polyline;\n\n//# sourceMappingURL=Polyline.js.map","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nvar TopoJSON = (function (JSONFeature) {\n  function TopoJSON(opt_options) {\n    JSONFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n  }\n\n  if ( JSONFeature ) TopoJSON.__proto__ = JSONFeature;\n  TopoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  TopoJSON.prototype.constructor = TopoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  TopoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var this$1 = this;\n\n    if (object.type == 'Topology') {\n      var topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      var transform, scale = null, translate = null;\n      if (topoJSONTopology.transform) {\n        transform = topoJSONTopology.transform;\n        scale = transform.scale;\n        translate = transform.translate;\n      }\n      var arcs = topoJSONTopology.arcs;\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<module:ol/Feature>} */\n      var features = [];\n      var topoJSONFeatures = topoJSONTopology.objects;\n      var property = this.layerName_;\n      var feature;\n      for (var objectName in topoJSONFeatures) {\n        if (this$1.layers_ && this$1.layers_.indexOf(objectName) == -1) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n          features.push.apply(features, readFeaturesFromGeometryCollection(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n          features.push(readFeatureFromGeometry(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TopoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return this.dataProjection;\n  };\n\n  return TopoJSON;\n}(JSONFeature));\n\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array): module:ol/geom/Geometry>}\n */\nvar GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry\n};\n\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<module:ol/coordinate~Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<module:ol/coordinate~Coordinate>} */\n  var coordinates = [];\n  var index, arc;\n  for (var i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      arc = arcs[index];\n    } else {\n      // reverse arc\n      arc = arcs[~index].slice().reverse();\n    }\n    coordinates.push.apply(coordinates, arc);\n  }\n  // provide fresh copies of coordinate arrays\n  for (var j = 0, jj = coordinates.length; j < jj; ++j) {\n    coordinates[j] = coordinates[j].slice();\n  }\n  return coordinates;\n}\n\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {module:ol/geom/Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  var coordinates = object.coordinates;\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {module:ol/geom/MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  var coordinates = object.coordinates;\n  if (scale && translate) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  var coordinates = concatenateArcs(object.arcs, arcs);\n  return new LineString(coordinates);\n}\n\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object.arcs.length; i < ii; ++i) {\n    // for each polygon\n    var polyArray = object.arcs[i];\n    var ringCoords = [];\n    for (var j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array<module:ol/Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n  var geometries = collection.geometries;\n  var features = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i], arcs, scale, translate, property, name, opt_options);\n  }\n  return features;\n}\n\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n  var geometry;\n  var type = object.type;\n  var geometryReader = GEOMETRY_READERS[type];\n  if ((type === 'Point') || (type === 'MultiPoint')) {\n    geometry = geometryReader(object, scale, translate);\n  } else {\n    geometry = geometryReader(object, arcs);\n  }\n  var feature = new Feature();\n  feature.setGeometry(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, false, opt_options)));\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  var properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties);\n  }\n  return feature;\n}\n\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (var i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<module:ol/coordinate~Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  var x = 0;\n  var y = 0;\n  for (var i = 0, ii = arc.length; i < ii; ++i) {\n    var vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\n\nexport default TopoJSON;\n\n//# sourceMappingURL=TopoJSON.js.map","/**\n * @module ol/format/GML2\n */\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nvar GML2 = (function (GMLBase) {\n  function GML2(opt_options) {\n    var options = /** @type {module:ol/format/GMLBase~Options} */\n        (opt_options ? opt_options : {});\n\n    GMLBase.call(this, options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(this.readFeaturesInternal);\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n  }\n\n  if ( GMLBase ) GML2.__proto__ = GMLBase;\n  GML2.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML2.prototype.constructor = GML2;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML2.prototype.readFlatCoordinates_ = function readFlatCoordinates_ (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[0]);\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    var coordsGroups = s.trim().split(/\\s+/);\n    var flatCoordinates = [];\n    for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n      var coords = coordsGroups[i].split(/,+/);\n      var x = parseFloat(coords[0]);\n      var y = parseFloat(coords[1]);\n      var z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/extent~Extent|undefined} Envelope.\n   */\n  GML2.prototype.readBox_ = function readBox_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.BOX_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[1][3],\n      flatCoordinates[1][4]);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML2.prototype.innerBoundaryIsParser_ = function innerBoundaryIsParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML2.prototype.outerBoundaryIsParser_ = function outerBoundaryIsParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML2.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml',\n      nodeName);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML2.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\n    var this$1 = this;\n\n    var fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', fid);\n    }\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    var properties = feature.getProperties();\n    var keys = [];\n    var values = [];\n    for (var key in properties) {\n      var value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || value instanceof Geometry) {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this$1.writeGeometryElement, this$1);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML2.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\n    var context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\n    var item = assign({}, context);\n    item.node = node;\n    var value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @returns {Node} coordinates node.\n   * @private\n   */\n  GML2.prototype.createCoordinatesNode_ = function createCoordinatesNode_ (namespaceURI) {\n    var coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCoordinates_ = function writeCoordinates_ (node, value, objectStack) {\n    var this$1 = this;\n\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    // only 2d for simple features profile\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var point = points[i];\n      parts[i] = this$1.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  GML2.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  };\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  GML2.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ',' + point[1] :\n      point[1] + ',' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    var point = geometry.getCoordinates();\n    var coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n\n  return GML2;\n}(GMLBase));\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\nexport default GML2;\n\n//# sourceMappingURL=GML2.js.map","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nvar Filter = function Filter(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function getTagName () {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n//# sourceMappingURL=Filter.js.map","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nvar LogicalNary = (function (Filter) {\n  function LogicalNary(tagName, conditions) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {Array<module:ol/format/filter/Filter>}\n     */\n    this.conditions = Array.prototype.slice.call(arguments, 1);\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n\n  if ( Filter ) LogicalNary.__proto__ = Filter;\n  LogicalNary.prototype = Object.create( Filter && Filter.prototype );\n  LogicalNary.prototype.constructor = LogicalNary;\n\n  return LogicalNary;\n}(Filter));\n\nexport default LogicalNary;\n\n//# sourceMappingURL=LogicalNary.js.map","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nvar And = (function (LogicalNary) {\n  function And(conditions) {\n    var params = ['And'].concat(Array.prototype.slice.call(arguments));\n    LogicalNary.apply(this, params);\n  }\n\n  if ( LogicalNary ) And.__proto__ = LogicalNary;\n  And.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  And.prototype.constructor = And;\n\n  return And;\n}(LogicalNary));\n\nexport default And;\n\n//# sourceMappingURL=And.js.map","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nvar Bbox = (function (Filter) {\n  function Bbox(geometryName, extent, opt_srsName) {\n\n    Filter.call(this, 'BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n  if ( Filter ) Bbox.__proto__ = Filter;\n  Bbox.prototype = Object.create( Filter && Filter.prototype );\n  Bbox.prototype.constructor = Bbox;\n\n  return Bbox;\n}(Filter));\n\nexport default Bbox;\n\n//# sourceMappingURL=Bbox.js.map","/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nvar Spatial = (function (Filter) {\n  function Spatial(tagName, geometryName, geometry, opt_srsName) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName || 'the_geom';\n\n    /**\n     * @type {module:ol/geom/Geometry}\n     */\n    this.geometry = geometry;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n  if ( Filter ) Spatial.__proto__ = Filter;\n  Spatial.prototype = Object.create( Filter && Filter.prototype );\n  Spatial.prototype.constructor = Spatial;\n\n  return Spatial;\n}(Filter));\n\nexport default Spatial;\n\n//# sourceMappingURL=Spatial.js.map","/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nvar Contains = (function (Spatial) {\n  function Contains(geometryName, geometry, opt_srsName) {\n\n    Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n  }\n\n  if ( Spatial ) Contains.__proto__ = Spatial;\n  Contains.prototype = Object.create( Spatial && Spatial.prototype );\n  Contains.prototype.constructor = Contains;\n\n  return Contains;\n}(Spatial));\n\nexport default Contains;\n\n//# sourceMappingURL=Contains.js.map","/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nvar Comparison = (function (Filter) {\n  function Comparison(tagName, propertyName) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.propertyName = propertyName;\n  }\n\n  if ( Filter ) Comparison.__proto__ = Filter;\n  Comparison.prototype = Object.create( Filter && Filter.prototype );\n  Comparison.prototype.constructor = Comparison;\n\n  return Comparison;\n}(Filter));\n\nexport default Comparison;\n\n//# sourceMappingURL=Comparison.js.map","/**\n * @module ol/format/filter/During\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nvar During = (function (Comparison) {\n  function During(propertyName, begin, end) {\n    Comparison.call(this, 'During', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.begin = begin;\n\n    /**\n     * @type {!string}\n     */\n    this.end = end;\n  }\n\n  if ( Comparison ) During.__proto__ = Comparison;\n  During.prototype = Object.create( Comparison && Comparison.prototype );\n  During.prototype.constructor = During;\n\n  return During;\n}(Comparison));\n\nexport default During;\n\n//# sourceMappingURL=During.js.map","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nvar ComparisonBinary = (function (Comparison) {\n  function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\n\n    Comparison.call(this, tagName, propertyName);\n\n    /**\n     * @type {!(string|number)}\n     */\n    this.expression = expression;\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n  }\n\n  if ( Comparison ) ComparisonBinary.__proto__ = Comparison;\n  ComparisonBinary.prototype = Object.create( Comparison && Comparison.prototype );\n  ComparisonBinary.prototype.constructor = ComparisonBinary;\n\n  return ComparisonBinary;\n}(Comparison));\n\nexport default ComparisonBinary;\n\n//# sourceMappingURL=ComparisonBinary.js.map","/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nvar EqualTo = (function (ComparisonBinary) {\n  function EqualTo(propertyName, expression, opt_matchCase) {\n    ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n  if ( ComparisonBinary ) EqualTo.__proto__ = ComparisonBinary;\n  EqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  EqualTo.prototype.constructor = EqualTo;\n\n  return EqualTo;\n}(ComparisonBinary));\n\nexport default EqualTo;\n\n//# sourceMappingURL=EqualTo.js.map","/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nvar GreaterThan = (function (ComparisonBinary) {\n  function GreaterThan(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) GreaterThan.__proto__ = ComparisonBinary;\n  GreaterThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThan.prototype.constructor = GreaterThan;\n\n  return GreaterThan;\n}(ComparisonBinary));\n\nexport default GreaterThan;\n\n//# sourceMappingURL=GreaterThan.js.map","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nvar GreaterThanOrEqualTo = (function (ComparisonBinary) {\n  function GreaterThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) GreaterThanOrEqualTo.__proto__ = ComparisonBinary;\n  GreaterThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThanOrEqualTo.prototype.constructor = GreaterThanOrEqualTo;\n\n  return GreaterThanOrEqualTo;\n}(ComparisonBinary));\n\nexport default GreaterThanOrEqualTo;\n\n//# sourceMappingURL=GreaterThanOrEqualTo.js.map","/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nvar Intersects = (function (Spatial) {\n  function Intersects(geometryName, geometry, opt_srsName) {\n    Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n  }\n\n  if ( Spatial ) Intersects.__proto__ = Spatial;\n  Intersects.prototype = Object.create( Spatial && Spatial.prototype );\n  Intersects.prototype.constructor = Intersects;\n\n  return Intersects;\n}(Spatial));\n\nexport default Intersects;\n\n//# sourceMappingURL=Intersects.js.map","/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nvar IsBetween = (function (Comparison) {\n  function IsBetween(propertyName, lowerBoundary, upperBoundary) {\n    Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n    /**\n     * @type {!number}\n     */\n    this.lowerBoundary = lowerBoundary;\n\n    /**\n     * @type {!number}\n     */\n    this.upperBoundary = upperBoundary;\n\n  }\n\n  if ( Comparison ) IsBetween.__proto__ = Comparison;\n  IsBetween.prototype = Object.create( Comparison && Comparison.prototype );\n  IsBetween.prototype.constructor = IsBetween;\n\n  return IsBetween;\n}(Comparison));\n\nexport default IsBetween;\n\n//# sourceMappingURL=IsBetween.js.map","/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nvar IsLike = (function (Comparison) {\n  function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    Comparison.call(this, 'PropertyIsLike', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.pattern = pattern;\n\n    /**\n     * @type {!string}\n     */\n    this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n    /**\n     * @type {!string}\n     */\n    this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n    /**\n     * @type {!string}\n     */\n    this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n\n  }\n\n  if ( Comparison ) IsLike.__proto__ = Comparison;\n  IsLike.prototype = Object.create( Comparison && Comparison.prototype );\n  IsLike.prototype.constructor = IsLike;\n\n  return IsLike;\n}(Comparison));\n\nexport default IsLike;\n\n//# sourceMappingURL=IsLike.js.map","/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nvar IsNull = (function (Comparison) {\n  function IsNull(propertyName) {\n    Comparison.call(this, 'PropertyIsNull', propertyName);\n  }\n\n  if ( Comparison ) IsNull.__proto__ = Comparison;\n  IsNull.prototype = Object.create( Comparison && Comparison.prototype );\n  IsNull.prototype.constructor = IsNull;\n\n  return IsNull;\n}(Comparison));\n\nexport default IsNull;\n\n//# sourceMappingURL=IsNull.js.map","/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nvar LessThan = (function (ComparisonBinary) {\n  function LessThan(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) LessThan.__proto__ = ComparisonBinary;\n  LessThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThan.prototype.constructor = LessThan;\n\n  return LessThan;\n}(ComparisonBinary));\n\nexport default LessThan;\n\n//# sourceMappingURL=LessThan.js.map","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nvar LessThanOrEqualTo = (function (ComparisonBinary) {\n  function LessThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) LessThanOrEqualTo.__proto__ = ComparisonBinary;\n  LessThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThanOrEqualTo.prototype.constructor = LessThanOrEqualTo;\n\n  return LessThanOrEqualTo;\n}(ComparisonBinary));\n\nexport default LessThanOrEqualTo;\n\n//# sourceMappingURL=LessThanOrEqualTo.js.map","/**\n * @module ol/format/filter/Not\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nvar Not = (function (Filter) {\n  function Not(condition) {\n\n    Filter.call(this, 'Not');\n\n    /**\n     * @type {!module:ol/format/filter/Filter}\n     */\n    this.condition = condition;\n\n  }\n\n  if ( Filter ) Not.__proto__ = Filter;\n  Not.prototype = Object.create( Filter && Filter.prototype );\n  Not.prototype.constructor = Not;\n\n  return Not;\n}(Filter));\n\nexport default Not;\n\n//# sourceMappingURL=Not.js.map","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nvar NotEqualTo = (function (ComparisonBinary) {\n  function NotEqualTo(propertyName, expression, opt_matchCase) {\n    ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n  if ( ComparisonBinary ) NotEqualTo.__proto__ = ComparisonBinary;\n  NotEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  NotEqualTo.prototype.constructor = NotEqualTo;\n\n  return NotEqualTo;\n}(ComparisonBinary));\n\nexport default NotEqualTo;\n\n//# sourceMappingURL=NotEqualTo.js.map","/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nvar Or = (function (LogicalNary) {\n  function Or(conditions) {\n    var params = ['Or'].concat(Array.prototype.slice.call(arguments));\n    LogicalNary.apply(this, params);\n  }\n\n  if ( LogicalNary ) Or.__proto__ = LogicalNary;\n  Or.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  Or.prototype.constructor = Or;\n\n  return Or;\n}(LogicalNary));\n\nexport default Or;\n\n//# sourceMappingURL=Or.js.map","/**\n * @module ol/format/filter/Within\n */\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nvar Within = (function (Spatial) {\n  function Within(geometryName, geometry, opt_srsName) {\n    Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n  }\n\n  if ( Spatial ) Within.__proto__ = Spatial;\n  Within.prototype = Object.create( Spatial && Spatial.prototype );\n  Within.prototype.constructor = Within;\n\n  return Within;\n}(Spatial));\n\nexport default Within;\n\n//# sourceMappingURL=Within.js.map","/**\n * @module ol/format/filter\n */\nimport And from '../format/filter/And.js';\nimport Bbox from '../format/filter/Bbox.js';\nimport Contains from '../format/filter/Contains.js';\nimport During from '../format/filter/During.js';\nimport EqualTo from '../format/filter/EqualTo.js';\nimport GreaterThan from '../format/filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from '../format/filter/GreaterThanOrEqualTo.js';\nimport Intersects from '../format/filter/Intersects.js';\nimport IsBetween from '../format/filter/IsBetween.js';\nimport IsLike from '../format/filter/IsLike.js';\nimport IsNull from '../format/filter/IsNull.js';\nimport LessThan from '../format/filter/LessThan.js';\nimport LessThanOrEqualTo from '../format/filter/LessThanOrEqualTo.js';\nimport Not from '../format/filter/Not.js';\nimport NotEqualTo from '../format/filter/NotEqualTo.js';\nimport Or from '../format/filter/Or.js';\nimport Within from '../format/filter/Within.js';\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\n * @returns {!module:ol/format/filter/And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params));\n}\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\n * @returns {!module:ol/format/filter/Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params));\n}\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!module:ol/format/filter/Filter} condition Filter condition.\n * @returns {!module:ol/format/filter/Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/extent~Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n  return new Bbox(geometryName, extent, opt_srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n  return new Contains(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n  return new Intersects(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n  return new Within(geometryName, geometry, opt_srsName);\n}\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n  return new EqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n  return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!module:ol/format/filter/IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!module:ol/format/filter/IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new IsLike(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!module:ol/format/filter/During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\n//# sourceMappingURL=filter.js.map","/**\n * @module ol/format/WFS\n */\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {and as andFilter, bbox as bboxFilter} from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, isDocument, isNode, makeArrayPusher, makeChildAppender,\n  makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(\n      readInsertResults, 'insertIds')\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {module:ol/format/GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {module:ol/extent~Extent} [bbox] Extent to use for the BBOX filter.\n * @property {module:ol/format/filter/Filter} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {module:ol/format/GMLBase~Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {module:ol/extent~Extent} bounds\n */\n\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array<string>} insertIds\n */\n\n\n/**\n * @type {string}\n */\nvar FEATURE_PREFIX = 'feature';\n\n\n/**\n * @type {string}\n */\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @type {string}\n */\nvar OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @type {string}\n */\nvar WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @type {string}\n */\nvar FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @type {Object<string, string>}\n */\nvar SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nvar DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nvar WFS = (function (XMLFeature) {\n  function WFS(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {module:ol/format/GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat ?\n      options.gmlFormat : new GML3();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation ?\n      options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n  }\n\n  if ( XMLFeature ) WFS.__proto__ = XMLFeature;\n  WFS.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WFS.prototype.constructor = WFS;\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  WFS.prototype.getFeatureType = function getFeatureType () {\n    return this.featureType_;\n  };\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  WFS.prototype.setFeatureType = function setFeatureType (featureType) {\n    this.featureType_ = featureType;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var context = /** @type {module:ol/xml~NodeStackItem} */ ({\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_\n    });\n    assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n    var objectStack = [context];\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n    var features = pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      objectStack, this.gmlFormat_);\n    if (!features) {\n      features = [];\n    }\n    return features;\n  };\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  WFS.prototype.readTransactionResponse = function readTransactionResponse (source) {\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  WFS.prototype.readFeatureCollectionMetadata = function readFeatureCollectionMetadata (source) {\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  WFS.prototype.readFeatureCollectionMetadataFromDocument = function readFeatureCollectionMetadataFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFeatureCollectionMetadataFromNode(n);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  WFS.prototype.readFeatureCollectionMetadataFromNode = function readFeatureCollectionMetadataFromNode (node) {\n    var result = {};\n    var value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'));\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {module:ol/format/WFS~FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n   */\n  WFS.prototype.readTransactionResponseFromDocument = function readTransactionResponseFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readTransactionResponseFromNode(n);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n   */\n  WFS.prototype.readTransactionResponseFromNode = function readTransactionResponseFromNode (node) {\n    return pushParseAndPop(\n      /** @type {module:ol/format/WFS~TransactionResponse} */({}),\n      TRANSACTION_RESPONSE_PARSERS, node, []);\n  };\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {module:ol/format/WFS~WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  WFS.prototype.writeGetFeature = function writeGetFeature$1 (options) {\n    var node = createElementNS(WFSNS, 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', '1.1.0');\n    var filter;\n    if (options) {\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n      if (options.outputFormat) {\n        node.setAttribute('outputFormat', options.outputFormat);\n      }\n      if (options.maxFeatures !== undefined) {\n        node.setAttribute('maxFeatures', options.maxFeatures);\n      }\n      if (options.resultType) {\n        node.setAttribute('resultType', options.resultType);\n      }\n      if (options.startIndex !== undefined) {\n        node.setAttribute('startIndex', options.startIndex);\n      }\n      if (options.count !== undefined) {\n        node.setAttribute('count', options.count);\n      }\n      filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName,\n          12); // `options.geometryName` must also be provided when `options.bbox` is set\n        var bbox = bboxFilter(\n          /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n        if (filter) {\n          // if bbox and filter are both set, combine the two into a single filter\n          filter = andFilter(filter, bbox);\n        } else {\n          filter = bbox;\n        }\n      }\n    }\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n    /** @type {module:ol/xml~NodeStackItem} */\n    var context = {\n      node: node,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'geometryName': options.geometryName,\n      'filter': filter,\n      'propertyNames': options.propertyNames ? options.propertyNames : []\n    };\n    assert(Array.isArray(options.featureTypes),\n      11); // `options.featureTypes` should be an Array\n    writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\n    return node;\n  };\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<module:ol/Feature>} inserts The features to insert.\n   * @param {Array<module:ol/Feature>} updates The features to update.\n   * @param {Array<module:ol/Feature>} deletes The features to delete.\n   * @param {module:ol/format/WFS~WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  WFS.prototype.writeTransaction = function writeTransaction (inserts, updates, deletes, options) {\n    var objectStack = [];\n    var node = createElementNS(WFSNS, 'Transaction');\n    var version = options.version ? options.version : DEFAULT_VERSION;\n    var gmlVersion = version === '1.0.0' ? 2 : 3;\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    var baseObj;\n    /** @type {module:ol/xml~NodeStackItem} */\n    var obj;\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    var schemaLocation = SCHEMA_LOCATIONS[version];\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n    var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n    if (inserts) {\n      obj = {node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Insert'), inserts,\n        objectStack);\n    }\n    if (updates) {\n      obj = {node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Update'), updates,\n        objectStack);\n    }\n    if (deletes) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Delete'), deletes,\n      objectStack);\n    }\n    if (options.nativeElements) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Native'), options.nativeElements,\n      objectStack);\n    }\n    return node;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readProjectionFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    var this$1 = this;\n\n    if (node.firstElementChild &&\n        node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (!(n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 &&\n            n.firstChild.nodeType === 3))) {\n          var objectStack = [{}];\n          this$1.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  return WFS;\n}(XMLFeature));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop(\n    {}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop(\n    [], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var gmlVersion = context['gmlVersion'];\n  var child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  var filter = createElementNS(OGCNS, 'Filter');\n  var child = createElementNS(OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n}\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  var prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  var geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    var keys = feature.getKeys();\n    var values = [];\n    for (var i = 0, ii = keys.length; i < ii; i++) {\n      var value = feature.get(keys[i]);\n      if (value !== undefined) {\n        var name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  var name = createElementNS(WFSNS, 'Name');\n  var context = objectStack[objectStack.length - 1];\n  var gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    var value = createElementNS(WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeContainsFilter),\n    'Intersects': makeChildAppender(writeIntersectsFilter),\n    'Within': makeChildAppender(writeWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var propertyNames = context['propertyNames'];\n  var srsName = context['srsName'];\n  var typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  var item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  var filter = context['filter'];\n  if (filter) {\n    var child = createElementNS(OGCNS, 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Filter} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  var item = {node: node};\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Bbox} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Contains} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Intersects} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Within} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/During} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n\n  var valueReference = createElementNS(FESNS, 'ValueReference');\n  writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  var begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  var end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/LogicalNary} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  var item = {node: node};\n  var conditions = filter.conditions;\n  for (var i = 0, ii = conditions.length; i < ii; ++i) {\n    var condition = conditions[i];\n    pushSerializeAndPop(item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Not} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  var item = {node: node};\n  var condition = filter.condition;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/ComparisonBinary} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.expression);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsNull} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsBetween} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n\n  var lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n\n  var upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsLike} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.pattern);\n}\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n  var property = createElementNS(OGCNS, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n  writeOgcExpression('PropertyName', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n  writeOgcExpression('Literal', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  var timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {module:ol/format/filter/Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n  var child = createElementNS(OGCNS, 'Filter');\n  writeFilterCondition(child, filter, []);\n  return child;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n}\n\n\nexport default WFS;\n\n//# sourceMappingURL=WFS.js.map","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\n\n\n/**\n * @enum {function (new:module:ol/geom/Geometry, Array, module:ol/geom/GeometryLayout)}\n */\nvar GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nvar EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\nvar Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\nvar M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\nvar ZM = 'ZM';\n\n\n/**\n * @const\n * @enum {number}\n */\nvar TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar WKTGeometryType = {};\nfor (var type in GeometryType) {\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n\n\n/**\n * Class to tokenize a WKT string.\n */\nvar Lexer = function Lexer(wkt) {\n\n  /**\n   * @type {string}\n   */\n  this.wkt = wkt;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = -1;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is alphabetic.\n * @private\n */\nLexer.prototype.isAlpha_ = function isAlpha_ (c) {\n  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n};\n\n/**\n * @param {string} c Character.\n * @param {boolean=} opt_decimal Whether the string number\n *   contains a dot, i.e. is a decimal number.\n * @return {boolean} Whether the character is numeric.\n * @private\n */\nLexer.prototype.isNumeric_ = function isNumeric_ (c, opt_decimal) {\n  var decimal = opt_decimal !== undefined ? opt_decimal : false;\n  return c >= '0' && c <= '9' || c == '.' && !decimal;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is whitespace.\n * @private\n */\nLexer.prototype.isWhiteSpace_ = function isWhiteSpace_ (c) {\n  return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n};\n\n/**\n * @return {string} Next string character.\n * @private\n */\nLexer.prototype.nextChar_ = function nextChar_ () {\n  return this.wkt.charAt(++this.index_);\n};\n\n/**\n * Fetch and return the next token.\n * @return {!module:ol/format/WKT~Token} Next string token.\n */\nLexer.prototype.nextToken = function nextToken () {\n  var c = this.nextChar_();\n  var token = {position: this.index_, value: c};\n\n  if (c == '(') {\n    token.type = TokenType.LEFT_PAREN;\n  } else if (c == ',') {\n    token.type = TokenType.COMMA;\n  } else if (c == ')') {\n    token.type = TokenType.RIGHT_PAREN;\n  } else if (this.isNumeric_(c) || c == '-') {\n    token.type = TokenType.NUMBER;\n    token.value = this.readNumber_();\n  } else if (this.isAlpha_(c)) {\n    token.type = TokenType.TEXT;\n    token.value = this.readText_();\n  } else if (this.isWhiteSpace_(c)) {\n    return this.nextToken();\n  } else if (c === '') {\n    token.type = TokenType.EOF;\n  } else {\n    throw new Error('Unexpected character: ' + c);\n  }\n\n  return token;\n};\n\n/**\n * @return {number} Numeric token value.\n * @private\n */\nLexer.prototype.readNumber_ = function readNumber_ () {\n    var this$1 = this;\n\n  var c;\n  var index = this.index_;\n  var decimal = false;\n  var scientificNotation = false;\n  do {\n    if (c == '.') {\n      decimal = true;\n    } else if (c == 'e' || c == 'E') {\n      scientificNotation = true;\n    }\n    c = this$1.nextChar_();\n  } while (\n    this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      !scientificNotation && (c == 'e' || c == 'E') ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      scientificNotation && (c == '-' || c == '+')\n  );\n  return parseFloat(this.wkt.substring(index, this.index_--));\n};\n\n/**\n * @return {string} String token value.\n * @private\n */\nLexer.prototype.readText_ = function readText_ () {\n    var this$1 = this;\n\n  var c;\n  var index = this.index_;\n  do {\n    c = this$1.nextChar_();\n  } while (this.isAlpha_(c));\n  return this.wkt.substring(index, this.index_--).toUpperCase();\n};\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nvar Parser = function Parser(lexer) {\n\n  /**\n   * @type {module:ol/format/WKT~Lexer}\n   * @private\n   */\n  this.lexer_ = lexer;\n\n  /**\n   * @type {module:ol/format/WKT~Token}\n   * @private\n   */\n  this.token_;\n\n  /**\n   * @type {module:ol/geom/GeometryLayout}\n   * @private\n   */\n  this.layout_ = GeometryLayout.XY;\n};\n\n/**\n * Fetch the next token form the lexer and replace the active token.\n * @private\n */\nParser.prototype.consume_ = function consume_ () {\n  this.token_ = this.lexer_.nextToken();\n};\n\n/**\n * Tests if the given type matches the type of the current token.\n * @param {module:ol/format/WKT~TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.isTokenType = function isTokenType (type) {\n  var isMatch = this.token_.type == type;\n  return isMatch;\n};\n\n/**\n * If the given type matches the current token, consume it.\n * @param {module:ol/format/WKT~TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.match = function match (type) {\n  var isMatch = this.isTokenType(type);\n  if (isMatch) {\n    this.consume_();\n  }\n  return isMatch;\n};\n\n/**\n * Try to parse the tokens provided by the lexer.\n * @return {module:ol/geom/Geometry} The geometry.\n */\nParser.prototype.parse = function parse () {\n  this.consume_();\n  var geometry = this.parseGeometry_();\n  return geometry;\n};\n\n/**\n * Try to parse the dimensional info.\n * @return {module:ol/geom/GeometryLayout} The layout.\n * @private\n */\nParser.prototype.parseGeometryLayout_ = function parseGeometryLayout_ () {\n  var layout = GeometryLayout.XY;\n  var dimToken = this.token_;\n  if (this.isTokenType(TokenType.TEXT)) {\n    var dimInfo = dimToken.value;\n    if (dimInfo === Z) {\n      layout = GeometryLayout.XYZ;\n    } else if (dimInfo === M) {\n      layout = GeometryLayout.XYM;\n    } else if (dimInfo === ZM) {\n      layout = GeometryLayout.XYZM;\n    }\n    if (layout !== GeometryLayout.XY) {\n      this.consume_();\n    }\n  }\n  return layout;\n};\n\n/**\n * @return {!Array<module:ol/geom/Geometry>} A collection of geometries.\n * @private\n */\nParser.prototype.parseGeometryCollectionText_ = function parseGeometryCollectionText_ () {\n    var this$1 = this;\n\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var geometries = [];\n    do {\n      geometries.push(this$1.parseGeometry_());\n    } while (this.match(TokenType.COMMA));\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return geometries;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {Array<number>} All values in a point.\n * @private\n */\nParser.prototype.parsePointText_ = function parsePointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePoint_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return null;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a linestring.\n * @private\n */\nParser.prototype.parseLineStringText_ = function parseLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePointList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a polygon.\n * @private\n */\nParser.prototype.parsePolygonText_ = function parsePolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a multipoint.\n * @private\n */\nParser.prototype.parseMultiPointText_ = function parseMultiPointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates;\n    if (this.token_.type == TokenType.LEFT_PAREN) {\n      coordinates = this.parsePointTextList_();\n    } else {\n      coordinates = this.parsePointList_();\n    }\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All linestring points\n *                                      in a multilinestring.\n * @private\n */\nParser.prototype.parseMultiLineStringText_ = function parseMultiLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All polygon points in a multipolygon.\n * @private\n */\nParser.prototype.parseMultiPolygonText_ = function parseMultiPolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePolygonTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<number>} A point.\n * @private\n */\nParser.prototype.parsePoint_ = function parsePoint_ () {\n    var this$1 = this;\n\n  var coordinates = [];\n  var dimensions = this.layout_.length;\n  for (var i = 0; i < dimensions; ++i) {\n    var token = this$1.token_;\n    if (this$1.match(TokenType.NUMBER)) {\n      coordinates.push(token.value);\n    } else {\n      break;\n    }\n  }\n  if (coordinates.length == dimensions) {\n    return coordinates;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointList_ = function parsePointList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parsePoint_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parsePoint_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointTextList_ = function parsePointTextList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parsePointText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parsePointText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parseLineStringTextList_ = function parseLineStringTextList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parseLineStringText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parseLineStringText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePolygonTextList_ = function parsePolygonTextList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parsePolygonText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parsePolygonText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {boolean} Whether the token implies an empty geometry.\n * @private\n */\nParser.prototype.isEmptyGeometry_ = function isEmptyGeometry_ () {\n  var isEmpty = this.isTokenType(TokenType.TEXT) &&\n      this.token_.value == EMPTY;\n  if (isEmpty) {\n    this.consume_();\n  }\n  return isEmpty;\n};\n\n/**\n * Create an error message for an unexpected token error.\n * @return {string} Error message.\n * @private\n */\nParser.prototype.formatErrorMessage_ = function formatErrorMessage_ () {\n  return 'Unexpected `' + this.token_.value + '` at position ' +\n      this.token_.position + ' in `' + this.lexer_.wkt + '`';\n};\n\n/**\n * @return {!module:ol/geom/Geometry} The geometry.\n * @private\n */\nParser.prototype.parseGeometry_ = function parseGeometry_ () {\n  var token = this.token_;\n  if (this.match(TokenType.TEXT)) {\n    var geomType = token.value;\n    this.layout_ = this.parseGeometryLayout_();\n    if (geomType == 'GEOMETRYCOLLECTION') {\n      var geometries = this.parseGeometryCollectionText_();\n      return new GeometryCollection(geometries);\n    } else {\n      var ctor = GeometryConstructor[geomType];\n      if (!ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n\n      var coordinates;\n      switch (geomType) {\n        case 'POINT': {\n          coordinates = this.parsePointText_();\n          break;\n        }\n        case 'LINESTRING': {\n          coordinates = this.parseLineStringText_();\n          break;\n        }\n        case 'POLYGON': {\n          coordinates = this.parsePolygonText_();\n          break;\n        }\n        case 'MULTIPOINT': {\n          coordinates = this.parseMultiPointText_();\n          break;\n        }\n        case 'MULTILINESTRING': {\n          coordinates = this.parseMultiLineStringText_();\n          break;\n        }\n        case 'MULTIPOLYGON': {\n          coordinates = this.parseMultiPolygonText_();\n          break;\n        }\n        default: {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n      }\n\n      if (!coordinates) {\n        if (ctor === GeometryConstructor['POINT']) {\n          coordinates = [NaN, NaN];\n        } else {\n          coordinates = [];\n        }\n      }\n      return new ctor(coordinates, this.layout_);\n    }\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nvar WKT = (function (TextFeature) {\n  function WKT(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ = options.splitCollection !== undefined ?\n      options.splitCollection : false;\n\n  }\n\n  if ( TextFeature ) WKT.__proto__ = TextFeature;\n  WKT.prototype = Object.create( TextFeature && TextFeature.prototype );\n  WKT.prototype.constructor = WKT;\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {module:ol/geom/Geometry|undefined}\n   *     The geometry created.\n   * @private\n   */\n  WKT.prototype.parse_ = function parse_ (wkt) {\n    var lexer = new Lexer(wkt);\n    var parser = new Parser(lexer);\n    return parser.parse();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var geom = this.readGeometryFromText(text, opt_options);\n    if (geom) {\n      var feature = new Feature();\n      feature.setGeometry(geom);\n      return feature;\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var geometries = [];\n    var geometry = this.readGeometryFromText(text, opt_options);\n    if (this.splitCollection_ &&\n        geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n      geometries = (/** @type {module:ol/geom/GeometryCollection} */ (geometry))\n        .getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    var features = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      var feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    var geometry = this.parse_(text);\n    if (geometry) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, opt_options))\n      );\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    }\n    return '';\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], opt_options);\n    }\n    var geometries = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    var collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    return encode(/** @type {module:ol/geom/Geometry} */ (\n      transformWithOptions(geometry, true, opt_options)));\n  };\n\n  return WKT;\n}(TextFeature));\n\n\n/**\n * @param {module:ol/geom/Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  var array = [];\n  var components = geom.getPoints();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  var array = [];\n  var geoms = geom.getGeometries();\n  for (var i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  var array = [];\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  var array = [];\n  var components = geom.getLineStrings();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  var array = [];\n  var rings = geom.getLinearRings();\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  var array = [];\n  var components = geom.getPolygons();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  var layout = geom.getLayout();\n  var dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n\n/**\n * @const\n * @type {Object<string, function(module:ol/geom/Geometry): string>}\n */\nvar GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {module:ol/geom/Geometry} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  var type = geom.getType();\n  var geometryEncoder = GeometryEncoder[type];\n  var enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (geom instanceof SimpleGeometry) {\n    var dimInfo = encodeGeometryLayout(geom);\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\n\nexport default WKT;\n\n//# sourceMappingURL=WKT.js.map","/**\n * @module ol/format/WMSCapabilities\n */\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from '../format/xsd.js';\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\n  makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CAPABILITY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nvar WMSCapabilities = (function (XML) {\n  function WMSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  if ( XML ) WMSCapabilities.__proto__ = XML;\n  WMSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMSCapabilities.prototype.constructor = WMSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    this.version = node.getAttribute('version').trim();\n    var wmsCapabilityObject = pushParseAndPop({\n      'version': this.version\n    }, PARSERS, node, []);\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  };\n\n  return WMSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar SERVICE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CONTACT_PERSON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar EXCEPTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar ATTRIBUTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar REQUEST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar OPERATIONTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar DCPTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar FORMAT_ONLINERESOURCE_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'Format': makeObjectPropertySetter(readString),\n      'OnlineResource': makeObjectPropertySetter(readHref)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar KEYWORDLIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  var extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  var resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/extent~Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  var geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  var westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  var southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  var eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  var northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n\n  var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  var queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  var cascaded = readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  var opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      var childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      var parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  var dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node)\n  };\n  return dimensionObject;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  var formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    var size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  var authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  var metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n\nexport default WMSCapabilities;\n\n//# sourceMappingURL=WMSCapabilities.js.map","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar featureIdentifier = '_feature';\n\n\n/**\n * @const\n * @type {string}\n */\nvar layerIdentifier = '_layer';\n\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nvar WMSGetFeatureInfo = (function (XMLFeature) {\n  function WMSGetFeatureInfo(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n    /**\n     * @private\n     * @type {module:ol/format/GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  if ( XMLFeature ) WMSGetFeatureInfo.__proto__ = XMLFeature;\n  WMSGetFeatureInfo.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WMSGetFeatureInfo.prototype.constructor = WMSGetFeatureInfo;\n\n  /**\n   * @return {Array<string>} layers\n   */\n  WMSGetFeatureInfo.prototype.getLayers = function getLayers () {\n    return this.layers_;\n  };\n\n  /**\n   * @param {Array<string>} layers Layers to parse.\n   */\n  WMSGetFeatureInfo.prototype.setLayers = function setLayers (layers) {\n    this.layers_ = layers;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<module:ol/Feature>} Features.\n   * @private\n   */\n  WMSGetFeatureInfo.prototype.readFeatures_ = function readFeatures_ (node, objectStack) {\n    var this$1 = this;\n\n    node.setAttribute('namespaceURI', this.featureNS_);\n    var localName = node.localName;\n    /** @type {Array<module:ol/Feature>} */\n    var features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n        var layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n        var context = objectStack[0];\n\n        var toRemove = layerIdentifier;\n        var layerName = layer.localName.replace(toRemove, '');\n\n        if (this$1.layers_ && !includes(this$1.layers_, layerName)) {\n          continue;\n        }\n\n        var featureType = layerName +\n            featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this$1.featureNS_;\n\n        var parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this$1.gmlFormat_.readFeatureElement, this$1.gmlFormat_);\n        var parsersNS = makeStructureNS(\n          [context['featureNS'], null], parsers);\n        layer.setAttribute('namespaceURI', this$1.featureNS_);\n        var layerFeatures = pushParseAndPop(\n          [], parsersNS, layer, objectStack, this$1.gmlFormat_);\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      var gmlFeatures = pushParseAndPop([],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n        [{}], this.gmlFormat_);\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMSGetFeatureInfo.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = {};\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    return this.readFeatures_(node, [options]);\n  };\n\n  return WMSGetFeatureInfo;\n}(XMLFeature));\n\n\nexport default WMSGetFeatureInfo;\n\n//# sourceMappingURL=WMSGetFeatureInfo.js.map","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString, readNonNegativeInteger, readDecimal} from '../format/xsd.js';\nimport {pushParseAndPop, makeStructureNS,\n  makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n  * @api\n */\nvar WMTSCapabilities = (function (XML) {\n  function WMTSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {module:ol/format/OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  if ( XML ) WMTSCapabilities.__proto__ = XML;\n  WMTSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMTSCapabilities.prototype.constructor = WMTSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    var version = node.getAttribute('version').trim();\n    var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  };\n\n  return WMTSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CONTENTS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TMS_LINKS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n  });\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TMS_LIMITS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar WGS84_BBOX_READERS = makeStructureNS(\n  OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  var isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  var format = node.getAttribute('format');\n  var template = node.getAttribute('template');\n  var resourceType = node.getAttribute('resourceType');\n  var resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n  var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  var legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  var coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  var x = +coordinates[0];\n  var y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\n\nexport default WMTSCapabilities;\n\n//# sourceMappingURL=WMTSCapabilities.js.map","/**\n * @module ol/format\n */\n\nexport {default as EsriJSON} from './format/EsriJSON.js';\nexport {default as GeoJSON} from './format/GeoJSON.js';\nexport {default as GML} from './format/GML.js';\nexport {default as GPX} from './format/GPX.js';\nexport {default as IGC} from './format/IGC.js';\nexport {default as KML} from './format/KML.js';\nexport {default as MVT} from './format/MVT.js';\nexport {default as OWS} from './format/OWS.js';\nexport {default as Polyline} from './format/Polyline.js';\nexport {default as TopoJSON} from './format/TopoJSON.js';\nexport {default as WFS} from './format/WFS.js';\nexport {default as WKT} from './format/WKT.js';\nexport {default as WMSCapabilities} from './format/WMSCapabilities.js';\nexport {default as WMSGetFeatureInfo} from './format/WMSGetFeatureInfo.js';\nexport {default as WMTSCapabilities} from './format/WMTSCapabilities.js';\n\n//# sourceMappingURL=format.js.map","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(module:ol/Feature):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nvar Heatmap = (function (VectorLayer) {\n  function Heatmap(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array<Array<module:ol/style/Style>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    var weight = options.weight ? options.weight : 'weight';\n    var weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      var weight = weightFunction(feature);\n      var opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      var index = (255 * opacity) | 0;\n      var style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  Heatmap.prototype.createCircle_ = function createCircle_ () {\n    var radius = this.getRadius();\n    var blur = this.getBlur();\n    var halfSize = radius + blur + 1;\n    var size = 2 * halfSize;\n    var context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    var center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  };\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getBlur = function getBlur () {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  };\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getGradient = function getGradient () {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  };\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getRadius = function getRadius () {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\n    this.gradient_ = createGradient(this.getGradient());\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleStyleChanged_ = function handleStyleChanged_ () {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/render/Event} event Post compose event\n   * @private\n   */\n  Heatmap.prototype.handleRender_ = function handleRender_ (event) {\n    var this$1 = this;\n\n    var context = event.context;\n    var canvas = context.canvas;\n    var image = context.getImageData(0, 0, canvas.width, canvas.height);\n    var view8 = image.data;\n    for (var i = 0, ii = view8.length; i < ii; i += 4) {\n      var alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this$1.gradient_[alpha];\n        view8[i + 1] = this$1.gradient_[alpha + 1];\n        view8[i + 2] = this$1.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  };\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setBlur = function setBlur (blur) {\n    this.set(Property.BLUR, blur);\n  };\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setGradient = function setGradient (colors) {\n    this.set(Property.GRADIENT, colors);\n  };\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setRadius = function setRadius (radius) {\n    this.set(Property.RADIUS, radius);\n  };\n\n  return Heatmap;\n}(VectorLayer));\n\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n\n//# sourceMappingURL=Heatmap.js.map","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nvar ImageLayer = (function (Layer) {\n  function ImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {module:ol/LayerType}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n  if ( Layer ) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  return ImageLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = (function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/layer/VectorTile\n */\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorTileRenderType from '../layer/VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport var RenderType = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {module:ol/layer/VectorTileRenderType|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {module:ol/source/VectorTile} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\n * @api\n */\nvar VectorTileLayer = (function (VectorLayer) {\n  function VectorTileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == undefined ||\n       renderMode == VectorTileRenderType.IMAGE ||\n       renderMode == VectorTileRenderType.HYBRID ||\n       renderMode == VectorTileRenderType.VECTOR,\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n      renderMode = VectorTileRenderType.HYBRID;\n    }\n    options.renderMode = renderMode;\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    VectorLayer.call(this, baseOptions);\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR_TILE;\n\n  }\n\n  if ( VectorLayer ) VectorTileLayer.__proto__ = VectorLayer;\n  VectorTileLayer.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  VectorTileLayer.prototype.constructor = VectorTileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return VectorTileLayer;\n}(VectorLayer));\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {module:ol/source/VectorTile} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n\n//# sourceMappingURL=VectorTile.js.map","\n/**\n * @module ol/layer\n */\n\nexport {default as Group} from './layer/Group.js';\nexport {default as Heatmap} from './layer/Heatmap.js';\nexport {default as Image} from './layer/Image.js';\nexport {default as Layer} from './layer/Layer.js';\nexport {default as Tile} from './layer/Tile.js';\nexport {default as Vector} from './layer/Vector.js';\nexport {default as VectorTile} from './layer/VectorTile.js';\n\n//# sourceMappingURL=layer.js.map","/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(module:ol/Image, string)} LoadFunction\n * @api\n */\n\n\nvar ImageWrapper = (function (ImageBase) {\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  if ( ImageBase ) ImageWrapper.__proto__ = ImageBase;\n  ImageWrapper.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageWrapper.prototype.constructor = ImageWrapper;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageWrapper.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  ImageWrapper.prototype.load = function load () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.imageLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  ImageWrapper.prototype.setImage = function setImage (image) {\n    this.image_ = image;\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageWrapper;\n}(ImageBase));\n\n\nexport default ImageWrapper;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<module:ol/coordinate~Coordinate>} source\n * @property {Array<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, module:ol/coordinate~Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(module:ol/extent~Extent, number, number) : module:ol/ImageBase} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = (function (ImageBase) {\n  function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    var maxSourceExtent = sourceProj.getExtent();\n    var maxTargetExtent = targetProj.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    var errorThresholdInPixels = ERROR_THRESHOLD;\n\n    var triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    var sourceExtent = triangulation.calculateSourceExtent();\n    var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    var state = ImageState.LOADED;\n    if (sourceImage) {\n      state = ImageState.IDLE;\n    }\n    var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    ImageBase.call(this, targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {module:ol/ImageBase}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  if ( ImageBase ) ReprojImage.__proto__ = ImageBase;\n  ReprojImage.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ReprojImage.prototype.constructor = ReprojImage;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    ImageBase.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  ReprojImage.prototype.getProjection = function getProjection () {\n    return this.targetProj_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.reproject_ = function reproject_ () {\n    var sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      var width = getWidth(this.targetExtent_) / this.targetResolution_;\n      var height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      var sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.unlistenSource_ = function unlistenSource_ () {\n    unlistenByKey(/** @type {!module:ol/events~EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  };\n\n  return ReprojImage;\n}(ImageBase));\n\n\nexport default ReprojImage;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/Image\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\n\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from '../source/Source.js';\n\n\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = (function (Event) {\n  function ImageSourceEvent(type, image) {\n\n    Event.call(this, type);\n\n    /**\n     * The image related to the event.\n     * @type {module:ol/Image}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n  if ( Event ) ImageSourceEvent.__proto__ = Event;\n  ImageSourceEvent.prototype = Object.create( Event && Event.prototype );\n  ImageSourceEvent.prototype.constructor = ImageSourceEvent;\n\n  return ImageSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/extent~Extent} [extent]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {Array<number>} [resolutions]\n * @property {module:ol/source/State} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @api\n */\nvar ImageSource = (function (Source) {\n  function ImageSource(options) {\n    Source.call(this, {\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {module:ol/reproj/Image}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  if ( Source ) ImageSource.__proto__ = Source;\n  ImageSource.prototype = Object.create( Source && Source.prototype );\n  ImageSource.prototype.constructor = ImageSource;\n\n  /**\n   * @return {Array<number>} Resolutions.\n   * @override\n   */\n  ImageSource.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  ImageSource.prototype.findNearestResolution = function findNearestResolution (resolution) {\n    if (this.resolutions_) {\n      var idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/ImageBase} Single image.\n   */\n  ImageSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    var sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/ImageBase} Single image.\n   * @protected\n   */\n  ImageSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {};\n\n  /**\n   * Handle image change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  ImageSource.prototype.handleImageChange = function handleImageChange (event) {\n    var image = /** @type {module:ol/Image} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  };\n\n  return ImageSource;\n}(Source));\n\n\n/**\n * Default image load function for image sources that use module:ol/Image~Image image\n * instances.\n * @param {module:ol/Image} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  image.getImage().src = src;\n}\n\n\nexport default ImageSource;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {module:ol/size~Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/source/WMSServerType|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageWMS = (function (ImageSource) {\n  function ImageWMS(opt_options) {\n\n    var options = opt_options || {};\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {module:ol/source/WMSServerType|undefined}\n     */\n    this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageWMS.__proto__ = ImageSource;\n  ImageWMS.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageWMS.prototype.constructor = ImageWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  ImageWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageWMS.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    var center = getCenter(extent);\n    var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    var params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  ImageWMS.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageWMS.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  };\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageWMS.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageWMS.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageWMS.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  ImageWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return ImageWMS;\n}(ImageSource));\n\n\nexport default ImageWMS;\n\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n//# sourceMappingURL=net.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = (function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {module:ol/TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {module:ol/Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<number, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!module:ol/Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {module:ol/TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {module:ol/TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {number} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {number} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {number} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\nvar ImageTile = (function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.image_.naturalWidth && this.image_.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = (function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      var tile = this$1.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this$1.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = (function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    var this$1 = this;\n\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<module:ol/Tile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this$1.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this$1.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n  var this$1 = this;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this$1.resolutions_[i] / this$1.resolutions_[i + 1];\n      } else {\n        if (this$1.resolutions_[i] / this$1.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n    var this$1 = this;\n\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this$1.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this$1.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n    var this$1 = this;\n\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this$1.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  var options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\n\nimport {VOID} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @api\n */\nvar TileSource = (function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {module:ol/TileCache}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = '';\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {!Object<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {};\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {module:ol/tilegrid/TileGrid} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/TileCache} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/size~Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/proj/Projection=} opt_projection Projection.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  return TileSource;\n}(Source));\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = VOID;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = (function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {module:ol/Tile}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires module:ol/source/TileEvent\n */\nvar UrlTile = (function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction = this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction);\n    }\n\n    /**\n     * @private\n     * @type {!Object<number, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {module:ol/Tile} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} opt_key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, opt_key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof opt_key !== 'undefined') {\n      this.setKey(opt_key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), url);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), key);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires module:ol/source/Tile~TileSourceEvent\n * @api\n */\nvar TileImage = (function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n     *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, module:ol/TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, module:ol/tilegrid/TileGrid>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this$1.tileCacheForProjection) {\n        if (this$1.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this$1.tileCacheForProjection) {\n      var tileCache = this$1.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection).toString();\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!module:ol/Tile} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this$1.tileCacheForProjection) {\n      this$1.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj).toString();\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/BingMaps\n */\n\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = (function (TileImage) {\n  function BingMaps(options) {\n\n    var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    TileImage.call(this, {\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n        this.imagerySet_ +\n        '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n        '&c=' + this.culture_;\n\n    requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n      'jsonp');\n\n  }\n\n  if ( TileImage ) BingMaps.__proto__ = TileImage;\n  BingMaps.prototype = Object.create( TileImage && TileImage.prototype );\n  BingMaps.prototype.constructor = BingMaps;\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  BingMaps.prototype.getApiKey = function getApiKey () {\n    return this.apiKey_;\n  };\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  BingMaps.prototype.getImagerySet = function getImagerySet () {\n    return this.imagerySet_;\n  };\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  BingMaps.prototype.handleImageryMetadataResponse = function handleImageryMetadataResponse (response) {\n    if (response.statusCode != 200 ||\n        response.statusDescription != 'OK' ||\n        response.authenticationResultCode != 'ValidCredentials' ||\n        response.resourceSets.length != 1 ||\n        response.resourceSets[0].resources.length != 1) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    var resource = response.resourceSets[0].resources[0];\n    var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    var sourceProjection = this.getProjection();\n    var extent = extentFromProjection(sourceProjection);\n    var tileSize = resource.imageWidth == resource.imageHeight ?\n      resource.imageWidth : [resource.imageWidth, resource.imageHeight];\n    var tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize / (this.hidpi_ ? 2 : 1)\n    });\n    this.tileGrid = tileGrid;\n\n    var culture = this.culture_;\n    var hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function(subdomain) {\n        var quadKeyTileCoord = [0, 0, 0];\n        var imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {module:ol/proj/Projection} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function(tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n              var url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      }));\n\n    if (resource.imageryProviders) {\n      var transform = getTransformFromProjections(\n        getProjection('EPSG:4326'), this.getProjection());\n\n      this.setAttributions(function(frameState) {\n        var attributions = [];\n        var zoom = frameState.viewState.zoom;\n        resource.imageryProviders.map(function(imageryProvider) {\n          var intersecting = false;\n          var coverageAreas = imageryProvider.coverageAreas;\n          for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            var coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              var bbox = coverageArea.bbox;\n              var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              var extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState(SourceState.READY);\n  };\n\n  return BingMaps;\n}(TileImage));\n\nexport default BingMaps;\n\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = (function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/CartoDB\n */\n\nimport {assign} from '../obj.js';\nimport SourceState from '../source/State.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = (function (XYZ) {\n  function CartoDB(options) {\n    XYZ.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      state: SourceState.LOADING,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  if ( XYZ ) CartoDB.__proto__ = XYZ;\n  CartoDB.prototype = Object.create( XYZ && XYZ.prototype );\n  CartoDB.prototype.constructor = CartoDB;\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  CartoDB.prototype.getConfig = function getConfig () {\n    return this.config_;\n  };\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  CartoDB.prototype.updateConfig = function updateConfig (config) {\n    assign(this.config_, config);\n    this.initializeMap_();\n  };\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  CartoDB.prototype.setConfig = function setConfig (config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  };\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  CartoDB.prototype.initializeMap_ = function initializeMap_ () {\n    var paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    var client = new XMLHttpRequest();\n    client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  };\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  CartoDB.prototype.handleInitResponse_ = function handleInitResponse_ (paramHash, event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.setState(SourceState.ERROR);\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState(SourceState.READY);\n    } else {\n      this.setState(SourceState.ERROR);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  CartoDB.prototype.handleInitError_ = function handleInitError_ (event) {\n    this.setState(SourceState.ERROR);\n  };\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  CartoDB.prototype.applyTemplate_ = function applyTemplate_ (data) {\n    var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n        '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  };\n\n  return CartoDB;\n}(XYZ));\n\n\nexport default CartoDB;\n\n//# sourceMappingURL=CartoDB.js.map","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from '../source/Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {module:ol/extent~Extent} [extent] Extent.\n * @property {function(module:ol/Feature):module:ol/geom/Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/Vector} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = (function (VectorSource) {\n  function Cluster(options) {\n    VectorSource.call(this, {\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {Array<module:ol/Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {module:ol/geom/Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction = options.geometryFunction || function(feature) {\n      var geometry = /** @type {module:ol/geom/Point} */ (feature.getGeometry());\n      assert(geometry instanceof Point,\n        10); // The default `geometryFunction` can only handle `module:ol/geom/Point~Point` geometries\n      return geometry;\n    };\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @protected\n     */\n    this.source = options.source;\n\n    listen(this.source, EventType.CHANGE, this.refresh, this);\n  }\n\n  if ( VectorSource ) Cluster.__proto__ = VectorSource;\n  Cluster.prototype = Object.create( VectorSource && VectorSource.prototype );\n  Cluster.prototype.constructor = Cluster;\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  Cluster.prototype.getDistance = function getDistance () {\n    return this.distance;\n  };\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {module:ol/source/Vector} Source.\n   * @api\n   */\n  Cluster.prototype.getSource = function getSource () {\n    return this.source;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Cluster.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.clear();\n      this.resolution = resolution;\n      this.cluster();\n      this.addFeatures(this.features);\n    }\n  };\n\n  /**\n   * Set the distance in pixels between clusters.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  Cluster.prototype.setDistance = function setDistance (distance) {\n    this.distance = distance;\n    this.refresh();\n  };\n\n  /**\n   * handle the source changing\n   * @override\n   */\n  Cluster.prototype.refresh = function refresh () {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n    VectorSource.prototype.refresh.call(this);\n  };\n\n  /**\n   * @protected\n   */\n  Cluster.prototype.cluster = function cluster () {\n    var this$1 = this;\n\n    if (this.resolution === undefined) {\n      return;\n    }\n    this.features.length = 0;\n    var extent = createEmpty();\n    var mapDistance = this.distance * this.resolution;\n    var features = this.source.getFeatures();\n\n    /**\n     * @type {!Object<string, boolean>}\n     */\n    var clustered = {};\n\n    for (var i = 0, ii = features.length; i < ii; i++) {\n      var feature = features[i];\n      if (!(getUid(feature).toString() in clustered)) {\n        var geometry = this$1.geometryFunction(feature);\n        if (geometry) {\n          var coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          var neighbors = this$1.source.getFeaturesInExtent(extent);\n          neighbors = neighbors.filter(function(neighbor) {\n            var uid = getUid(neighbor).toString();\n            if (!(uid in clustered)) {\n              clustered[uid] = true;\n              return true;\n            } else {\n              return false;\n            }\n          });\n          this$1.features.push(this$1.createCluster(neighbors));\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {Array<module:ol/Feature>} features Features\n   * @return {module:ol/Feature} The cluster feature.\n   * @protected\n   */\n  Cluster.prototype.createCluster = function createCluster (features) {\n    var this$1 = this;\n\n    var centroid = [0, 0];\n    for (var i = features.length - 1; i >= 0; --i) {\n      var geometry = this$1.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n\n    var cluster = new Feature(new Point(centroid));\n    cluster.set('features', features);\n    return cluster;\n  };\n\n  return Cluster;\n}(VectorSource));\n\n\nexport default Cluster;\n\n//# sourceMappingURL=Cluster.js.map","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} params ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = (function (ImageSource) {\n  function ImageArcGISRest(opt_options) {\n\n    var options = opt_options || {};\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = [0, 0];\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageArcGISRest.__proto__ = ImageSource;\n  ImageArcGISRest.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageArcGISRest.prototype.constructor = ImageArcGISRest;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageArcGISRest.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    var params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    extent = extent.slice();\n    var centerX = (extent[0] + extent[2]) / 2;\n    var centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      var halfWidth = this.ratio_ * getWidth(extent) / 2;\n      var halfHeight = this.ratio_ * getHeight(extent) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    var width = Math.ceil(getWidth(extent) / imageResolution);\n    var height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - imageResolution * width / 2;\n    extent[2] = centerX + imageResolution * width / 2;\n    extent[1] = centerY - imageResolution * height / 2;\n    extent[3] = centerY + imageResolution * height / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    var url = this.url_;\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  };\n\n  return ImageArcGISRest;\n}(ImageSource));\n\n\nexport default ImageArcGISRest;\n\n//# sourceMappingURL=ImageArcGISRest.js.map","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport ImageSource from '../source/Image.js';\n\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:module:ol/ImageCanvas, module:ol/extent~Extent, number,\n *     number, module:ol/size~Size, module:ol/proj/Projection): HTMLCanvasElement} FunctionType\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {module:ol/source/ImageCanvas~FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{module:ol/extent~Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{module:ol/size~Size}` the image size, and `{module:ol/proj/Projection~Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See @link: {@link module:ol/Observable~Observable#changed}\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {module:ol/source/State} [state] Source state.\n */\n\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = (function (ImageSource) {\n  function ImageCanvasSource(options) {\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state\n    });\n\n    /**\n    * @private\n    * @type {module:ol/source/ImageCanvas~FunctionType}\n    */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n    * @private\n    * @type {module:ol/ImageCanvas}\n    */\n    this.canvas_ = null;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.renderedRevision_ = 0;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.ratio_ = options.ratio !== undefined ?\n      options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageCanvasSource.__proto__ = ImageSource;\n  ImageCanvasSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageCanvasSource.prototype.constructor = ImageCanvasSource;\n\n  /**\n  * @inheritDoc\n  */\n  ImageCanvasSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    var canvas = this.canvas_;\n    if (canvas &&\n       this.renderedRevision_ == this.getRevision() &&\n       canvas.getResolution() == resolution &&\n       canvas.getPixelRatio() == pixelRatio &&\n       containsExtent(canvas.getExtent(), extent)) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    var canvasElement = this.canvasFunction_(\n      extent, resolution, pixelRatio, size, projection);\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  };\n\n  return ImageCanvasSource;\n}(ImageSource));\n\n\nexport default ImageCanvasSource;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport ImageWrapper from '../Image.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = (function (ImageSource) {\n  function ImageMapGuide(options) {\n\n    ImageSource.call(this, {\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ = options.displayDpi !== undefined ?\n      options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n      options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ = options.useOverlay !== undefined ?\n      options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n  }\n\n  if ( ImageSource ) ImageMapGuide.__proto__ = ImageSource;\n  ImageMapGuide.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageMapGuide.prototype.constructor = ImageMapGuide;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageMapGuide.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageMapGuide.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      var imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n        projection);\n      image = new ImageWrapper(extent, resolution, pixelRatio,\n        imageUrl, this.crossOrigin_,\n        this.imageLoadFunction_);\n      listen(image, EventType.CHANGE,\n        this.handleImageChange, this);\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageMapGuide.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.changed();\n  };\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object<string, string|number>} params Request parameters.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  ImageMapGuide.prototype.getUrl = function getUrl (baseUrl, params, extent, size, projection) {\n    var scale = getScale(extent, size,\n      this.metersPerUnit_, this.displayDpi_);\n    var center = getCenter(extent);\n    var baseParams = {\n      'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1]\n    };\n    assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  };\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  return ImageMapGuide;\n}(ImageSource));\n\n\n/**\n * @param {module:ol/extent~Extent} extent The map extents.\n * @param {module:ol/size~Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  var mcsW = getWidth(extent);\n  var mcsH = getHeight(extent);\n  var devW = size[0];\n  var devH = size[1];\n  var mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\nexport default ImageMapGuide;\n\n//# sourceMappingURL=ImageMapGuide.js.map","/**\n * @module ol/source/ImageStatic\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/extent~Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/size~Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = (function (ImageSource) {\n  function Static(options) {\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : null;\n\n    var /** @type {module:ol/Image~LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined ?\n          options.imageLoadFunction : defaultImageLoadFunction;\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: getProjection(options.projection)\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = new ImageWrapper(this.imageExtent_, undefined, 1, this.url_, crossOrigin, imageLoadFunction);\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  }\n\n  if ( ImageSource ) Static.__proto__ = ImageSource;\n  Static.prototype = Object.create( ImageSource && ImageSource.prototype );\n  Static.prototype.constructor = Static;\n\n  /**\n   * Returns the image extent\n   * @return {module:ol/extent~Extent} image extent.\n   * @api\n   */\n  Static.prototype.getImageExtent = function getImageExtent () {\n    return this.imageExtent_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  };\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  Static.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.handleImageChange = function handleImageChange (evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      var imageExtent = this.image_.getExtent();\n      var image = this.image_.getImage();\n      var imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      var resolution = getHeight(imageExtent) / imageHeight;\n      var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        var context = createCanvasContext2D(targetWidth, imageHeight);\n        var canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight,\n          0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n    ImageSource.prototype.handleImageChange.call(this, evt);\n  };\n\n  return Static;\n}(ImageSource));\n\n\nexport default Static;\n\n//# sourceMappingURL=ImageStatic.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = (function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","/**\n * @module ol/source/Raster\n */\nimport {getUid} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from '../source/Image.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = (function (Event) {\n  function RasterSourceEvent(type, frameState, data) {\n    Event.call(this, type);\n\n    /**\n     * The raster extent.\n     * @type {module:ol/extent~Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n\n  }\n\n  if ( Event ) RasterSourceEvent.__proto__ = Event;\n  RasterSourceEvent.prototype = Object.create( Event && Event.prototype );\n  RasterSourceEvent.prototype.constructor = RasterSourceEvent;\n\n  return RasterSourceEvent;\n}(Event));\n\n/**\n * @typedef {Object} Options\n * @property {Array<module:ol/source/Source|module:ol/layer/Layer>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {module:ol/source/Raster~Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {module:ol/source/Raster~RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires ol/source/Raster~RasterSourceEvent\n * @api\n */\nvar RasterSource = (function (ImageSource) {\n  function RasterSource(options) {\n    var this$1 = this;\n\n    ImageSource.call(this, {});\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.worker_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/source/Raster~RasterOperationType}\n     */\n    this.operationType_ = options.operationType !== undefined ?\n      options.operationType : RasterOperationType.PIXEL;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<module:ol/renderer/canvas/Layer>}\n     */\n    this.renderers_ = createRenderers(options.sources);\n\n    for (var r = 0, rr = this.renderers_.length; r < rr; ++r) {\n      listen(this$1.renderers_[r], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n\n    /**\n     * @private\n     * @type {module:ol/TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      function() {\n        return 1;\n      },\n      this.changed.bind(this));\n\n    var layerStatesArray = getLayerStatesArray(this.renderers_);\n    var layerStates = {};\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n\n    /**\n     * The most recently requested frame state.\n     * @type {module:ol/PluggableMap~FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {module:ol/ImageCanvas}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap~FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      extent: null,\n      focus: null,\n      index: 0,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      skippedFeatureUids: {},\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {module:ol/View~State} */ ({\n        rotation: 0\n      }),\n      viewHints: [],\n      wantedTiles: {}\n    };\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n\n  }\n\n  if ( ImageSource ) RasterSource.__proto__ = ImageSource;\n  RasterSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  RasterSource.prototype.constructor = RasterSource;\n\n  /**\n   * Set the operation.\n   * @param {module:ol/source/Raster~Operation} operation New operation.\n   * @param {Object=} opt_lib Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  RasterSource.prototype.setOperation = function setOperation (operation, opt_lib) {\n    this.worker_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === RasterOperationType.IMAGE,\n      queue: 1,\n      lib: opt_lib,\n      threads: this.threads_\n    });\n    this.changed();\n  };\n\n  /**\n   * Update the stored frame state.\n   * @param {module:ol/extent~Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {module:ol/proj/Projection} projection The view projection.\n   * @return {module:ol/PluggableMap~FrameState} The updated frame state.\n   * @private\n   */\n  RasterSource.prototype.updateFrameState_ = function updateFrameState_ (extent, resolution, projection) {\n\n    var frameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, this.frameState_));\n\n    frameState.viewState = /** @type {module:ol/View~State} */ (assign({}, frameState.viewState));\n\n    var center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.focus = center;\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Date.now();\n    frameState.animate = false;\n\n    var viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  };\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  RasterSource.prototype.allSourcesReady_ = function allSourcesReady_ () {\n    var this$1 = this;\n\n    var ready = true;\n    var source;\n    for (var i = 0, ii = this.renderers_.length; i < ii; ++i) {\n      source = this$1.renderers_[i].getLayer().getSource();\n      if (source.getState() !== SourceState.READY) {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RasterSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    var frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      var renderedResolution = this.renderedImageCanvas_.getResolution();\n      var renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  };\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  RasterSource.prototype.processSources_ = function processSources_ () {\n    var this$1 = this;\n\n    var frameState = this.requestedFrameState_;\n    var len = this.renderers_.length;\n    var imageDatas = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var imageData = getImageData(\n        this$1.renderers_[i], frameState, frameState.layerStatesArray[i]);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    var data = {};\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n    this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n  };\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object} data The user data.\n   * @private\n   */\n  RasterSource.prototype.onWorkerComplete_ = function onWorkerComplete_ (frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    var extent = frameState.extent;\n    var resolution = frameState.viewState.resolution;\n    if (resolution !== this.requestedFrameState_.viewState.resolution ||\n        !equals(extent, this.requestedFrameState_.extent)) {\n      return;\n    }\n\n    var context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      var width = Math.round(getWidth(extent) / resolution);\n      var height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n  };\n\n  /**\n   * @override\n   */\n  RasterSource.prototype.getImageInternal = function getImageInternal () {\n    return null; // not implemented\n  };\n\n  return RasterSource;\n}(ImageSource));\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {module:ol/renderer/canvas/Layer} renderer Layer renderer.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {module:ol/layer/Layer~State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  var width = frameState.size[0];\n  var height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    var canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array<module:ol/renderer/canvas/Layer>} renderers Layer renderers.\n * @return {Array<module:ol/layer/Layer~State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array<module:ol/source/Source>} sources The sources.\n * @return {Array<module:ol/renderer/canvas/Layer>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  var len = sources.length;\n  var renderers = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {module:ol/source/Source} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createRenderer(source) {\n  var renderer = null;\n  if (source instanceof TileSource) {\n    renderer = createTileRenderer(source);\n  } else if (source instanceof ImageSource) {\n    renderer = createImageRenderer(source);\n  } else if (source instanceof TileLayer) {\n    renderer = new CanvasTileLayerRenderer(source);\n  } else if (source instanceof Layer &&\n      (source.getType() == LayerType.IMAGE || source.getType() == LayerType.VECTOR)) {\n    renderer = new CanvasImageLayerRenderer(source);\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {module:ol/source/Image} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createImageRenderer(source) {\n  var layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {module:ol/source/Tile} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createTileRenderer(source) {\n  var layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\nexport default RasterSource;\n\n//# sourceMappingURL=Raster.js.map","/**\n * @module ol/source/Stamen\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from '../source/OSM.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} [layer] Layer.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {boolean} [opaque] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = (function (XYZ) {\n  function Stamen(options) {\n    var i = options.layer.indexOf('-');\n    var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    var providerConfig = ProviderConfig[provider];\n\n    var layerConfig = LayerConfig[options.layer];\n\n    var url = options.url !== undefined ? options.url :\n      'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n        '/{z}/{x}/{y}.' + layerConfig.extension;\n\n    XYZ.call(this, {\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) Stamen.__proto__ = XYZ;\n  Stamen.prototype = Object.create( XYZ && XYZ.prototype );\n  Stamen.prototype.constructor = Stamen;\n\n  return Stamen;\n}(XYZ));\n\nexport default Stamen;\n\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\n * or if you want to access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n * for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = (function (TileImage) {\n  function TileArcGISRest(opt_options) {\n\n    var options = opt_options || {};\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  if ( TileImage ) TileArcGISRest.__proto__ = TileImage;\n  TileArcGISRest.prototype = Object.create( TileImage && TileImage.prototype );\n  TileArcGISRest.prototype.constructor = TileArcGISRest;\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileArcGISRest.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var this$1 = this;\n\n    var i = 0;\n    var res = [];\n    for (var key in this$1.params_) {\n      res[i++] = key + '-' + this$1.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {module:ol/extent~Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileArcGISRest.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileArcGISRest.prototype.fixedTileUrlFunction = function fixedTileUrlFunction (tileCoord, pixelRatio, projection) {\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    var tileExtent = tileGrid.getTileCoordExtent(\n      tileCoord, this.tmpExtent_);\n    var tileSize = toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    var baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  };\n\n  return TileArcGISRest;\n}(TileImage));\n\n\nexport default TileArcGISRest;\n\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/TileDebug\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\nvar LabeledTile = (function (Tile) {\n  function LabeledTile(tileCoord, tileSize, text) {\n\n    Tile.call(this, tileCoord, TileState.LOADED);\n\n    /**\n    * @private\n    * @type {module:ol/size~Size}\n    */\n    this.tileSize_ = tileSize;\n\n    /**\n    * @private\n    * @type {string}\n    */\n    this.text_ = text;\n\n    /**\n    * @private\n    * @type {HTMLCanvasElement}\n    */\n    this.canvas_ = null;\n\n  }\n\n  if ( Tile ) LabeledTile.__proto__ = Tile;\n  LabeledTile.prototype = Object.create( Tile && Tile.prototype );\n  LabeledTile.prototype.constructor = LabeledTile;\n\n  /**\n  * Get the image element for this tile.\n  * @return {HTMLCanvasElement} Image.\n  */\n  LabeledTile.prototype.getImage = function getImage () {\n    if (this.canvas_) {\n      return this.canvas_;\n    } else {\n      var tileSize = this.tileSize_;\n      var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n      context.strokeStyle = 'black';\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n      context.fillStyle = 'black';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = '24px sans-serif';\n      context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\n\n      this.canvas_ = context.canvas;\n      return context.canvas;\n    }\n  };\n\n  /**\n  * @override\n  */\n  LabeledTile.prototype.load = function load () {};\n\n  return LabeledTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = (function (TileSource) {\n  function TileDebug(options) {\n\n    TileSource.call(this, {\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n  }\n\n  if ( TileSource ) TileDebug.__proto__ = TileSource;\n  TileDebug.prototype = Object.create( TileSource && TileSource.prototype );\n  TileDebug.prototype.constructor = TileDebug;\n\n  /**\n  * @inheritDoc\n  */\n  TileDebug.prototype.getTile = function getTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return /** @type {!module:ol/source/TileDebug~LabeledTile} */ (this.tileCache.get(tileCoordKey));\n    } else {\n      var tileSize = toSize(this.tileGrid.getTileSize(z));\n      var tileCoord = [z, x, y];\n      var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n      var text = !textTileCoord ? '' :\n        this.getTileCoordForTileUrlFunction(textTileCoord).toString();\n      var tile = new LabeledTile(tileCoord, tileSize, text);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n  return TileDebug;\n}(TileSource));\n\n\nexport default TileDebug;\n\n//# sourceMappingURL=TileDebug.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See http://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = (function (TileImage) {\n  function TileJSON(options) {\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {TileJSON}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileImage ) TileJSON.__proto__ = TileImage;\n  TileJSON.prototype = Object.create( TileImage && TileImage.prototype );\n  TileJSON.prototype.constructor = TileJSON;\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  TileJSON.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  TileJSON.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n  /**\n   * @return {TileJSON} The tilejson object.\n   * @api\n   */\n  TileJSON.prototype.getTileJSON = function getTileJSON () {\n    return this.tileJSON_;\n  };\n\n  /**\n   * @protected\n   * @param {TileJSON} tileJSON Tile JSON.\n   */\n  TileJSON.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON.bounds !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON.bounds, transform);\n    }\n\n    var minZoom = tileJSON.minzoom || 0;\n    var maxZoom = tileJSON.maxzoom || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON.tiles, tileGrid);\n\n    if (tileJSON.attribution !== undefined && !this.getAttributions()) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON.attribution];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  };\n\n  /**\n   * @protected\n   */\n  TileJSON.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n  return TileJSON;\n}(TileImage));\n\n\nexport default TileJSON;\n\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~TileClass}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {module:ol/source/WMSServerType|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = (function (TileImage) {\n  function TileWMS(opt_options) {\n\n    var options = opt_options || {};\n\n    var params = options.params || {};\n\n    var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/source/WMSServerType|undefined}\n     */\n    this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n\n  }\n\n  if ( TileImage ) TileWMS.__proto__ = TileImage;\n  TileWMS.prototype = Object.create( TileImage && TileImage.prototype );\n  TileWMS.prototype.constructor = TileWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  TileWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getGutter = function getGutter () {\n    return this.gutter_;\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {module:ol/extent~Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileWMS.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      var tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n    /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileWMS.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var this$1 = this;\n\n    var i = 0;\n    var res = [];\n    for (var key in this$1.params_) {\n      res[i++] = key + '-' + this$1.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.fixedTileUrlFunction = function fixedTileUrlFunction (tileCoord, pixelRatio, projection) {\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(\n      tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      pixelRatio, projection, baseParams);\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  };\n\n  /**\n   * @private\n   */\n  TileWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return TileWMS;\n}(TileImage));\n\n\nexport default TileWMS;\n\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\nexport var CustomTile = (function (Tile) {\n  function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n\n    Tile.call(this, tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n\n  }\n\n  if ( Tile ) CustomTile.__proto__ = Tile;\n  CustomTile.prototype = Object.create( Tile && Tile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  CustomTile.prototype.getImage = function getImage () {\n    return null;\n  };\n\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  CustomTile.prototype.getData = function getData (coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    var xRelative = (coordinate[0] - this.extent_[0]) /\n        (this.extent_[2] - this.extent_[0]);\n    var yRelative = (coordinate[1] - this.extent_[1]) /\n        (this.extent_[3] - this.extent_[1]);\n\n    var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    var code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    var data = null;\n    if (code in this.keys_) {\n      var id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  };\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {function(this: T, *)} callback Callback.\n   * @param {T=} opt_this The object to use as `this` in the callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @template T\n   */\n  CustomTile.prototype.forDataAtCoordinate = function forDataAtCoordinate (coordinate, callback, opt_this, opt_request) {\n    if (this.state == TileState.IDLE && opt_request === true) {\n      listenOnce(this, EventType.CHANGE, function(e) {\n        callback.call(opt_this, this.getData(coordinate));\n      }, this);\n      this.loadInternal_();\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback.call(opt_this, this.getData(coordinate));\n        }.bind(this), 0);\n      } else {\n        callback.call(opt_this, this.getData(coordinate));\n      }\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  CustomTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n\n  /**\n   * @private\n   */\n  CustomTile.prototype.handleError_ = function handleError_ () {\n    this.state = TileState.ERROR;\n    this.changed();\n  };\n\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  CustomTile.prototype.handleLoad_ = function handleLoad_ (json) {\n    this.grid_ = json.grid;\n    this.keys_ = json.keys;\n    this.data_ = json.data;\n\n    this.state = TileState.EMPTY;\n    this.changed();\n  };\n\n\n  /**\n   * @private\n   */\n  CustomTile.prototype.loadInternal_ = function loadInternal_ () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(this.src_, this.handleLoad_.bind(this),\n          this.handleError_.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  CustomTile.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  CustomTile.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleError_();\n  };\n\n\n  /**\n   * @override\n   */\n  CustomTile.prototype.load = function load () {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    }\n  };\n\n  return CustomTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = (function (TileSource) {\n  function UTFGrid(options) {\n    TileSource.call(this, {\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = options.preemptive !== undefined ?\n      options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileSource ) UTFGrid.__proto__ = TileSource;\n  UTFGrid.prototype = Object.create( TileSource && TileSource.prototype );\n  UTFGrid.prototype.constructor = UTFGrid;\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  UTFGrid.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  UTFGrid.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  UTFGrid.prototype.getTemplate = function getTemplate () {\n    return this.template_;\n  };\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*)} callback Callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  UTFGrid.prototype.forDataAtCoordinateAndResolution = function forDataAtCoordinateAndResolution (\n    coordinate, resolution, callback, opt_request) {\n    if (this.tileGrid) {\n      var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n        coordinate, resolution);\n      var tile = /** @type {!module:ol/source/UTFGrid~CustomTile} */(this.getTile(\n        tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n      tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  };\n\n\n  /**\n   * @protected\n   */\n  UTFGrid.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {TileJSON} tileJSON Tile JSON.\n   */\n  UTFGrid.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON.bounds !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON.bounds, transform);\n    }\n\n    var minZoom = tileJSON.minzoom || 0;\n    var maxZoom = tileJSON.maxzoom || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON.template;\n\n    var grids = tileJSON.grids;\n    if (!grids) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON.attribution !== undefined) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON.attribution];\n        }\n        return null;\n      });\n    }\n\n    this.setState(SourceState.READY);\n\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  UTFGrid.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      var tileCoord = [z, x, y];\n      var urlTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n      var tile = new CustomTile(\n        tileCoord,\n        tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n        tileUrl !== undefined ? tileUrl : '',\n        this.tileGrid.getTileCoordExtent(tileCoord),\n        this.preemptive_,\n        this.jsonp_);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  UTFGrid.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UTFGrid;\n}(TileSource));\n\n\nexport default UTFGrid;\n\n//# sourceMappingURL=UTFGrid.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<module:ol/coordinate~Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<module:ol/size~Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * @property {Array<module:ol/size~Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = (function (TileGrid) {\n  function WMTSTileGrid(options) {\n    TileGrid.call(this, {\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  if ( TileGrid ) WMTSTileGrid.__proto__ = TileGrid;\n  WMTSTileGrid.prototype = Object.create( TileGrid && TileGrid.prototype );\n  WMTSTileGrid.prototype.constructor = WMTSTileGrid;\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  WMTSTileGrid.prototype.getMatrixId = function getMatrixId (z) {\n    return this.matrixIds_[z];\n  };\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  WMTSTileGrid.prototype.getMatrixIds = function getMatrixIds () {\n    return this.matrixIds_;\n  };\n\n  return WMTSTileGrid;\n}(TileGrid));\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {module:ol/extent~Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {module:ol/tilegrid/WMTS} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array<number>} */\n  var resolutions = [];\n  /** @type {!Array<string>} */\n  var matrixIds = [];\n  /** @type {!Array<module:ol/coordinate~Coordinate>} */\n  var origins = [];\n  /** @type {!Array<module:ol/size~Size>} */\n  var tileSizes = [];\n  /** @type {!Array<module:ol/size~Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from '../source/TileImage.js';\nimport WMTSRequestEncoding from '../source/WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/tilegrid/WMTS} tileGrid Tile grid.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/WMTSRequestEncoding|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {module:ol/ImageTile~TileClass} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [version='image/jpeg'] Image format.\n * @property {string} [format='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = (function (TileImage) {\n  function WMTS(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    var requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {module:ol/source/WMTSRequestEncoding} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    var tileGrid = options.tileGrid;\n\n    var urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {module:ol/source/WMTSRequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  if ( TileImage ) WMTS.__proto__ = TileImage;\n  WMTS.prototype = Object.create( TileImage && TileImage.prototype );\n  WMTS.prototype.constructor = WMTS;\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @override\n   */\n  WMTS.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n  };\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  WMTS.prototype.getDimensions = function getDimensions () {\n    return this.dimensions_;\n  };\n\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  WMTS.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  WMTS.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  WMTS.prototype.getMatrixSet = function getMatrixSet () {\n    return this.matrixSet_;\n  };\n\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {module:ol/source/WMTSRequestEncoding} Request encoding.\n   * @api\n   */\n  WMTS.prototype.getRequestEncoding = function getRequestEncoding () {\n    return this.requestEncoding_;\n  };\n\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  WMTS.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  WMTS.prototype.getVersion = function getVersion () {\n    return this.version_;\n  };\n\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  WMTS.prototype.getKeyForDimensions_ = function getKeyForDimensions_ () {\n    var this$1 = this;\n\n    var i = 0;\n    var res = [];\n    for (var key in this$1.dimensions_) {\n      res[i++] = key + '-' + this$1.dimensions_[key];\n    }\n    return res.join('/');\n  };\n\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  WMTS.prototype.updateDimensions = function updateDimensions (dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  };\n\n  return WMTS;\n}(TileImage));\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?module:ol/source/WMTS~Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          var tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          var supportedCRS = tileMatrixSet['SupportedCRS'];\n          var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          var proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  var matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  var matrixLimits = /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    var projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n * @this {module:ol/source/WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  var requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  var tileGrid = this.tileGrid;\n  var dimensions = this.dimensions_;\n\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, dimensions);\n        var url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\nexport var CustomTile = (function (ImageTile) {\n  function CustomTile(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    ImageTile.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n\n  }\n\n  if ( ImageTile ) CustomTile.__proto__ = ImageTile;\n  CustomTile.prototype = Object.create( ImageTile && ImageTile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  /**\n   * @inheritDoc\n   */\n  CustomTile.prototype.getImage = function getImage () {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    var image = ImageTile.prototype.getImage.call(this);\n    if (this.state == TileState.LOADED) {\n      var tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      } else {\n        var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n        context.drawImage(image, 0, 0);\n        this.zoomifyImage_ = context.canvas;\n        return context.canvas;\n      }\n    } else {\n      return image;\n    }\n  };\n\n  return CustomTile;\n}(ImageTile));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {module:ol/size~Size} [size] Size of the image.\n * @property {module:ol/extent~Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = (function (TileImage) {\n  function Zoomify(opt_options) {\n\n    var options = opt_options || {};\n\n    var size = options.size;\n    var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n      options.tierSizeCalculation :\n      TierSizeCalculation.DEFAULT;\n\n    var imageWidth = size[0];\n    var imageHeight = size[1];\n    var extent = options.extent || [0, -size[1], size[0], 0];\n    var tierSizeInTiles = [];\n    var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    var tileSizeForTierSizeCalculation = tileSize;\n\n    switch (tierSizeCalculation) {\n      case TierSizeCalculation.DEFAULT:\n        while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case TierSizeCalculation.TRUNCATED:\n        var width = imageWidth;\n        var height = imageHeight;\n        while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation)\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default:\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    var resolutions = [1];\n    var tileCountUpToTier = [0];\n    for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(1 << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    var tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions\n    });\n\n    var url = options.url;\n    if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    var urls = expandUrl(url);\n\n    /**\n     * @param {string} template Template.\n     * @return {module:ol/Tile~UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n\n      return (\n        /**\n         * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {module:ol/proj/Projection} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            var tileCoordZ = tileCoord[0];\n            var tileCoordX = tileCoord[1];\n            var tileCoordY = -tileCoord[2] - 1;\n            var tileIndex =\n                tileCoordX +\n                tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            var tileSize = tileGrid.getTileSize(tileCoordZ);\n            var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileSize) | 0;\n            var localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n    var ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition\n    });\n\n  }\n\n  if ( TileImage ) Zoomify.__proto__ = TileImage;\n  Zoomify.prototype = Object.create( TileImage && TileImage.prototype );\n  Zoomify.prototype.constructor = Zoomify;\n\n  return Zoomify;\n}(TileImage));\n\nexport default Zoomify;\n\n//# sourceMappingURL=Zoomify.js.map","/**\n * @module ol/source\n */\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n\n//# sourceMappingURL=source.js.map","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n\n/**\n * @classesc\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar Atlas = function Atlas(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array<module:ol/style/Atlas~AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object<string, module:ol/style/Atlas~AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function get (id) {\n  return this.entries_[id] || null;\n};\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function add (id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  for (var i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    var block = this$1.emptyBlocks_[i];\n    if (block.width >= width + this$1.space_ &&\n        block.height >= height + this$1.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this$1.space_,\n        offsetY: block.y + this$1.space_,\n        image: this$1.canvas_\n      };\n      this$1.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this$1.context_,\n        block.x + this$1.space_, block.y + this$1.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this$1.split_(i, block, width + this$1.space_, height + this$1.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function split_ (index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  var newBlock1;\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function updateBlocks_ (index, newBlock1, newBlock2) {\n  var args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\n\nexport default Atlas;\n\n//# sourceMappingURL=Atlas.js.map","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {VOID} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nvar INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nvar MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @classdesc\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n * @api\n */\nvar AtlasManager = function AtlasManager(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array<module:ol/style/Atlas>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array<module:ol/style/Atlas>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function getInfo (id) {\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {Array<module:ol/style/Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n *  or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function getInfo_ (atlases, id) {\n  for (var i = 0, ii = atlases.length; i < ii; ++i) {\n    var atlas = atlases[i];\n    var info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n *  image.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function mergeInfos_ (info, hitInfo) {\n  return (\n    /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=} opt_renderHitCallback Called to render a hit-detection image onto a hit\n *  detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}The position and atlas image for the\n *  entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function add (id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  var info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : VOID;\n\n  var hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo}The position and atlas image for the entry,\n *  or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function add_ (isHitAtlas, id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size = (void 0);\n      if (isHitAtlas) {\n        size = Math.min(this$1.currentHitSize_ * 2, this$1.maxSize_);\n        this$1.currentHitSize_ = size;\n      } else {\n        size = Math.min(this$1.currentSize_ * 2, this$1.maxSize_);\n        this$1.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this$1.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\n\nexport default AtlasManager;\n\n//# sourceMappingURL=AtlasManager.js.map","/**\n * @module ol/style\n */\n\n\nexport {default as Atlas} from './style/Atlas.js';\nexport {default as AtlasManager} from './style/AtlasManager.js';\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n\n//# sourceMappingURL=style.js.map","\r\nimport Map from 'ol/Map.js';\r\nimport View from 'ol/View.js';\r\nimport { GPX, GeoJSON, IGC, KML, TopoJSON } from 'ol/format.js';\r\nimport { defaults as defaultInteractions, DragAndDrop } from 'ol/interaction.js';\r\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer.js';\r\nimport { Image as ImageLayer } from 'ol/layer.js';\r\nimport ImageWMS from 'ol/source/ImageWMS.js';\r\nimport { OSM, Vector as VectorSource } from 'ol/source.js';\r\nimport { Circle as CircleStyle, Fill, Stroke, Style } from 'ol/style.js';\r\nimport { transform as Transform } from 'ol/proj';\r\nimport BingMaps from 'ol/source/BingMaps.js';\r\nimport { bbox as bboxStrategy } from 'ol/loadingstrategy.js';\r\n\r\n// import createItems from 'ol/tripleM/LayerList.js';\r\n\r\n\r\nvar styleJson = readFile('./json/test.json');\r\nconsole.log(styleJson);\r\n\r\n\r\nvar pcpStyle = [\r\n    new Style({\r\n        fill: new Fill({\r\n            color: 'rgba(255,0,0,1)'\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#0ff',\r\n            width: 1\r\n        })\r\n    }),\r\n    new Style({\r\n        fill: new Fill({\r\n            color: 'rgba(200,50,0,1)'\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#0ff',\r\n            width: 1\r\n        })\r\n    }),\r\n    new Style({\r\n        fill: new Fill({\r\n            color: 'rgba(150,100,0,1)'\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#0ff',\r\n            width: 1\r\n        })\r\n    }),\r\n    new Style({\r\n        fill: new Fill({\r\n            color: 'rgba(100,150,0,1)'\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#0ff',\r\n            width: 1\r\n        })\r\n    }),\r\n    new Style({\r\n        fill: new Fill({\r\n            color: 'rgba(50,200,0,1)'\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#0ff',\r\n            width: 1\r\n        })\r\n    }),\r\n    new Style({\r\n        fill: new Fill({\r\n            color: 'rgba(0,255,0,1)'\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#0ff',\r\n            width: 1\r\n        })\r\n    })\r\n];\r\nvar defaultStyle = {\r\n    'Point': new Style({\r\n        image: new CircleStyle({\r\n            fill: new Fill({\r\n                color: 'rgba(255,255,0,0.5)'\r\n            }),\r\n            radius: 5,\r\n            stroke: new Stroke({\r\n                color: '#ff0',\r\n                width: 1\r\n            })\r\n        })\r\n    }),\r\n    'LineString': new Style({\r\n        stroke: new Stroke({\r\n            color: '#f00',\r\n            width: 3\r\n        })\r\n    }),\r\n    'Polygon': new Style({\r\n        fill: new Fill({\r\n            color: 'rgba(0,255,255,0.5)'\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#0ff',\r\n            width: 1\r\n        })\r\n    }),\r\n    'MultiPoint': new Style({\r\n        image: new CircleStyle({\r\n            fill: new Fill({\r\n                color: 'rgba(255,0,255,0.5)'\r\n            }),\r\n            radius: 5,\r\n            stroke: new Stroke({\r\n                color: '#f0f',\r\n                width: 1\r\n            })\r\n        })\r\n    }),\r\n    'MultiLineString': new Style({\r\n        stroke: new Stroke({\r\n            color: '#0f0',\r\n            width: 3\r\n        })\r\n    }),\r\n    'MultiPolygon': new Style({\r\n        fill: new Fill({\r\n            color: 'rgba(0,0,255,0.5)'\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#00f',\r\n            width: 1\r\n        })\r\n    })\r\n};\r\n\r\nvar styleFunction = function (feature, resolution) {\r\n    var featureStyleFunction = feature.getStyleFunction();\r\n    if (featureStyleFunction) {\r\n        return featureStyleFunction.call(feature, resolution);\r\n    } else {\r\n        return defaultStyle[feature.getGeometry().getType()];\r\n    }\r\n};\r\n\r\nvar dragAndDropInteraction = new DragAndDrop({\r\n    formatConstructors: [\r\n        GPX,\r\n        GeoJSON,\r\n        IGC,\r\n        KML,\r\n        TopoJSON\r\n    ]\r\n});\r\nvar Aletsch_riv = new ImageLayer({\r\n    title: \"Aletsch_riv\",\r\n    // extent: [-13884991, 2870341, -7455066, 6338219],\r\n    source: new ImageWMS({\r\n        url: 'http://95.216.0.116:8080/geoserver/wms',\r\n        params: {\r\n            'LAYERS': 'Glacier:Aletsch_riv'\r\n        },\r\n        ratio: 1,\r\n\r\n        serverType: 'geoserver'\r\n    })\r\n});\r\n// console.log(Aletsch_riv.get('OBJECTID'));\r\n// var Aletsch_sub = new ImageLayer({\r\n//     opacity: 0.5,    \r\n    \r\n//     title: \"Aletsch_sub\",\r\n//     // extent: [-13884991, 2870341, -7455066, 6338219],\r\n//     source: new ImageWMS({\r\n//         url: 'http://95.216.0.116:8080/geoserver/wms',\r\n//         params: { 'LAYERS': 'Glacier:Aletsch_sub' },\r\n//         ratio: 1,\r\n//         serverType: 'geoserver'\r\n//     }),\r\n//     style: new Style({\r\n//         fill: new Fill({\r\n//             color: 'rgba(255,0,0,0.1)'\r\n//         }),\r\n//         stroke: new Stroke({\r\n//             color: '#0ff',\r\n//             width: 1\r\n//         })\r\n//     })\r\n// });\r\n\r\nvar Aletsch_subSource = new VectorSource({\r\n    format: new GeoJSON(),\r\n    url: function (extent) {\r\n        return 'http://chakadwebgis.ir/geoserver/vaghefi/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=vaghefi:subs1_projected&' +\r\n            'outputFormat=application/json&srsname=EPSG:4326&' +\r\n            'bbox=' + extent.join(',') + ',EPSG:4326';\r\n    },\r\n    // maxFeatures=50&outputFormat=application%2Fjson\r\n    strategy: bboxStrategy\r\n});\r\n\r\n\r\nvar Aletsch_sub = new VectorLayer({\r\n    source: Aletsch_subSource,\r\n    style: setStyle\r\n});\r\n\r\nvar Gorner_riv = new ImageLayer({\r\n    title: \"Gorner_riv\",\r\n    // extent: [-13884991, 2870341, -7455066, 6338219],\r\n    source: new ImageWMS({\r\n        url: 'http://95.216.0.116:8080/geoserver/wms',\r\n        params: { 'LAYERS': 'Glacier:Gorner_riv' },\r\n        ratio: 1,\r\n        serverType: 'geoserver'\r\n    })\r\n});\r\n\r\nvar Gorner_Sub = new ImageLayer({\r\n    opacity: 0.5,\r\n    \r\n    title: \"Gorner_Sub\",\r\n    // extent: [-13884991, 2870341, -7455066, 6338219],\r\n    source: new ImageWMS({\r\n        url: 'http://95.216.0.116:8080/geoserver/wms',\r\n        params: { 'LAYERS': 'Glacier:Gorner_Sub' },\r\n        ratio: 1,\r\n        serverType: 'geoserver'\r\n    })\r\n});\r\n\r\nvar map = new Map({\r\n    interactions: defaultInteractions().extend([dragAndDropInteraction]),\r\n    layers: [\r\n        new TileLayer({\r\n            title: \"basemap\",\r\n            source: new BingMaps({ key: \"AuZoV8yCqZQq3raQl6Wb-EHw1ssB4cgvs3sczPfg0fqrelVtOvGze1FwJvJ9Ooy0\", imagerySet: 'Aerial' })\r\n        }),\r\n        Gorner_Sub, \r\n        Aletsch_sub,               \r\n        Aletsch_riv,\r\n        Gorner_riv,\r\n    ],\r\n    target: 'map',\r\n    view: new View({\r\n        center: Transform([8.001124, 46.200142], 'EPSG:4326', 'EPSG:3857'),\r\n        \r\n        // center: Transform([51.43 , 35.701949], 'EPSG:4326', 'EPSG:3857'),\r\n        // projection: projection,\r\n        zoom: 9.5\r\n    })\r\n});\r\n\r\ndragAndDropInteraction.on('addfeatures', function (event) {\r\n    var vectorSource = new VectorSource({\r\n        features: event.features\r\n    });\r\n    map.addLayer(new VectorLayer({\r\n        source: vectorSource,\r\n        style: styleFunction\r\n    }));\r\n    map.getView().fit(vectorSource.getExtent());\r\n});\r\n\r\nvar displayFeatureInfo = function (pixel) {\r\n    var features = [];\r\n    map.forEachFeatureAtPixel(pixel, function (feature) {\r\n        features.push(feature);\r\n    });\r\n    // console.log(features);\r\n    if (features.length > 0) {\r\n        var info = [];\r\n        var i, ii;\r\n        for (i = 0, ii = features.length; i < ii; ++i) {\r\n            info.push(features[i].get('name'));\r\n        }\r\n        // console.log(info);\r\n        document.getElementById('info').innerHTML = info.join(', ') || '&nbsp';\r\n    } else {\r\n        document.getElementById('info').innerHTML = '&nbsp;';\r\n    }\r\n};\r\n\r\nmap.on('pointermove', function (evt) {\r\n    if (evt.dragging) {\r\n        return;\r\n    }\r\n    var pixel = map.getEventPixel(evt.originalEvent);\r\n    displayFeatureInfo(pixel);\r\n});\r\n\r\nmap.on('click', function (evt) {\r\n    displayFeatureInfo(evt.pixel);\r\n});\r\nvar LayerListUl = document.getElementById(\"layerlistul\");\r\nmap.getLayers().forEach(function (layer) {\r\n    var title = layer.get('title');\r\n    if (title != \"basemap\") {\r\n        \r\n        var li = document.createElement(\"li\");\r\n        var div = document.createElement(\"div\");\r\n        div.setAttribute(\"class\", \"material-switch pull-right\");\r\n\r\n        var input = document.createElement(\"input\");\r\n        input.setAttribute(\"type\", \"checkbox\");\r\n        input.setAttribute(\"id\", title);\r\n        input.setAttribute(\"name\", title);\r\n        input.checked = true;\r\n        var label = document.createElement(\"label\");\r\n        label.setAttribute(\"for\", title);\r\n        label.setAttribute(\"class\", \"label-success\");\r\n        li.appendChild(document.createTextNode(title));\r\n        div.appendChild(input);\r\n        div.appendChild(label);\r\n\r\n        li.appendChild(div);\r\n        li.setAttribute(\"class\", \"list-group-item\");\r\n        LayerListUl.appendChild(li);\r\n\r\n        input.addEventListener( 'change', function() {\r\n            // layer.visible = this.checked;\r\n            layer.set('visible', this.checked);\r\n        });\r\n    }\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction setStyle(feature, resolution){\r\n    console.log(\"set style called!\");\r\n    var id = feature.get('OBJECTID');\r\n    var element = styleJson[id - 1][\"PCP\"];\r\n    console.log(element);\r\n    return pcpStyle[element/40];\r\n}\r\n\r\nfunction readFile(path) {\r\n    var result = null;\r\n    var request = new XMLHttpRequest();\r\n    request.open('GET', path, false);\r\n    request.send();\r\n    if(request.status == 200){\r\n        result = request.response;\r\n    }\r\n    return JSON.parse(result);\r\n}\r\n"]}